{"version":3,"file":"static/js/main.227af5ea.js","mappings":"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","sources":["src/utils/Images.js","src/utils/Colors.js","src/components/AppButton.js","src/components/Activity.js","src/config/apiMethod.js","src/config/url.js","src/modules/loginUser.js","src/container/Login/Login.js","src/container/AccessRequest/AccessRequest.js","src/container/FogotPassword/ForgotPassword.js","src/components/Header.js","src/modules/getDashboardData.js","src/modules/getContacts.js","src/modules/getMeterValue.js","src/container/Dashboard/Dashboard.js","src/modules/getLeads.js","src/container/Leads/Leads.js","src/container/Contact/Contact.js","src/modules/transectionActivity.js","src/modules/addDisposition.js","src/container/DisPosition/DisPosition.js","src/container/TransactionDesk/TransactionDesk.js","src/navigation/TabNavigator.js","src/container/Contacts/Contacts.js","src/modules/getProperties.js","src/modules/getSearchProperties.js","src/modules/getSearchHistory.js","src/container/Properties/Properties.js","src/container/Profile/Profile.js","src/modules/getFavoriteProperties.js","src/navigation/DrawerNavigator.js","src/container/AccessRequestSent/AccessRequestSent.js","src/container/EnterPin/EnterPin.js","src/container/ContactsDetails/ContactsDetails.js","src/modules/addContact.js","src/container/AddContacts/AddContacts.js","src/container/AddProperties/AddProperties.js","src/modules/deleteContact.js","src/container/EditContactsDetails/EditContactsDetails.js","src/modules/getPropertiesDetails.js","src/container/PropertiesDetails/PropertiesDetails.js","src/components/CustomAlert.js","src/container/DeletePropertiy/DeletePropertiy.js","src/container/AddClients/AddClients.js","src/modules/getMyClientDetails.js","src/modules/activityHistory.js","src/modules/getActivityTask.js","src/modules/getNoteData.js","src/modules/getDocument.js","src/modules/getDisposition.js","src/modules/getTodayDipos.js","src/modules/currentDisposition.js","src/container/MyClientsDetails/MyClientsDetails.js","src/container/EditProfile/EditProfile.js","src/modules/addActivityTask.js","src/container/AddActivity/AddActivity.js","src/modules/activityAddnote.js","src/container/NewNote/NewNote.js","src/container/EditClientsDetails/EditClientsDetails.js","src/container/Documents/Documents.js","src/container/PropertiesViewedByLeads/PropertiesViewedByLeads.js","src/container/PropertiesViewed/PropertiesViewed.js","src/modules/editAcitivity.js","src/container/EditActivity/EditActivity.js","src/modules/transectionAddActivity.js","src/container/Transactions/NewActivies.js","src/container/Transactions/TransactionDetails.js","src/navigation/StackNavigator.js","src/modules/getMyClientList.js","src/redux/store.js","App.js","index.js","node_modules/moment/locale|sync|/^/.//.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var BaseUrl = \"../../assets/\";\n\nconst Images = {\n  // appLogo: require(BaseUrl + \"appLogo.png\"),\n  // myClients: require(BaseUrl + \"account.png\"),\n  // dashboard: require(BaseUrl + \"dashboard.png\"),\n  // drawerMenu: require(BaseUrl + \"menu.png\"),\n  // search: require(BaseUrl + \"search.png\"),\n  // back: require(BaseUrl + \"back.png\"),\n  // close: require(BaseUrl + \"close.png\"),\n  // // new 5/4/2023\n  // google: require(BaseUrl + \"google.png\"),\n  // user: require(BaseUrl + \"user.png\"),\n  // people: require(BaseUrl + \"people.png\"),\n  // home: require(BaseUrl + \"home.png\"),\n  // signOut: require(BaseUrl + \"signOut.png\"),\n  // plus: require(BaseUrl + \"plus.png\"),\n  // // new 6/4/2023\n  // 1: require(BaseUrl + \"1.jpg\"),\n  // profileCam: require(BaseUrl + \"profileCam.png\"),\n  // leftArrow: require(BaseUrl + \"leftArrow.png\"),\n  // downArrow: require(BaseUrl + \"arrowDown.png\"),\n  // uploadImage: require(BaseUrl + \"uploadImage.png\"),\n  // edit: require(BaseUrl + \"edit.png\"),\n  // chat: require(BaseUrl + \"chat.png\"),\n  // mail: require(BaseUrl + \"mail.png\"),\n  // phone: require(BaseUrl + \"phone.png\"),\n  // map: require(BaseUrl + \"map.png\"),\n  // fav: require(BaseUrl + \"fav.png\"),\n  // profilePic: require(BaseUrl + \"profilePic.png\"),\n  // share: require(BaseUrl + \"share.png\"),\n};\nexport default Images;\n","const Colors = {\n  PrimaryColor: \"#576ebd\",\n  white: \"#ffffff\",\n  buttonColor: \"#8092cd\",\n  black: \"#373737\",\n  gray: \"#e6e8ea\",\n  cream: \"#e5e5e5\",\n  lightblack: \"#8d8a8a\",\n};\nexport default Colors;\n","import React from 'react';\r\nimport {SafeAreaView, Text, View, Image, TouchableOpacity} from 'react-native';\r\nimport Colors from '../utils/Colors';\r\n\r\nexport default function AppButton(props) {\r\n  return (\r\n    <TouchableOpacity\r\n      style={[\r\n        {\r\n          width: '90%',\r\n          height: 50,\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          backgroundColor: Colors.buttonColor,\r\n          marginTop: '5%',\r\n          borderRadius: 3,\r\n          alignSelf: 'center',\r\n        },\r\n        props.btnStyle,\r\n      ]}\r\n      onPress={props.onPress}>\r\n      <Text\r\n        allowFontScaling={false}\r\n        style={[\r\n          {\r\n            color: Colors.white,\r\n            fontSize: 14,\r\n          },\r\n          props.textStyle,\r\n        ]}>\r\n        {props.btnText}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\nimport {View, ActivityIndicator} from 'react-native';\nimport Colors from '../utils/Colors';\n\nconst Activity = () => {\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: Colors.PrimaryColor,\n      }}>\n      <ActivityIndicator size=\"large\" color={Colors.white} />\n    </View>\n  );\n};\n\nexport default Activity;\n","import axios from \"axios\";\r\n\r\n/* Posting Webservice Here */\r\nexport const postAPI = async (\r\n  url,\r\n  data,\r\n  header = {},\r\n  params = {},\r\n  Authorization = {}\r\n) => {\r\n  /* Checking for Internet connection */\r\n  const connection = true;\r\n  /* If successfully connected */\r\n  if (connection) {\r\n    return axios({\r\n      method: \"post\",\r\n      url: url,\r\n      timeout: 1000 * 60, //Time out of 60 Sec\r\n      data: data,\r\n      headers: header,\r\n      params: params,\r\n      Authorization: Authorization,\r\n    });\r\n  } else {\r\n    /* throw error for No internet connection */\r\n    throw new Error(\"No Internet Connection\");\r\n  }\r\n};\r\n\r\n/* Upload image Webservice Here */\r\nexport const uploadImageAPI = async (url, data, header = {}) => {\r\n  /* Checking for Internet connection */\r\n  const connection = true;\r\n  /* If successfully connected */\r\n  if (connection) {\r\n    return axios({\r\n      method: \"post\",\r\n      url: url,\r\n      timeout: 1000 * 60, //Time out of 60 Sec\r\n      data: data,\r\n      headers: header,\r\n    });\r\n  } else {\r\n    /* throw error for No internet connection */\r\n    throw new Error(\"No Internet Connection\");\r\n  }\r\n};\r\n\r\n/* Get Webservice Here */\r\nexport const getAPI = async (\r\n  url,\r\n  header = {},\r\n  params = {},\r\n  Authorization = {}\r\n) => {\r\n  /* Checking for Internet connection */\r\n  const connection = true;\r\n  /* If successfully connected */\r\n  if (connection) {\r\n    return axios({\r\n      method: \"get\",\r\n      url: url,\r\n      timeout: 10000 * 60, //Time out of 60 Sec\r\n      headers: header,\r\n      params: params,\r\n      Authorization: Authorization,\r\n    });\r\n  } else {\r\n    /* throw error for No internet connection */\r\n    throw new Error(\"No Internet Connection\");\r\n  }\r\n};\r\n\r\nexport const putAPI = async (url, data, header = {}) => {\r\n  /* Checking for Internet connection */\r\n  const connection = true;\r\n  /* If successfully connected */\r\n  if (connection) {\r\n    return axios({\r\n      method: \"put\",\r\n      url: url,\r\n      timeout: 1000 * 60, //Time out of 60 Sec\r\n      data: data,\r\n      headers: header,\r\n    });\r\n  } else {\r\n    /* throw error for No internet connection */\r\n    throw new Error(\"No Internet Connection\");\r\n  }\r\n};\r\n\r\nexport const deleteAPI = async (url, data, header = {}) => {\r\n  /* Checking for Internet connection */\r\n  const connection = true;\r\n  /* If successfully connected */\r\n  if (connection) {\r\n    return axios({\r\n      method: \"delete\",\r\n      url: url,\r\n      timeout: 1000 * 60, //Time out of 60 Sec\r\n      data: data,\r\n      headers: header,\r\n    });\r\n  } else {\r\n    /* throw error for No internet connection */\r\n    throw new Error(\"No Internet Connection\");\r\n  }\r\n};\r\n","export const url = {\r\n  BASE_URL: 'https://surf.topsearchrealty.com/',\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { postAPI } from \"../config/apiMethod\";\r\nimport { url } from \"../config/url\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nexport const loginUser = createAsyncThunk(\"loginUser\", async (dispatch) => {\r\n  console.log(\r\n    \"value check\",\r\n    \"https://surf.topsearchrealty.com/\" + \"wp-json/custom-plugin/login/\",\r\n    dispatch\r\n  );\r\n  return await postAPI(\r\n    \"https://surf.topsearchrealty.com/\" + \"wp-json/custom-plugin/login/\",\r\n    dispatch\r\n  )\r\n    .then(async (response) => {\r\n      const { data } = response;\r\n      if (data.status) {\r\n        const ids = data.data.ID;\r\n        await AsyncStorage.setItem(\"userId\", ids);\r\n        await AsyncStorage.setItem(\"userDetails\", JSON.stringify(data.data));\r\n        await AsyncStorage.setItem(\r\n          \"imageUri\",\r\n          JSON.stringify(data.metadata.custom_picture)\r\n        );\r\n        return data;\r\n      } else {\r\n        return data;\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      if (e.response) {\r\n        console.log(\"api issue\", e.response);\r\n      } else if (e.request) {\r\n        console.log(\"api issue\", e.response);\r\n      } else {\r\n        console.log(\"api issue\", e.response);\r\n      }\r\n    });\r\n});\r\n\r\nconst loginUserSlice = createSlice({\r\n  name: \"login\",\r\n  initialState: {\r\n    loginData: [],\r\n    status: null,\r\n  },\r\n  extraReducers: {\r\n    [loginUser.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [loginUser.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.loginData = action.payload;\r\n    },\r\n    [loginUser.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default loginUserSlice.reducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Alert,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport Images from \"../../utils/Images\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport AppButton from \"../../components/AppButton\";\r\nimport Activity from \"../../components/Activity\";\r\nimport { loginUser } from \"../../modules/loginUser\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport * as AuthSession from \"expo-auth-session\";\r\n// For Add Google SignIn\r\n// import {\r\n//   GoogleSignin,\r\n//   GoogleSigninButton,\r\n//   statusCodes,\r\n// } from \"@react-native-google-signin/google-signin\";\r\nexport default function Login({ navigation }) {\r\n  const [email, setEmail] = useState(\"john123\");\r\n  const [password, setPassword] = useState(\"test123456\");\r\n  const [activity, setActivity] = useState(false);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // GoogleSignin.configure({\r\n    //   // Mandatory method to call before calling signIn()\r\n    //   scopes: [\"https://www.googleapis.com/auth/drive.readonly\"],\r\n    //   // Replace with your webClientId\r\n    //   // Generated from Firebase console\r\n    //   webClientId:\r\n    //     \"395789572020-7rq94as2vajfqvr9vhrbdhpg166gdpqm.apps.googleusercontent.com\",\r\n    // });\r\n  }, []);\r\n  // const googleLogin = async () => {\r\n  //   try {\r\n  //     await GoogleSignin.hasPlayServices();\r\n  //     const userInfo = await GoogleSignin.signIn();\r\n  //     const { accessToken, idToken } = await GoogleSignin.signIn();\r\n  //     const credential = auth.GoogleAuthProvider.credential(\r\n  //       idToken,\r\n  //       accessToken\r\n  //     );\r\n  //     await auth().signInWithCredential(credential);\r\n  //   } catch (error) {\r\n  //     if (error.code === statusCodes.SIGN_IN_CANCELLED) {\r\n  //       // user cancelled the login flow\r\n  //       console.log(\"Signin Cancel\");\r\n  //     } else if (error.code === statusCodes.IN_PROGRESS) {\r\n  //       console.log(\"Signin in progress\");\r\n  //       // operation (f.e. sign in) is in progress already\r\n  //     } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\r\n  //       console.log(\"PLAY_SERVICES_NOT_AVAILABLE\");\r\n  //       // play services not available or outdated\r\n  //     } else {\r\n  //       // some other error happened\r\n  //     }\r\n  //   }\r\n  // };\r\n  const fogotPassword = () => {\r\n    navigation.navigate(\"ForgotPassword\");\r\n  };\r\n  const accessRequestAction = () => {};\r\n  const go = () => {\r\n    setActivity(true);\r\n    userLogin();\r\n    // const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    // if (reg.test(email) === true) {\r\n    //   userLogin();\r\n    // } else {\r\n    //   if (email == '') {\r\n    //     Alert.alert('Enter Email Address');\r\n    //     console.log('Enter Email Address');\r\n    //   } else {\r\n    //     Alert.alert('Email is Invalid');\r\n    //     console.log('Email is invalid');\r\n    //   }\r\n    // }\r\n  };\r\n  const userLogin = () => {\r\n    let data = {\r\n      username: email,\r\n      password: password,\r\n    };\r\n    dispatch(loginUser(data)).then((response) => {\r\n    \r\n      if (response.payload.status) {\r\n        if (response.payload.status) {\r\n          navigation.navigate(\"EnterPin\", { email: email });\r\n          setTimeout(() => {\r\n            setActivity(false);\r\n          }, 3000);\r\n        } else {\r\n          navigation.navigate(\"AccessRequest\", { email: email });\r\n          setTimeout(() => {\r\n            setActivity(false);\r\n          }, 3000);\r\n        }\r\n      } else {\r\n        Alert.alert(\"Please Check E-mail and Password\");\r\n        setActivity(false);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      {!activity ? (\r\n        <ScrollView\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              height: 100,\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Text\r\n              style={{ fontSize: 20, color: Colors.white, fontWeight: \"bold\" }}\r\n            >\r\n              Lokul CRM WIP\r\n            </Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              height: 400,\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Text\r\n              style={{ fontSize: 70, color: Colors.white, fontWeight: \"bold\" }}\r\n            >\r\n              Welcome\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                fontSize: 20,\r\n                color: Colors.white,\r\n                fontWeight: \"500\",\r\n                marginTop: 10,\r\n              }}\r\n            >\r\n              Please enter your email address\r\n            </Text>\r\n            <View style={styles.inputView}>\r\n              <TextInput\r\n                style={styles.TextInput}\r\n                autoCapitalize=\"none\"\r\n                placeholder=\"Email address\"\r\n                placeholderTextColor={Colors.white}\r\n                value={email}\r\n                onChangeText={setEmail}\r\n              />\r\n            </View>\r\n            <View style={styles.inputView}>\r\n              <TextInput\r\n                style={styles.TextInput}\r\n                autoCapitalize=\"none\"\r\n                placeholder=\"Password\"\r\n                placeholderTextColor={Colors.white}\r\n                secureTextEntry={true}\r\n                value={password}\r\n                onChangeText={setPassword}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ height: 200, width: \"100%\" }}>\r\n            <AppButton\r\n              onPress={() => go()}\r\n              btnText={\"Continue\"}\r\n              textStyle={{\r\n                fontSize: 20,\r\n                fontWeight: \"500\",\r\n                color: Colors.black,\r\n              }}\r\n              btnStyle={{\r\n                borderRadius: 6,\r\n                backgroundColor: Colors.white,\r\n              }}\r\n            />\r\n            <TouchableOpacity\r\n              //onPress={() => googleLogin()}\r\n              style={{\r\n                width: \"90%\",\r\n                height: 50,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: Colors.buttonColor,\r\n                marginTop: \"5%\",\r\n                borderRadius: 3,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Image\r\n                source={require(\"../../../assets/google.png\")}\r\n                style={{ height: 20, width: 20 }}\r\n              ></Image>\r\n              <Text\r\n                allowFontScaling={false}\r\n                style={{\r\n                  color: Colors.white,\r\n                  fontSize: 20,\r\n                  fontWeight: \"500\",\r\n                  marginLeft: 10,\r\n                }}\r\n              >\r\n                Sign in with google\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </ScrollView>\r\n      ) : (\r\n        <Activity />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.PrimaryColor,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  image: {\r\n    marginBottom: 40,\r\n    height: 200,\r\n    width: 200,\r\n  },\r\n  inputView: {\r\n    backgroundColor: Colors.buttonColor,\r\n    borderRadius: 5,\r\n    width: \"90%\",\r\n    height: 50,\r\n    marginTop: 30,\r\n    alignItems: \"center\",\r\n    borderWidth: 2,\r\n    borderColor: Colors.white,\r\n    justifyContent: \"center\",\r\n  },\r\n  TextInput: {\r\n    width: \"90%\",\r\n    color: Colors.white,\r\n    fontSize: 20,\r\n  },\r\n  forgot_button: {\r\n    height: 30,\r\n    marginBottom: 30,\r\n  },\r\n  loginBtn: {\r\n    width: \"80%\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    backgroundColor: \"#FF1493\",\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from \"react-native\";\r\n\r\nimport Images from \"../../utils/Images\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport AppButton from \"../../components/AppButton\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport default function AccessRequest(props) {\r\n  const emailAddress = props.route.params.email;\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const backAction = () => {\r\n    navigation.goBack();\r\n  };\r\n  const dashboardAction = () => {\r\n    navigation.navigate(\"AccessRequestSent\", { email: emailAddress });\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <ScrollView\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          backgroundColor: Colors.PrimaryColor,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 100,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{ fontSize: 20, color: Colors.white, fontWeight: \"bold\" }}\r\n          >\r\n            Lokul CRM WIP\r\n          </Text>\r\n        </View>\r\n        <View\r\n          style={{\r\n            height: 300,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{ fontSize: 40, color: Colors.white, fontWeight: \"bold\" }}\r\n          >\r\n            You need access\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              fontSize: 20,\r\n              color: Colors.white,\r\n              fontWeight: \"500\",\r\n              marginTop: 10,\r\n              width: \"90%\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            Request access, or switch to an account with access to sign in to\r\n            this page.\r\n          </Text>\r\n          <View style={styles.inputView}>\r\n            <Text\r\n              style={{\r\n                fontSize: 20,\r\n                color: Colors.white,\r\n                fontWeight: \"500\",\r\n                marginTop: 10,\r\n                width: \"90%\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              {emailAddress}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View style={{ height: 400, width: \"100%\" }}>\r\n          <AppButton\r\n            onPress={() => dashboardAction()}\r\n            btnText={\"Request access\"}\r\n            textStyle={{ fontSize: 20, fontWeight: \"500\", color: Colors.black }}\r\n            btnStyle={{\r\n              marginTop: \"13%\",\r\n              borderRadius: 6,\r\n              backgroundColor: Colors.white,\r\n            }}\r\n          />\r\n          <AppButton\r\n            onPress={() => backAction()}\r\n            btnText={\"Back to sign in\"}\r\n            textStyle={{ fontSize: 20, fontWeight: \"500\", color: Colors.white }}\r\n            btnStyle={{\r\n              marginTop: \"13%\",\r\n              borderRadius: 6,\r\n              backgroundColor: Colors.buttonColor,\r\n            }}\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.PrimaryColor,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  image: {\r\n    marginBottom: 40,\r\n    height: 200,\r\n    width: 200,\r\n  },\r\n  inputView: {\r\n    width: \"90%\",\r\n    marginTop: 30,\r\n    alignItems: \"center\",\r\n    borderColor: Colors.white,\r\n    justifyContent: \"center\",\r\n  },\r\n  TextInput: {\r\n    width: \"90%\",\r\n    color: Colors.white,\r\n    fontSize: 20,\r\n  },\r\n  forgot_button: {\r\n    height: 30,\r\n    marginBottom: 30,\r\n  },\r\n  loginBtn: {\r\n    width: \"80%\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    backgroundColor: \"#FF1493\",\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport Images from \"../../utils/Images\";\r\nimport Colors from \"../../utils/Colors\";\r\n\r\nexport default function ForgotPassword({ navigation }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const changePassword = () => {\r\n    navigation.navigate(\"Login\");\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image style={styles.image} source={Images.appLogo} />\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          placeholder=\"Email/Name\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(email) => setEmail(email)}\r\n        />\r\n      </View>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          placeholder=\"Password.\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          secureTextEntry={true}\r\n          onChangeText={(password) => setPassword(password)}\r\n        />\r\n      </View>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          placeholder=\" Confirm Password.\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          secureTextEntry={true}\r\n          onChangeText={(confirmPassword) =>\r\n            setConfirmPassword(confirmPassword)\r\n          }\r\n        />\r\n      </View>\r\n\r\n      <TouchableOpacity\r\n        onPress={() => changePassword()}\r\n        style={styles.loginBtn}\r\n      >\r\n        <Text style={styles.loginText}>Change Password</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.white,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  image: {\r\n    marginBottom: 40,\r\n    height: 200,\r\n    width: 200,\r\n  },\r\n  inputView: {\r\n    backgroundColor: \"#FFC0CB\",\r\n    borderRadius: 30,\r\n    width: \"70%\",\r\n    height: 45,\r\n    marginBottom: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  TextInput: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginLeft: 20,\r\n  },\r\n  forgot_button: {\r\n    height: 30,\r\n    marginBottom: 30,\r\n  },\r\n  loginBtn: {\r\n    width: \"80%\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    backgroundColor: \"#FF1493\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\nimport { View, TouchableOpacity, Image, Text } from \"react-native\";\nimport Colors from \"../utils/Colors\";\nimport Images from \"../utils/Images\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst Header = (props) => {\n  const { label, plusButton } = props;\n  const navigation = useNavigation();\n  return (\n    <View\n      style={{\n        //height: 80,\n        paddingVertical:12,\n        width: \"100%\",\n        justifyContent: \"space-between\",\n     \n        backgroundColor: Colors.PrimaryColor,\n      }}\n    >\n      <View\n        style={{\n          justifyContent: \"space-between\",\n          flexDirection: \"row\",\n          //marginTop: 20,\n          alignItems:\"center\"\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => navigation.toggleDrawer()}\n          // style={{ height: 50, width: 50, marginLeft: 10 }}\n          style={{ width: 50, marginLeft: 10 }}\n        >\n          <Image\n            style={{ height: 25, width: 25, resizeMode: \"contain\" }}\n            source={require(\"../../assets/menu.png\")}\n          ></Image>\n        </TouchableOpacity>\n        <Text\n        allowFontScaling={false}\n        style={{\n          color: Colors.white,\n          fontSize: 19,\n          fontWeight: \"bold\",\n          //marginBottom: 30,\n         textAlign:\"center\"\n        }}\n      >\n      {label} \n      </Text>\n        {plusButton == true ? (\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"AddClients\")}\n            style={{ height: 50, width: 50 }}\n          >\n            <Image\n              style={{ height: 55, width: 25, resizeMode: \"contain\" }}\n              source={Images.plus}\n            ></Image>\n          </TouchableOpacity>\n        ) : (\n          <View style={{ height: 50, width: 50 }}></View>\n        )}\n      </View>\n     \n    </View>\n  );\n};\nexport default Header;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { postAPI } from \"../config/apiMethod\";\nimport { url } from \"../config/url\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const getDashboardData = createAsyncThunk(\n  \"getDashboardData\",\n  async (dispatch) => {\n    const id = await AsyncStorage.getItem(\"userId\");\n    let data = {\n      user_id: id,\n    };\n    return await postAPI(url.BASE_URL + \"wp-json/Dashboard/dashboard\", data)\n      .then(async (response) => {\n        const { data } = response;\n        return data;\n      })\n      .catch((e) => {\n        console.log(e);\n        //  console.log('error');\n        if (e.response) {\n          console.log(\"api issue\", e.response);\n          console.log(e.response.data.message);\n        } else if (e.request) {\n          console.log(\"error\");\n        } else {\n          console.log(\"error\");\n        }\n      });\n  }\n);\n\nconst getDashboardDataSlice = createSlice({\n  name: \"getDashboardData\",\n  initialState: {\n    bookData: [],\n    bookStatus: null,\n  },\n  extraReducers: {\n    [getDashboardData.pending]: (state, action) => {\n      state.bookStatus = \"loading\";\n    },\n    [getDashboardData.fulfilled]: (state, action) => {\n      state.bookStatus = \"success\";\n      state.bookData = action.payload;\n    },\n    [getDashboardData.rejected]: (state, action) => {\n      state.bookStatus = \"failed\";\n    },\n  },\n});\n\nexport default getDashboardDataSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getAPI } from \"../config/apiMethod\";\r\nimport { url } from \"../config/url\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nexport const getContacts = createAsyncThunk(\"getContacts\", async () => {\r\n  const id = await AsyncStorage.getItem(\"userId\");\r\n  const urlDynamic =\r\n    \"https://surf.topsearchrealty.com/wp-json/leads/contacts/?userid=\" + id;\r\n  return await getAPI(urlDynamic)\r\n    .then(async (response) => {\r\n      const { data } = response;\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      if (e.response) {\r\n        console.log(\"api issue\", e.response);\r\n      } else if (e.request) {\r\n        console.log(\"api issue\", e.response);\r\n      } else {\r\n        console.log(\"api issue\", e.response);\r\n      }\r\n    });\r\n});\r\n\r\nconst getContactsSlice = createSlice({\r\n  name: \"getContacts\",\r\n  initialState: {\r\n    getContactsData: [],\r\n    status: null,\r\n  },\r\n  extraReducers: {\r\n    [getContacts.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getContacts.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.getContactsData = action.payload;\r\n    },\r\n    [getContacts.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default getContactsSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getAPI } from \"../config/apiMethod\";\nimport { url } from \"../config/url\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const getMeterData = createAsyncThunk(\"getMeterData\", async () => {\n  const id = await AsyncStorage.getItem(\"userId\");\n  const urlDynamic =\n    \" https://surf.topsearchrealty.com/wp-json/activity/trackactivity?Agentid=\" +\n    id;\n  return await getAPI(urlDynamic)\n    .then(async (response) => {\n      const { data } = response;\n      return data;\n    })\n    .catch((e) => {\n      console.log(e);\n      if (e.response) {\n        console.log(\"api issue\", e.response);\n      } else if (e.request) {\n        console.log(\"api issue\", e.response);\n      } else {\n        console.log(\"api issue\", e.response);\n      }\n    });\n});\n\nconst getMeterDataSlice = createSlice({\n  name: \"getMeterData\",\n  initialState: {\n    getMeterData: [],\n    status: null,\n  },\n  extraReducers: {\n    [getMeterData.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getMeterData.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.getContactsData = action.payload;\n    },\n    [getMeterData.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default getMeterDataSlice.reducer;\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  SafeAreaView,\r\n  Text,\r\n  View,\r\n  StatusBar,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Image,\r\n  FlatList,\r\n  Linking,\r\n  Platform,\r\n} from \"react-native\";\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport RNSpeedometer from \"react-native-speedometer\";\r\nimport { getDashboardData } from \"../../modules/getDashboardData\";\r\nimport Activity from \"../../components/Activity\";\r\nimport { getContacts } from \"../../modules/getContacts\";\r\nimport { getMeterData } from \"../../modules/getMeterValue\";\r\nimport { getRatings } from \"../../modules/getActiveClient\";\r\nexport default function Dashboard() {\r\n  const navigation = useNavigation();\r\n  const [meterValue, setMeterValue] = useState();\r\n  const [meter2Value, setMeter2Value] = useState(60);\r\n  const [totalLeadValue, setTotalLeadValue] = useState(\"\");\r\n  const [underContarct, setUnderContarct] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const isFocused = useIsFocused();\r\n  const [soldValue, setSoldValue] = useState(\"\");\r\n  const [underContractValue, setUnderContarctValue] = useState(\"\");\r\n  const [activity, setActivity] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    getDashboardDataApiCall();\r\n    getAllContacts();\r\n    getMeter();\r\n    getActiveClient();\r\n    if (isFocused) {\r\n      // Perform the refresh logic here\r\n    }\r\n  }, [isFocused]);\r\n  const getDashboardDataApiCall = () => {\r\n    dispatch(getDashboardData()).then((response) => {\r\n      setActivity(true);\r\n      // setMeterValue(response.payload.data[0].under_contract_percent);\r\n      // setMeter2Value(response.payload.data[0].sold_percent);\r\n    });\r\n  };\r\n  const getMeter = () => {\r\n    dispatch(getMeterData()).then((response) => {\r\n      setMeterValue(response.payload.data);\r\n    });\r\n  };\r\n  const getAllContacts = () => {\r\n    dispatch(getContacts()).then((response) => {\r\n      const contactsData = response.payload.data;\r\n      setData(Object.values(contactsData));\r\n      setLoading(false);\r\n    });\r\n  };\r\n  const getActiveClient = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://surf.topsearchrealty.com/api/v1/googleapi/allactivedata\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch active client data.\");\r\n      }\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      // Handle the error condition\r\n    }\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    if (!loading) {\r\n      setLoading(true);\r\n      getAllContacts();\r\n    }\r\n  };\r\n  const makePhoneCall = (item) => {\r\n    let phoneNumber = item;\r\n    Linking.openURL(`tel:${phoneNumber}`);\r\n  };\r\n  const sendEmail = (item) => {\r\n    let recipient = item;\r\n    let subject = \"Subject of email\";\r\n    let body = \"Body of email\";\r\n    Linking.openURL(`mailto:${recipient}?subject=${subject}&body=${body}`);\r\n  };\r\n\r\n  const sendSMS = (item) => {\r\n    let phoneNumber = item;\r\n    let message = \"Hello from my app!\";\r\n    Linking.openURL(`sms:${phoneNumber}`);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      <StatusBar />\r\n      <Header label={\"Agent Dashboard\"} />\r\n      {activity ? (\r\n        <ScrollView\r\n          style={{\r\n            backgroundColor: Colors.white,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              marginTop: 10,\r\n              backgroundColor: Colors.white,\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: 20,\r\n                color: Colors.black,\r\n                fontWeight: \"bold\",\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              Current Clients Online\r\n            </Text>\r\n            <View\r\n              style={{\r\n                height: 60,\r\n                marginTop: 20,\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-evenly\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <FlatList\r\n                data={data}\r\n                horizontal={true}\r\n                renderItem={({ item, index }) => (\r\n                  <TouchableOpacity\r\n                    //onPress={() => makePhoneCall()}\r\n                    style={{\r\n                      width: 50,\r\n                      height: 50,\r\n                      //marginLeft: 10,\r\n                      marginHorizontal: 2,\r\n                      borderRadius: 25,\r\n                      alignSelf: \"center\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      backgroundColor: \"green\",\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontSize: 16, color: Colors.white }}>\r\n                      {item.contact_name.charAt(0)}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n                //   keyExtractor={(item) => item.id}\r\n                //  ItemSeparatorComponent={this.renderSeparator}\r\n                //   key={(item) => item.id}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: Colors.white,\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: 20,\r\n                color: Colors.black,\r\n                fontWeight: \"bold\",\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              My Surf Level\r\n            </Text>\r\n\r\n            <View\r\n              style={{\r\n                marginTop: 10,\r\n                backgroundColor: Colors.white,\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <RNSpeedometer\r\n                value={meterValue}\r\n                size={180}\r\n                minValue={0}\r\n                maxValue={100}\r\n                allowedDecimals={0}\r\n                labels={[\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#ed2024\",\r\n                    activeBarColor: \"#ec1a1e\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#ee3323\",\r\n                    activeBarColor: \"#ee3323\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#f05622\",\r\n                    activeBarColor: \"#f05622\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#f36f21\",\r\n                    activeBarColor: \"#f36f21\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#f68620\",\r\n                    activeBarColor: \"#f68620\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#f99d1c\",\r\n                    activeBarColor: \"#f99d1c\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#fcb218\",\r\n                    activeBarColor: \"#fcb218\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#ffc907\",\r\n                    activeBarColor: \"#ffc907\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#fedf00\",\r\n                    activeBarColor: \"#fedf00\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#f7de00\",\r\n                    activeBarColor: \"#f7de00\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#e7dd1c\",\r\n                    activeBarColor: \"#e7dd1c\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#dadf26\",\r\n                    activeBarColor: \"#dadf26\",\r\n                  },\r\n\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#c2d82f\",\r\n                    activeBarColor: \"#c2d82f\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#afd136\",\r\n                    activeBarColor: \"#afd136\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#9ccb3b\",\r\n                    activeBarColor: \"#9ccb3b\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#8bc63f\",\r\n                    activeBarColor: \"#8bc63f\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#7ac143\",\r\n                    activeBarColor: \"#7ac143\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#ffffff\",\r\n                    activeBarColor: \"#5dba46\",\r\n                  },\r\n                ]}\r\n                //needleImage={Images.meter}\r\n                // wrapperStyle={}\r\n                //outerCircleStyle={{height: 80}}\r\n                // halfCircleStyle={}\r\n                //imageWrapperStyle={{resizeMode: 'contain', height: 100, width: 100}}\r\n                //innerCircleStyle={{width: 130, borderRadius: 65}}\r\n                // labelWrapperStyle={}\r\n                // labelStyle={}\r\n                // labelNoteStyle={}\r\n              />\r\n              <Image\r\n                style={{\r\n                  height: 120,\r\n                  width: 120,\r\n                  resizeMode: \"contain\",\r\n                  alignSelf: \"center\",\r\n                  marginTop: 50,\r\n                }}\r\n                source={require(\"../../../assets/fastGun.png\")}\r\n              ></Image>\r\n              <Text\r\n                style={{\r\n                  fontSize: 20,\r\n                  marginTop: 10,\r\n                  color: Colors.black,\r\n                  fontWeight: \"bold\",\r\n                  alignSelf: \"center\",\r\n                }}\r\n              >\r\n                Fast Gun\r\n              </Text>\r\n            </View>\r\n            {/* <View\r\n              style={{\r\n                height: 1,\r\n                width: \"100%\",\r\n                backgroundColor: Colors.gray,\r\n                marginTop: 10,\r\n              }}\r\n            ></View> */}\r\n            {/* <AnimatedCircularProgress\r\n            size={250}\r\n            width={25}\r\n            fill={180}\r\n            style={{\r\n              transform: [{rotate: '180deg'}],\r\n              marginTop: 20,\r\n              borderRadius: 20,\r\n            }}\r\n            tintColor={Colors.PrimaryColor}\r\n            fillLineCap=\"10\"\r\n            backgroundColor={Colors.buttonColor}\r\n            arcSweepAngle={160}>\r\n            {fill => (\r\n              <View\r\n                style={{\r\n                  transform: [{rotate: '180deg'}],\r\n                  position: 'absolute',\r\n                  bottom: 20,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                }}>\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    color: Colors.black,\r\n                    fontWeight: 'bold',\r\n                    marginTop: 20,\r\n                  }}>\r\n                  69%\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontSize: 14,\r\n                    color: Colors.gray,\r\n                  }}>\r\n                  $506.000.00\r\n                </Text>\r\n              </View>\r\n            )}\r\n          </AnimatedCircularProgress> */}\r\n            {/* <View\r\n              style={{\r\n                height: 60,\r\n                width: \"96%\",\r\n                alignSelf: \"flex-end\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n                flexDirection: \"row\",\r\n                backgroundColor: Colors.white,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: \"80%\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    height: 80,\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.gray,\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    Toatl Lead Value\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.gray,\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    $734.000.00\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              <TouchableOpacity\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Image\r\n                  source={Images.mail}\r\n                  style={{\r\n                    height: 40,\r\n                    width: 40,\r\n                    resizeMode: \"contain\",\r\n                  }}\r\n                ></Image>\r\n              </TouchableOpacity>\r\n            </View> */}\r\n            {/* <View\r\n              style={{\r\n                height: 60,\r\n                width: \"96%\",\r\n                alignSelf: \"flex-end\",\r\n\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: \"80%\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    height: 80,\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.gray,\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    Under Contract\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.gray,\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    1\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Image\r\n                  source={Images.phone}\r\n                  style={{\r\n                    height: 40,\r\n                    width: 40,\r\n                    marginLeft: \"5%\",\r\n                    resizeMode: \"contain\",\r\n                  }}\r\n                ></Image>\r\n              </TouchableOpacity>\r\n            </View> */}\r\n            <Text\r\n              style={{\r\n                fontSize: 20,\r\n                marginTop: 20,\r\n                color: Colors.black,\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Active Pipeline\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                fontSize: 17,\r\n                color: \"green\",\r\n                fontWeight: \"bold\",\r\n                marginTop: 5,\r\n              }}\r\n            >\r\n              $ 6,511,000\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                fontSize: 20,\r\n                color: Colors.black,\r\n                fontWeight: \"bold\",\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              Under Contract\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                fontSize: 17,\r\n                color: \"green\",\r\n                fontWeight: \"bold\",\r\n                marginTop: 5,\r\n              }}\r\n            >\r\n              $ 829,000\r\n            </Text>\r\n            <View\r\n              style={{\r\n                height: 1,\r\n                width: \"100%\",\r\n                backgroundColor: Colors.gray,\r\n                marginTop: 30,\r\n              }}\r\n            ></View>\r\n            <Text\r\n              style={{\r\n                fontSize: 20,\r\n                color: Colors.black,\r\n                fontWeight: \"bold\",\r\n                marginTop: 20,\r\n                marginBottom: 15,\r\n              }}\r\n            >\r\n              Document Portal\r\n            </Text>\r\n            <TouchableOpacity\r\n              style={{\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: 10,\r\n              }}\r\n            >\r\n              <Image\r\n                style={{\r\n                  height: 120,\r\n                  width: 120,\r\n                  resizeMode: \"contain\",\r\n                }}\r\n                source={require(\"./../../assets/images/documentPortal.png\")}\r\n              ></Image>\r\n            </TouchableOpacity>\r\n            <Text\r\n              style={{\r\n                fontSize: 20,\r\n                color: Colors.black,\r\n                fontWeight: \"bold\",\r\n                marginTop: 30,\r\n                marginBottom: 20,\r\n              }}\r\n            >\r\n              Most Recent\r\n            </Text>\r\n\r\n            <FlatList\r\n              data={data}\r\n              scrollEnabled={false}\r\n              style={{ width: \"100%\" }}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    navigation.navigate(\"ContactsDetails\", { item: item })\r\n                  }\r\n                  style={{\r\n                    height: 60,\r\n                    width: \"100%\",\r\n                    alignSelf: \"center\",\r\n                    borderBottomColor: Colors.gray,\r\n                    alignItems: \"center\",\r\n                    alignContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    paddingHorizontal: 12,\r\n                  }}\r\n                >\r\n                  <View style={{ width: 45, marginRight: 2 }}>\r\n                    <Image\r\n                      source={{ uri: item.contact_image }}\r\n                      style={{\r\n                        height: 45,\r\n                        width: 45,\r\n                        borderRadius: 100,\r\n                        borderWidth: 1,\r\n                        borderColor: Colors.gray,\r\n                      }}\r\n                    ></Image>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.PrimaryColor,\r\n                        fontSize: 12,\r\n                      }}\r\n                    >\r\n                      {item.name}\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      width: \"85%\",\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                      marginLeft: 6,\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.black,\r\n                          fontSize: 15,\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        {item.contact_name}\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.black,\r\n                          fontSize: 14,\r\n                          marginTop: 2,\r\n                          marginLeft: 0,\r\n                        }}\r\n                      >\r\n                        {item.contact_email}{\" \"}\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.black,\r\n                          fontSize: 12,\r\n                        }}\r\n                      >\r\n                        {item.details}\r\n                      </Text>\r\n                    </View>\r\n                    {/* <View\r\n                      style={{\r\n                        height: 80,\r\n                        width: \"96%\",\r\n                        alignSelf: \"flex-end\",\r\n                        alignItems: \"center\",\r\n                        alignContent: \"center\",\r\n                        flexDirection: \"row\",\r\n                      }}\r\n                    >\r\n                      <TouchableOpacity\r\n                        onPress={() => sendEmail(item.contact_email)}\r\n                        style={{\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Image\r\n                          source={require(\"../../../assets/mail.png\")}\r\n                          style={{\r\n                            height: 40,\r\n                            width: 40,\r\n                            resizeMode: \"contain\",\r\n                          }}\r\n                        ></Image>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity\r\n                        onPress={() => sendSMS(item.contact_number)}\r\n                        style={{\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Image\r\n                          source={require(\"../../../assets/chat.png\")}\r\n                          style={{\r\n                            height: 40,\r\n                            width: 40,\r\n                            resizeMode: \"contain\",\r\n                          }}\r\n                        ></Image>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity\r\n                        onPress={() => makePhoneCall(item.contact_number)}\r\n                        style={{\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Image\r\n                          source={require(\"../../../assets/phone.png\")}\r\n                          style={{\r\n                            height: 40,\r\n                            width: 40,\r\n                            marginLeft: \"5%\",\r\n                            resizeMode: \"contain\",\r\n                          }}\r\n                        ></Image>\r\n                      </TouchableOpacity>\r\n                    </View> */}\r\n                    <View\r\n                      style={{\r\n                        justifyContent: \"center\",\r\n                        flexDirection: \"row\",\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../../../assets/more.png\")}\r\n                        style={{\r\n                          height: 15,\r\n                          width: 15,\r\n                          resizeMode: \"contain\",\r\n                        }}\r\n                      ></Image>\r\n                      <Image\r\n                        source={require(\"../../../assets/leftArrow.png\")}\r\n                        style={{\r\n                          height: 13,\r\n                          width: 13,\r\n                          marginLeft: 10,\r\n                          resizeMode: \"contain\",\r\n                        }}\r\n                      ></Image>\r\n                    </View>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              )}\r\n              //   keyExtractor={(item) => item.id}\r\n              //  ItemSeparatorComponent={this.renderSeparator}\r\n              //   key={(item) => item.id}\r\n            />\r\n\r\n            {/* <View\r\n              style={{\r\n                marginTop: 10,\r\n                backgroundColor: Colors.white,\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <RNSpeedometer\r\n                value={meter2Value}\r\n                size={180}\r\n                minValue={0}\r\n                maxValue={100}\r\n                allowedDecimals={0}\r\n                labels={[\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#ed2024\",\r\n                    activeBarColor: \"#ec1a1e\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#ee3323\",\r\n                    activeBarColor: \"#ee3323\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#f05622\",\r\n                    activeBarColor: \"#f05622\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#f36f21\",\r\n                    activeBarColor: \"#f36f21\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#f68620\",\r\n                    activeBarColor: \"#f68620\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#f99d1c\",\r\n                    activeBarColor: \"#f99d1c\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#fcb218\",\r\n                    activeBarColor: \"#fcb218\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#ffc907\",\r\n                    activeBarColor: \"#ffc907\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#fedf00\",\r\n                    activeBarColor: \"#fedf00\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#f7de00\",\r\n                    activeBarColor: \"#f7de00\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#e7dd1c\",\r\n                    activeBarColor: \"#e7dd1c\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#dadf26\",\r\n                    activeBarColor: \"#dadf26\",\r\n                  },\r\n\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#c2d82f\",\r\n                    activeBarColor: \"#c2d82f\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#afd136\",\r\n                    activeBarColor: \"#afd136\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#9ccb3b\",\r\n                    activeBarColor: \"#9ccb3b\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#8bc63f\",\r\n                    activeBarColor: \"#8bc63f\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#7ac143\",\r\n                    activeBarColor: \"#7ac143\",\r\n                  },\r\n                  {\r\n                    name: \"\",\r\n                    labelColor: \"#ffffff\",\r\n                    activeBarColor: \"#5dba46\",\r\n                  },\r\n                ]}\r\n                //needleImage={Images.meter}\r\n                // wrapperStyle={}\r\n                //outerCircleStyle={{height: 80}}\r\n                // halfCircleStyle={}\r\n                //imageWrapperStyle={{resizeMode: 'contain', height: 100, width: 100}}\r\n                //innerCircleStyle={{width: 130, borderRadius: 65}}\r\n                // labelWrapperStyle={}\r\n                // labelStyle={}\r\n                // labelNoteStyle={}\r\n              />\r\n            </View> */}\r\n            {/* <View\r\n              style={{\r\n                //height: 100,\r\n                //width: \"96%\",\r\n               // alignSelf: \"flex-end\",\r\n                //backgroundColor: Colors.white,\r\n                //alignItems: \"center\",\r\n               // alignContent: \"center\",\r\n                //flexDirection: \"row\",\r\n              }}\r\n            >\r\n            </View>*/}\r\n          </View>\r\n        </ScrollView>\r\n      ) : (\r\n        <Activity />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n}\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getAPI } from \"../config/apiMethod\";\nimport { url } from \"../config/url\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const getLeads = createAsyncThunk(\"getLeads\", async () => {\n  const id = await AsyncStorage.getItem(\"userId\");\n  const urlDynamic =\n    \" https://surf.topsearchrealty.com/wp-json/leads/leadsall?agentid=\" + id;\n  return await getAPI(urlDynamic)\n    .then(async (response) => {\n      const { data } = response;\n      return data;\n    })\n    .catch((e) => {\n      console.log(e);\n      if (e.response) {\n        console.log(\"api issue\", e.response);\n      } else if (e.request) {\n        console.log(\"api issue\", e.response);\n      } else {\n        console.log(\"api issue\", e.response);\n      }\n    });\n});\n\nexport default getLeads;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Image,\n  Text,\n  View,\n  ScrollView,\n  TouchableOpacity,\n  SafeAreaView,\n  TextInput,\n  FlatList,\n} from \"react-native\";\nimport Colors from \"../../utils/Colors\";\nimport getLeads from \"../../modules/getLeads\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\n\nconst Leads = () => {\n  const [data, setData] = useState([]);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredData, setFilteredData] = useState();\n  const [isSearching, setIsSearching] = useState(false);\n\n  useEffect(() => {\n    getAllContacts();\n    if (isFocused) {\n      // Perform the refresh logic here\n    }\n  }, [isFocused]);\n  const getAllContacts = () => {\n    dispatch(getLeads())\n      .then((response) => {\n        if (response && response.payload && response.payload.data) {\n          const contactsData = response.payload.data;\n          console.log(contactsData, \"aaasa\");\n          setData(contactsData);\n          setLoading(false);\n        } else {\n          console.error(\"Invalid response data:\", response);\n          // Handle the error case here, such as displaying an error message or taking appropriate action\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error retrieving leads:\", error);\n        // Handle the error case here, such as displaying an error message or taking appropriate action\n      });\n  };\n  const searchFilter = (text) => {\n    setSearchText(text);\n    const filteredItems = data.filter((item) =>\n      item.property_key.includes(text)\n    );\n    setFilteredData(filteredItems);\n    setIsSearching(true);\n  };\n  const handleUsernameClick = (item) => {\n    navigation.navigate(\"MyClientsDetails\", { item: item });\n  };\n  return (\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.cream }}>\n      <View\n        style={{\n          height: 40,\n          width: \"100%\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          backgroundColor: Colors.PrimaryColor,\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => navigation.goBack()}\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginLeft: 10,\n          }}\n        >\n          <Image\n            style={{\n              height: 15,\n              width: 15,\n              resizeMode: \"contain\",\n              tintColor: Colors.white,\n            }}\n            source={require(\"../../../assets/back.png\")}\n          ></Image>\n          {/* <Text style={{ fontSize: 15, color: Colors.white }}>Back</Text> */}\n        </TouchableOpacity>\n        <Text style={{ fontSize: 19, fontWeight: \"bold\", color: Colors.white }}>\n          Opportunities\n        </Text>\n        <Text></Text>\n      </View>\n      <View\n        style={{\n          height: 80,\n          width: \"100%\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: Colors.PrimaryColor,\n        }}\n      >\n        <View\n          style={{\n            backgroundColor: Colors.buttonColor,\n            borderRadius: 5,\n            width: \"92%\",\n            height: 50,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Image\n            source={require(\"../../../assets/search.png\")}\n            style={{\n              height: 20,\n              width: 20,\n              marginLeft: 10,\n              tintColor: Colors.white,\n            }}\n          />\n          <TextInput\n            allowFontScaling={false}\n            placeholder=\"Search\"\n            placeholderTextColor={Colors.white}\n            onChangeText={searchFilter}\n            style={{\n              color: Colors.white,\n              fontSize: 15,\n              marginLeft: 10,\n            }}\n          ></TextInput>\n        </View>\n      </View>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <FlatList\n          data={isSearching ? filteredData : data}\n          ListFooterComponent={<View style={{ height: 50 }}></View>}\n          renderItem={({ item }) => (\n            <View\n              style={{\n                backgroundColor: Colors.cream,\n                width: \"100%\",\n\n                paddingVertical: 20,\n                borderBottomWidth: 1,\n                borderBottomColor: \"#ddd\",\n              }}\n            >\n              {/* Render the content for each item */}\n              <View\n                style={{\n                  width: \"90%\",\n                  alignSelf: \"center\",\n                  alignItems: \"center\",\n                  alignContent: \"center\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  marginBottom: 20,\n                  height: 50,\n                }}\n              >\n                {/* Render the Type */}\n                <Text\n                  style={{\n                    color: \"#8d8a8a\",\n                    fontSize: 14,\n                    height: 50,\n                    alignSelf: \"center\",\n                    alignItems: \"center\",\n                    alignContent: \"center\",\n                    flexDirection: \"row\",\n                    marginTop: 25,\n                  }}\n                >\n                  Type\n                </Text>\n                {/* Render the icon based on the item type */}\n\n                {item.type === \"Email\" ? (\n                  <Image\n                    source={require(\"../../../assets/mail.png\")}\n                    style={{\n                      height: 35,\n                      width: 35,\n                      alignSelf: \"center\",\n                      alignItems: \"center\",\n                      alignContent: \"center\",\n                      flexDirection: \"row\",\n                      resizeMode: \"contain\",\n                    }}\n                  />\n                ) : item.type === \"Message\" ? (\n                  <Image\n                    source={require(\"../../../assets/chat.png\")}\n                    style={{\n                      height: 35,\n                      width: 35,\n                      alignSelf: \"center\",\n                      alignItems: \"center\",\n                      alignContent: \"center\",\n                      flexDirection: \"row\",\n                      resizeMode: \"contain\",\n                      marginTop: 12,\n                    }}\n                  />\n                ) : null}\n              </View>\n              {/* Render the Message */}\n              <View\n                style={{\n                  width: \"90%\",\n                  alignSelf: \"center\",\n                  alignItems: \"center\",\n                  alignContent: \"center\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  marginBottom: 20,\n                  flexWrap:\"wrap\",\n\n                  \n                }}\n              >\n\n               \n    <Text style={{ color: \"#8d8a8a\", fontSize: 14 }}>Username</Text>\n    <TouchableOpacity onPress={() => handleUsernameClick(item)}>\n    <Text\n                  style={{\n                    color: Colors.black,\n                    fontSize: 14,\n                    textAlign: \"right\",\n                 \n                  \n                    \n                    \n                  }}\n                >\n             {item.username} \n                </Text>\n  </TouchableOpacity>\n  \n\n              </View>\n              <View\n                style={{\n                  width: \"90%\",\n                  alignSelf: \"center\",\n                  alignItems: \"center\",\n                  alignContent: \"center\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  marginBottom: 20,\n                }}\n              >\n                <Text style={{ color: \"#8d8a8a\", fontSize: 14 }}>Mobile</Text>\n                <Text\n                  style={{\n                    color: Colors.black,\n                    fontSize: 14,\n                    textAlign: \"right\",\n                    width: \"60%\",\n                  }}\n                >\n                  {item.Phone}\n                </Text>\n              </View>\n\n              {/* Render the Property Key */}\n              <View\n                style={{\n                  width: \"90%\",\n                  alignSelf: \"center\",\n                  alignItems: \"center\",\n                  alignContent: \"center\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  marginBottom: 20,\n                }}\n              >\n                <Text style={{ color: \"#8d8a8a\", fontSize: 14 }}>\n                  Property Key\n                </Text>\n                <Text style={{ color: Colors.black, fontSize: 14 }}>\n                  {item.property_key}\n                </Text>\n              </View>\n              {/* Render the Date Created */}\n              <View\n                style={{\n                  width: \"90%\",\n                  alignSelf: \"center\",\n                  alignItems: \"center\",\n                  alignContent: \"center\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  marginBottom: 20,\n                }}\n              >\n                <Text style={{ color: \"#8d8a8a\", fontSize: 14 }}>\n                  Date Created\n                </Text>\n\n                <Text style={{ color: Colors.black, fontSize: 14 }}>\n                  {new Date(item.created_date).toLocaleDateString(\"en-US\")}\n                </Text>\n              </View>\n            </View>\n          )}\n          ListEmptyComponent={\n            <View style={{ alignItems: \"center\", marginTop: 20 }}>\n              <Text>No data found</Text>\n            </View>\n          }\n        />\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default Leads;\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  SafeAreaView,\r\n  Linking,\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\r\nimport { getContacts } from \"../../modules/getContacts\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Activity from \"../../components/Activity\";\r\n\r\nconst Contact = () => {\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filteredData, setFilteredData] = useState();\r\n  const isFocused = useIsFocused();\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const searchFilter = (text) => {\r\n    setSearchText(text);\r\n    const filteredItems = data.filter((item) =>\r\n      item.contact_name.toLowerCase().includes(text.toLowerCase())\r\n    );\r\n    setFilteredData(filteredItems);\r\n    setIsSearching(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllContacts();\r\n    if (isFocused) {\r\n      // Perform the refresh logic here\r\n    }\r\n  }, [isFocused]);\r\n\r\n  const getAllContacts = () => {\r\n    dispatch(getContacts()).then((response) => {\r\n      const contactsData = response.payload.data;\r\n      setData(Object.values(contactsData));\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    if (!loading) {\r\n      setLoading(true);\r\n      getAllContacts();\r\n    }\r\n  };\r\n  const makePhoneCall = (item) => {\r\n    let phoneNumber = item;\r\n    Linking.openURL(`tel:${phoneNumber}`);\r\n  };  \r\n  const sendEmail = (item) => {\r\n    let recipient = item;\r\n    let subject = \"Subject of email\";\r\n    let body = \"Body of email\";\r\n    Linking.openURL(`mailto:${recipient}?subject=${subject}&body=${body}`);\r\n  };\r\n\r\n  const sendSMS = (item) => {\r\n    let phoneNumber = item;\r\n    let message = \"Hello from my app!\";\r\n    Linking.openURL(`sms:${phoneNumber}`);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      <View style={{ flex: 1, backgroundColor: Colors.white }}>\r\n        <View\r\n          style={{\r\n           // height: 40,\r\n           paddingTop:20,\r\n           paddingBottom:12,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                tintColor: Colors.white,\r\n              }}\r\n              source={require(\"../../../assets/back.png\")}\r\n            ></Image>\r\n            {/* <Text style={{ fontSize: 15, color: Colors.white }}>Back</Text> */}\r\n          </TouchableOpacity>\r\n          <Text\r\n            style={{ fontSize: 19, fontWeight: \"bold\", color: Colors.white }}\r\n          >\r\n            Contacts\r\n          </Text>\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(\"AddContacts\")}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                tintColor: Colors.white,\r\n              }}\r\n              source={require(\"../../../assets/plus.png\")}\r\n            ></Image>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            height: 80,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              backgroundColor: Colors.buttonColor,\r\n              borderRadius: 5,\r\n              width: \"92%\",\r\n              height: 50,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../../../assets/search.png\")}\r\n              style={{\r\n                height: 20,\r\n                width: 20,\r\n                marginLeft: 10,\r\n                tintColor: Colors.white,\r\n              }}\r\n            ></Image>\r\n            <TextInput\r\n              allowFontScaling={false}\r\n              placeholder=\"Search\"\r\n              placeholderTextColor={Colors.white}\r\n              onChangeText={searchFilter}\r\n              style={{\r\n                color: Colors.white,\r\n                fontSize: 15,\r\n                marginLeft: 10,\r\n              }}\r\n            ></TextInput>\r\n          </View>\r\n        </View>\r\n        <View style={{ justifyContent: \"center\", alignItems: \"center\" }}></View>\r\n        <View style={{ flex: 1, marginTop: 12 }}>\r\n          {loading ? (\r\n            <Activity />\r\n          ) : (\r\n            <FlatList\r\n              data={isSearching ? filteredData : data}\r\n              ListFooterComponent={<View style={{ height: 50 }}></View>}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    navigation.navigate(\"MyClientsDetails\", { item: item })\r\n                  }\r\n                  style={{\r\n                    height: 80,\r\n                    width: \"97%\",\r\n                    alignSelf: \"center\",\r\n                    borderWidth: 1,\r\n                    borderColor: \"#bbbbbb52\",\r\n                    alignItems: \"center\",\r\n                    alignContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    backgroundColor: \"#987e7e17\",\r\n                    marginBottom: 5,\r\n                    padding: 12,\r\n                    justifyContent: \"space-between\",\r\n                    borderRadius: 6,\r\n                  \r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      justifyContent: \"space-between\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    //flexWrap:\"wrap\",\r\n                   // width:\"100%\"\r\n                  // Width: 70,\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={{ uri: item.contact_image }}\r\n                      style={{\r\n                        height: 50,\r\n                        width: 50,\r\n                        borderRadius: 100,\r\n                        resizeMode: \"cover\",\r\n                        marginRight:7,\r\n                        borderColor:Colors.white,\r\n                        borderWidth:1\r\n                      }}\r\n                    ></Image>\r\n\r\n                   \r\n                    <Text\r\n                      style={{\r\n                        color: Colors.black,\r\n                        fontSize: 14,\r\n                        fontWeight: \"bold\",\r\n                     width:100,\r\n                        paddingHorizontal: 4,\r\n                        //flexWrap:\"wrap\"\r\n                      }}\r\n                    >\r\n                    {item.contact_name} \r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        height: 80,\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.black,\r\n                          fontSize: 12,\r\n                        }}\r\n                      >\r\n                        {item.post_title}\r\n                      </Text>\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        height: 80,\r\n                        alignSelf: \"flex-end\",\r\n                        alignItems: \"center\",\r\n                        alignContent: \"center\",\r\n                        flexDirection: \"row\",\r\n\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <TouchableOpacity\r\n                        onPress={() => sendEmail(item.contact_email)}\r\n                        style={{\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Image\r\n                          source={require(\"../../../assets/mail.png\")}\r\n                          style={{\r\n                            height: 40,\r\n                            width: 40,\r\n                            resizeMode: \"contain\",\r\n                          }}\r\n                        ></Image>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity\r\n                        onPress={() => sendSMS(item.contact_number)}\r\n                        style={{\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Image\r\n                          source={require(\"../../../assets/chat.png\")}\r\n                          style={{\r\n                            height: 40,\r\n                            width: 40,\r\n                            resizeMode: \"contain\",\r\n                          }}\r\n                        ></Image>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity\r\n                        onPress={() => makePhoneCall(item.contact_number)}\r\n                        style={{\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Image\r\n                          source={require(\"../../../assets/phone.png\")}\r\n                          style={{\r\n                            height: 40,\r\n                            width: 40,\r\n                            marginLeft: \"5%\",\r\n                            resizeMode: \"contain\",\r\n                          }}\r\n                        ></Image>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View\r\n                      style={{\r\n                        height: 80,\r\n                        justifyContent: \"center\",\r\n                        marginLeft: 10,\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../../../assets/leftArrow.png\")}\r\n                        style={{\r\n                          height: 10,\r\n                          width: 10,\r\n                          resizeMode: \"contain\",\r\n                        }}\r\n                      ></Image>\r\n                    </View>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              )}\r\n              ListEmptyComponent={\r\n                <View style={{ alignItems: \"center\", marginTop: 20 }}>\r\n                  <Text>No data found</Text>\r\n                </View>\r\n              }\r\n              onRefresh={handleRefresh}\r\n              refreshing={loading}\r\n              keyExtractor={(item) => item.id}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getAPI } from \"../config/apiMethod\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const transectioActivity = createAsyncThunk(\n  \"transectioActivity\",\n  async () => {\n    const id = await AsyncStorage.getItem(\"userId\");\n\n    const urlDynamic =\n      \"https://surf.topsearchrealty.com/wp-json/activity/transectionactivity?Agentid=\" +\n      id;\n    return await getAPI(urlDynamic)\n      .then(async (response) => {\n        const { data } = response;\n        return data;\n      })\n      .catch((e) => {\n        console.log(e);\n        if (e.response) {\n          console.log(\"api issue\", e.response);\n        } else if (e.request) {\n          console.log(\"api issue\", e.response);\n        } else {\n          console.log(\"api issue\", e.response);\n        }\n      });\n  }\n);\n\nconst transectioActivitySlice = createSlice({\n  name: \"transectioActivity\",\n  initialState: {\n    transectioActivityData: [],\n    status: null,\n  },\n  extraReducers: {\n    [transectioActivity.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [transectioActivity.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.transectioActivityData = action.payload;\n    },\n    [transectioActivity.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default transectioActivitySlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { url } from \"../config/url\";\nimport { postAPI } from \"../config/apiMethod\";\n\nexport const addDispositon = createAsyncThunk(\"addDispositon\", async (payload) => {\n  const urlDynamic = \"https://surf.topsearchrealty.com/wp-json/activity/activitydisposition\";\n  try {\n    const response = await postAPI(urlDynamic, payload);\n    console.log(response, \"res\");\n    const { data } = response;\n    return data;\n  } catch (error) {\n    console.log(error);\n    if (error.response) {\n      console.log(\"API issue\", error.response);\n    } else if (error.request) {\n      console.log(\"API issue\", error.request);\n    } else {\n      console.log(\"API issue\", error.message);\n    }\n    throw error;\n  }\n});\n\n\n\nexport default addDispositon;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Image,\n  Text,\n  View,\n  ScrollView,\n  TouchableOpacity,\n  SafeAreaView,\n  TextInput,\n  StyleSheet,\n  FlatList,\n  Modal,\n  Linking,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport Colors from \"../../utils/Colors\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport addDisposition from \"../../modules/addDisposition\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport moment from \"moment\";\n\nconst DisPosition = (props) => {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const [agentEmail, setAgentEmail] = useState(\"\");\n  const [note, setActivityNote] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [futureActivity, setFutureActivity] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const item = props.route.params.item;\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isSecondModalVisible, setSecondModalVisible] = useState(false);\n  const [selectedSecondOption, setSelectedSecondOption] = useState(null);\n  const [isThirdModalVisible, setThirdModalVisible] = useState(false);\n  const [selectedThirdOption, setSelectedThirdOption] = useState(null);\n  useEffect(() => {\n    getData();\n  });\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n  };\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const handleOptionChange = (option) => {\n    setSelectedOption(option);\n  };\n  const openModal = () => {\n    setModalVisible(true);\n  };\n\n  const closeModal = () => {\n    setModalVisible(false);\n  };\n  const openSecondModal = () => {\n    setSecondModalVisible(true);\n  };\n\n  const closeSecondModal = () => {\n    setSecondModalVisible(false);\n  };\n  const openThirdModal = () => {\n    setThirdModalVisible(true);\n  };\n\n  const closeThirdModal = () => {\n    setThirdModalVisible(false);\n  };\n  const handleThirdOptionSelect = (option) => {\n    setSelectedThirdOption(option);\n    closeThirdModal();\n  };\n\n  const handleSecondOptionSelect = (option) => {\n    setSelectedSecondOption(option);\n    closeSecondModal();\n  };\n  const handleOptionSelect = (option) => {\n    setSelectedOption(option);\n    closeModal();\n  };\n  const formatDate = (date) => {\n    return date.toLocaleString(\"en-US\", {\n      timeZone: \"Asia/Kolkata\", // Set the desired timezone\n      hour12: true,\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n    });\n  };\n  const handleConfirm = (date) => {\n    setSelectedDate(date);\n    hideDatePicker();\n  };\n  const getData = async () => {\n    setData(item);\n    const userDetails = await AsyncStorage.getItem(\"userDetails\");\n    const parsedUserDetails = JSON.parse(userDetails);\n    const email = parsedUserDetails.user_email;\n    setAgentEmail(email);\n  };\n  const handleaddDisposition = () => {\n    const currentDateTime = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n    setDate(currentDateTime);\n    const payload = {\n      contact_id: data.id,\n      contact_lead_id: data.contact_lead_id,\n      activity_type: selectedOption,\n      activity_disposition_notes: note,\n      activity_next_disposition: selectedSecondOption,\n      next_disposition_notes: futureActivity,\n      next_disposition_date: selectedDate,\n      contact_email: data.contact_email,\n      agent_email: agentEmail,\n      activity_publish_date: date,\n      activity_disposition: selectedThirdOption,\n    };\n    dispatch(addDisposition(payload)).then((response) => {\n      navigation.goBack();\n      console.log(response);\n    });\n  };\n  const makePhoneCall = (item) => {\n    let phoneNumber = data.contact_number;\n    Linking.openURL(`tel:${phoneNumber}`);\n  };\n  const sendEmail = (item) => {\n    let recipient = item;\n    let subject = \"Subject of email\";\n    let body = \"Body of email\";\n    Linking.openURL(`mailto:${recipient}?subject=${subject}&body=${body}`);\n  };\n\n  const sendSMS = (item) => {\n    let phoneNumber = item;\n    let message = \"Hello from my app!\";\n    Linking.openURL(`sms:${phoneNumber}`);\n  };\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n             <View\n          style={{\n            height: 60,\n            width: \"100%\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <TouchableOpacity\n            onPress={() =>\n              navigation.navigate(\"MyClientsDetails\", { item: item })\n            }\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginLeft: 10,\n            }}\n          >\n            <Image\n              style={{\n                height: 15,\n                width: 15,\n                resizeMode: \"contain\",\n                tintColor: Colors.white,\n              }}\n              source={require(\"../../../assets/back.png\")}\n            ></Image>\n            {/* <Text style={{ fontSize: 15, color: Colors.white }}>Back</Text> */}\n          </TouchableOpacity>\n          <Text\n            style={{ fontSize: 19, fontWeight: \"bold\", color: Colors.white }}\n          >\n            DisPosition\n          </Text>\n          <Text></Text>\n        </View>\n        <View\n          style={{\n            height: 80,\n            width: \"100%\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <View\n            style={{\n              backgroundColor: Colors.buttonColor,\n              borderRadius: 5,\n              width: \"92%\",\n              height: 50,\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Image\n              source={require(\"../../../assets/search.png\")}\n              style={{\n                height: 20,\n                width: 20,\n                marginLeft: 10,\n                tintColor: Colors.white,\n              }}\n            />\n            <TextInput\n              allowFontScaling={false}\n              placeholder=\"Search\"\n              placeholderTextColor={Colors.white}\n              style={{\n                color: Colors.white,\n                fontSize: 15,\n                marginLeft: 10,\n              }}\n            />\n          </View>\n        </View>\n      <ScrollView showsVerticalScrollIndicator={false}>\n \n        <View\n          style={{\n            backgroundColor: Colors.white,\n          }}\n        >\n          <View\n            style={{\n              width: \"100%\",\n              marginTop: 12,\n              alignItems: \"center\",\n              flexDirection: \"row\",\n              paddingHorizontal: 12,\n            \n            }}\n          >\n            <Image\n              source={{ uri: data.contact_image }}\n              style={{\n                height: 120,\n                width: 120,\n                borderRadius: 100,\n                marginRight: 12,  borderWidth:1,\n                borderColor:Colors.gray\n              }}\n            />\n\n            <View>\n              <Text\n                style={{\n                  fontSize: 18,\n                  fontWeight: \"bold\",\n                  position: \"relative\",\n                  left: 12,\n                }}\n              >\n                {data.contact_name}\n              </Text>\n\n              <View\n                style={{\n                  height: 80,\n                  alignSelf: \"flex-end\",\n                  alignItems: \"center\",\n                  alignContent: \"center\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-start\",\n                }}\n              >\n                <TouchableOpacity\n                  onPress={() => sendEmail(item.contact_email)}\n                  style={{\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Image\n                    source={require(\"../../../assets/mail.png\")}\n                    style={{\n                      height: 40,\n                      width: 40,\n                      resizeMode: \"contain\",\n                      marginRight: 12,\n                    }}\n                  ></Image>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() => sendSMS(item.contact_number)}\n                  style={{\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Image\n                    source={require(\"../../../assets/chat.png\")}\n                    style={{\n                      height: 40,\n                      width: 40,\n                      resizeMode: \"contain\",\n                      marginRight: 12,\n                    }}\n                  ></Image>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() => makePhoneCall(item.contact_number)}\n                  style={{\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Image\n                    source={require(\"../../../assets/phone.png\")}\n                    style={{\n                      height: 40,\n                      width: 40,\n                      marginLeft: \"5%\",\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n\n          <View\n            style={{\n              width: \"100%\",\n              marginTop: 12,\n              alignItems: \"center\",\n              flexDirection: \"row\",\n              paddingHorizontal: 12,\n            }}\n          >\n            <Text\n              style={{\n                backgroundColor: Colors.PrimaryColor,\n                paddingHorizontal: 12,\n                paddingVertical: 6,\n                color: Colors.white,\n                borderRadius: 6,\n                fontWeight: \"bold\",\n                fontSize: 12,\n              }}\n            >\n              Current Deposition : <Text>4</Text>\n            </Text>\n          </View>\n          <View style={styles.activitytype}>\n            <Text style={styles.label}>\n              Activity DisPosition\n              <Text style={styles.selectedValue}>\n                {selectedThirdOption}\n              </Text>{\" \"}\n            </Text>\n            <View\n              style={{\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: 40,\n                width: 40,\n                borderRadius: 100,\n                alignSelf: \"center\",\n                flexDirection: \"row\",\n              }}\n            >\n              <TouchableOpacity onPress={openThirdModal}>\n                <Image\n                  source={require(\"../../../assets/plus.png\")}\n                  style={{\n                    height: 15,\n                    width: 15,\n                    alignSelf: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    backgroundColor: Colors.PrimaryColor,\n                  }}\n                />\n              </TouchableOpacity>\n              <Modal\n                animationType=\"fade\"\n                transparent={true}\n                visible={isThirdModalVisible}\n                onRequestClose={closeThirdModal}\n              >\n                <View style={styles.modalContainer}>\n                  <View style={styles.modalContent}>\n                    <TouchableOpacity\n                      style={styles.optionButton}\n                      onPress={() => handleThirdOptionSelect(\"ContactSigned\")}\n                    >\n                      <Text style={styles.optionText}>Contact Signed</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={styles.optionButton}\n                      onPress={() => handleThirdOptionSelect(\"Pending\")}\n                    >\n                      <Text style={styles.optionText}>Pending</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={styles.optionButton}\n                      onPress={() => handleThirdOptionSelect(\"prepare\")}\n                    >\n                      <Text style={styles.optionText}>Prepare</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      style={styles.optionButton}\n                      onPress={() => handleThirdOptionSelect(\"Hold\")}\n                    >\n                      <Text style={styles.optionText}>Hold</Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </Modal>\n            </View>\n          </View>\n\n          <View style={styles.activitytype}>\n            <Text style={styles.label}>\n              Activity Type\n              <Text style={styles.selectedValue}>{selectedOption}</Text>{\" \"}\n            </Text>\n            <View\n              style={{\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: 40,\n                width: 40,\n                borderRadius: 100,\n                alignSelf: \"center\",\n                flexDirection: \"row\",\n                backgroundColor: Colors.PrimaryColor,\n              }}\n            >\n              <TouchableOpacity onPress={openModal}>\n                <Image\n                  source={require(\"../../../assets/plus.png\")}\n                  style={{\n                    height: 15,\n                    width: 15,\n                    alignSelf: \"center\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n            <Modal\n              animationType=\"fade\"\n              transparent={true}\n              visible={isModalVisible}\n              onRequestClose={closeModal}\n            >\n              <Text style={styles.selectedValue}>{selectedOption}</Text>\n              <View style={styles.modalContainer}>\n                <View style={styles.modalContent}>\n                  <TouchableOpacity\n                    style={styles.optionButton}\n                    onPress={() => handleOptionSelect(\"Call\")}\n                  >\n                    <Text style={styles.optionText}>Call</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={styles.optionButton}\n                    onPress={() => handleOptionSelect(\"Message\")}\n                  >\n                    <Text style={styles.optionText}>Message</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={styles.optionButton}\n                    onPress={() => handleOptionSelect(\"Email\")}\n                  >\n                    <Text style={styles.optionText}>Email</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </Modal>\n          </View>\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Activity Notes</Text>\n            <View\n              style={{\n                width: \"100%\",\n                height: 100,\n                marginTop: 10,\n                justifyContent: \"center\",\n              }}\n            >\n              <TextInput\n                style={{\n                  width: \"100%\",\n                  borderRadius: 8,\n                  height: 100,\n                  paddingHorizontal: 15,\n                  color: Colors.black,\n                  borderColor: Colors.PrimaryColor,\n                  //backgroundColor: \"#e6e8ea\",\n                  borderColor:Colors.cream,\n                  borderWidth:1,\n                  fontSize: 14,\n                  padding: 2,\n                  height: \"100%\",\n                  verticalAlign:\"top\",\n                  paddingTop:12\n                 \n                }}\n                autoCorrect={false}\n                returnKeyType=\"done\"\n                onChangeText={(text) => setActivityNote(text)}\n              />\n            </View>\n          </View>\n          <View style={styles.activitytype}>\n            <Text style={styles.label}>\n              Next Action\n              <Text style={styles.selectedValue}>{selectedSecondOption}</Text>\n            </Text>\n\n            <View\n              style={{\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: 40,\n                width: 40,\n                borderRadius: 100,\n                alignSelf: \"center\",\n                flexDirection: \"row\",\n              }}\n            >\n              <TouchableOpacity onPress={openSecondModal}>\n                <Image\n                  source={require(\"../../../assets/plus.png\")}\n                  style={{\n                    height: 15,\n                    width: 15,\n                    alignSelf: \"center\",\n                    alignItems: \"center\",\n                    backgroundColor: Colors.PrimaryColor,\n                    justifyContent: \"center\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n            <Modal\n              animationType=\"fade\"\n              transparent={true}\n              visible={isSecondModalVisible}\n              onRequestClose={closeSecondModal}\n            >\n              <View style={styles.modalContainer}>\n                <View style={styles.modalContent}>\n                  <TouchableOpacity\n                    style={styles.optionButton}\n                    onPress={() => handleSecondOptionSelect(\"Call\")}\n                  >\n                    <Text style={styles.optionText}>Call</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={styles.optionButton}\n                    onPress={() => handleSecondOptionSelect(\"Message\")}\n                  >\n                    <Text style={styles.optionText}>Message</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={styles.optionButton}\n                    onPress={() => handleSecondOptionSelect(\"Email\")}\n                  >\n                    <Text style={styles.optionText}>Email</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </Modal>\n          </View>\n          <View style={styles.activitytype}>\n            <Text style={styles.label}>Due Date</Text>\n          </View>\n          <View style={styles.inputContainer}>\n            <View\n              style={{\n                width: \"100%\",\n                borderRadius: 8,\n                height: \"100%\",\n                paddingVertical: 9,\n                color: Colors.black,\n                borderColor: Colors.PrimaryColor,\n               // backgroundColor: Colors.gray,\n               borderColor:Colors.cream,\n               borderWidth:1,\n                fontSize: 14,\n                paddingTop:18,\n               \n                paddingHorizontal: 15,\n                height: 55,\n                \n              }}\n            >\n              <TouchableOpacity\n                onPress={showDatePicker}\n                style={styles.datePickerButton}\n              >\n                <Text style={styles.datePickerText}>\n                  {selectedDate ? formatDate(selectedDate) : \"None\"}{\" \"}\n                </Text>\n              </TouchableOpacity>\n\n              <DateTimePickerModal\n                isVisible={isDatePickerVisible}\n                mode=\"datetime\"\n                onConfirm={handleConfirm}\n                onCancel={hideDatePicker}\n                style={{\n                  width: \"100%\",\n                  borderRadius: 8,\n                  height: \"100%\",\n                  paddingHorizontal: 15,\n                  color: Colors.black,\n                  borderColor: Colors.PrimaryColor,\n                  backgroundColor: Colors.gray,\n                  fontSize: 14,\n                  padding: 2,\n                }}\n              />\n            </View>\n          </View>\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Next Deposite Message</Text>\n            <View\n              style={{\n                width: \"100%\",\n                height: 100,\n                marginTop: 10,\n                justifyContent: \"center\",\n              }}\n            >\n              <TextInput\n                style={{\n                  width: \"100%\",\n                  borderRadius: 8,\n                  height: 100,\n                  paddingHorizontal: 15,\n                  color: Colors.black,\n                  borderColor: Colors.PrimaryColor,\n                  //backgroundColor: \"#e6e8ea\",\n                  borderColor:Colors.cream,\n                  borderWidth:1,\n                  fontSize: 14,\n                  padding: 2,\n                  height: \"100%\", verticalAlign:\"top\",\n                  paddingTop:12\n                }}\n                autoCorrect={false}\n                returnKeyType=\"done\"\n                onChangeText={(text) => setFutureActivity(text)}\n              />\n            </View>\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              width: \"90%\",\n              height: 60,\n              marginTop: 20,\n              alignSelf: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <TouchableOpacity\n              style={{\n                height: 35,\n                width: \"45%\",\n                borderRadius: 5,\n                backgroundColor: Colors.PrimaryColor,\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n              onPress={handleaddDisposition}\n            >\n              <Text\n                style={{\n                  fontSize: 14,\n\n                  color: Colors.white,\n                }}\n              >\n                Submit\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default DisPosition;\n\nconst styles = StyleSheet.create({\n  activitytype: {\n    paddingHorizontal: 12,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    marginTop: 15,\n  },\n  inputContainer: { paddingHorizontal: 12, marginTop: 15 },\n\n  label: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n  },\n  dropdownButton: {\n    backgroundColor: Colors.PrimaryColor,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 40,\n    width: 40,\n    borderRadius: 100,\n    alignSelf: \"center\",\n    flexDirection: \"row\",\n  },\n  plusIcon: {\n    height: 15,\n    width: 15,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n  modalContent: {\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 8,\n    padding: 20,\n    alignItems: \"center\",\n    width: 200,\n  },\n  optionButton: {\n    paddingVertical: 10,\n    width: \"100%\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#EEEEEE\",\n  },\n  optionText: {\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n  selectedValue: {\n    marginTop: 8,\n    fontSize: 16,\n    color: Colors.PrimaryColor,\n    textAlign: \"center\",\n  },\n  selectedValue: {\n    marginLeft: 10,\n  },\n});\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Image,\n  Text,\n  View,\n  TouchableOpacity,\n  StyleSheet,\n  SafeAreaView,\n  TextInput,\n  Switch,\n} from \"react-native\";\nimport Checkbox from \"expo-checkbox\";\nimport Colors from \"../../utils/Colors\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\nconst TransactionDesk = () => {\n  const [isEnabled, setIsEnabled] = useState(false);\n  const [isChecked, setChecked] = useState(false);\n  const navigation = useNavigation();\n  const [toggle, setToggle] = useState(false);\n  const toggleSwitch = () => {\n    setIsEnabled((previousState) => !previousState);\n    setToggle(!isEnabled);\n  };\n  return (\n    <SafeAreaView style={{ flex: 1, height:\"100%\" }}>\n        <View\n          style={{\n            height: 60,\n            width: \"100%\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            backgroundColor: Colors.PrimaryColor,\n          }}\n        >\n          <TouchableOpacity onPress={() => navigation.goBack()}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginLeft: 10,\n            }}\n          >\n            <Image\n              style={{\n                height: 15,\n                width: 15,\n                resizeMode: \"contain\",\n                tintColor: Colors.white,\n              }}\n              source={require(\"../../../assets/back.png\")}\n            ></Image>\n            {/* <Text style={{ fontSize: 15, color: Colors.white }}>Back</Text> */}\n          </TouchableOpacity>\n          <Text\n            style={{ fontSize: 19, fontWeight: \"bold\", color: Colors.white }}\n          >\n            Transaction Desk\n          </Text>\n          <TouchableOpacity\n            onPress={() =>\n              navigation.navigate(\"EditContactsDetails\", { item: items })\n            }\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginRight: 10,\n            }}\n          >\n            <Text></Text>\n          </TouchableOpacity>\n        </View>\n        <View\n          style={{\n            height: 80,\n            width: \"100%\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: Colors.PrimaryColor,\n           \n          }}\n        >\n          <View\n            style={{\n              backgroundColor: Colors.buttonColor,\n              borderRadius: 5,\n              width: \"92%\",\n              height: 50,\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Image\n              style={{\n                marginLeft: 10,\n                height: 20,\n                width: 20,\n                resizeMode: \"contain\",\n                tintColor: Colors.white,\n              }}\n              source={require(\"../../../assets/search.png\")}\n            />\n\n            <TextInput\n              allowFontScaling={false}\n              placeholder=\"Search\"\n              placeholderTextColor={Colors.white}\n              style={{\n                color: Colors.white,\n                fontSize: 15,\n                marginLeft: 10,\n                marginHorizontal: 10,\n                height: \"100%\",\n                width: \"100%\",\n              }}\n            />\n          </View>\n        </View>\n      <ScrollView style={{ height:\"100%\",flex: 1, }}>\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: Colors.white, height:\"100%\"\n        }}\n      >\n      \n       <View style={styles.maincover}>\n          <View style={styles.firstcolnew}>\n            <View style={styles.maincolumn}>\n              <View style={styles.mainheading}>\n                <Text style={styles.mainheadinginner}>Activities</Text>\n              </View>\n              <View style={styles.activitycover}>\n                <Checkbox\n                  style={styles.checkbox}\n                  value={isChecked}\n                  onValueChange={setChecked}\n                  color={isChecked ? \"#576ebd\" : undefined}\n                />\n<Image\n                    source={require(\"../../../assets/share.png\")}\n                    style={{\n                      height: 30,\n                      width: 30,\n                      marginLeft:12,\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                <Text style={styles.activityname}> \n                 Escrow Due</Text>\n              </View>\n            </View>\n            <View style={styles.maincolumn}>\n              <View style={styles.mainheadingend}>\n                <Text style={styles.mainheadinginner}>Due Dates</Text>\n              </View>\n              <View style={styles.activitycoverone}>\n                <Text style={styles.activitydate}>4/04/2023 </Text>\n                \n              </View>\n              \n            </View>\n          </View>\n          <View style={styles.firstcol}>\n            <View style={styles.maincolumn}>\n              <View style={styles.mainheading}>\n                <Text style={styles.mainheadinginner}>Action</Text>\n              </View>\n              <View style={styles.activitycover}>\n                <Text style={styles.activityicons}>\n                  <Image\n                    source={require(\"../../../assets/share.png\")}\n                    style={{\n                      height: 30,\n                      width: 30,\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                </Text>\n                <Text style={styles.activityicons}>\n                  <Image\n                    source={require(\"../../../assets/share.png\")}\n                    style={{\n                      height: 30,\n                      width: 30,\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.maincolumn}>\n              <View style={styles.mainheading}>\n                <Text style={styles.mainheadinginner}>Preview</Text>\n              </View>\n              <View style={styles.activitycover}>\n                <Text style={styles.activityicons}>\n                  <Image\n                    source={require(\"../../../assets/share.png\")}\n                    style={{\n                      height: 30,\n                      width: 30,\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.maincolumn}>\n            <Text style={styles.mainheadinginner}></Text>\n              <View style={styles.activitycover}>\n                <Text style={styles.activityiconstoggle}>\n                  <Switch\n                    style={styles.mainbt}\n                    trackColor={{ false: \"#767577\", true: \"#576ebd\" }}\n                    thumbColor={\"#f4f3f4\"}\n                    ios_backgroundColor=\"#3e3e3e\"\n                    onValueChange={toggleSwitch}\n                    value={isEnabled}\n                  />\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View> \n        <View style={styles.maincover}>\n          <View style={styles.firstcolnew}>\n            <View style={styles.maincolumn}>\n              <View style={styles.mainheading}>\n                <Text style={styles.mainheadinginner}>Activities</Text>\n              </View>\n              <View style={styles.activitycover}>\n                <Checkbox\n                  style={styles.checkbox}\n                  value={isChecked}\n                  onValueChange={setChecked}\n                  color={isChecked ? \"#576ebd\" : undefined}\n                />\n                <Image\n                    source={require(\"../../../assets/share.png\")}\n                    style={{\n                      height: 30,\n                      width: 30,\n                      marginLeft:12,\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                <Text style={styles.activityname}>Loan Approval Due</Text>\n              </View>\n            </View>\n            <View style={styles.maincolumn}>\n              <View style={styles.mainheadingend}>\n                <Text style={styles.mainheadinginner}>Due Dates</Text>\n              </View>\n              <View style={styles.activitycoverone}>\n                <Text style={styles.activitydatered}>4/04/2023\n                </Text>\n                <Text style={styles.activitydatered}>\n                OVERDUE\n                </Text>\n              </View>\n            </View>\n          </View>\n          <View style={styles.firstcol}>\n            <View style={styles.maincolumn}>\n              <View style={styles.mainheading}>\n                <Text style={styles.mainheadinginner}>Action</Text>\n              </View>\n              <View style={styles.activitycover}>\n                <Text style={styles.activityicons}>\n                  <Image\n                    source={require(\"../../../assets/share.png\")}\n                    style={{\n                      height: 30,\n                      width: 30,\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                </Text>\n                <Text style={styles.activityicons}>\n                  <Image\n                    source={require(\"../../../assets/share.png\")}\n                    style={{\n                      height: 30,\n                      width: 30,\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.maincolumn}>\n              <View style={styles.mainheading}>\n                <Text style={styles.mainheadinginner}>Preview</Text>\n              </View>\n              <View style={styles.activitycover}>\n                <Text style={styles.activityicons}>\n                  <Image\n                    source={require(\"../../../assets/share.png\")}\n                    style={{\n                      height: 30,\n                      width: 30,\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.maincolumn}>\n                <Text style={styles.mainheadinginner}></Text>\n              <View style={styles.activitycover}>\n                <Text style={styles.activityiconstoggle}>\n                  <Switch\n                    style={{ marginRight: 12 }}\n                    trackColor={{ false: \"#767577\", true: \"#576ebd\" }}\n                    thumbColor={\"#f4f3f4\"}\n                    ios_backgroundColor=\"#3e3e3e\"\n                    onValueChange={toggleSwitch}\n                    value={isEnabled}\n                  />\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View> \n        <View style={styles.maincover}>\n          <View style={styles.firstcolnew}>\n            <View style={styles.maincolumn}>\n              <View style={styles.mainheading}>\n                <Text style={styles.mainheadinginner}>Activities</Text>\n              </View>\n              <View style={styles.activitycover}>\n                <Checkbox\n                  style={styles.checkbox}\n                  value={isChecked}\n                  onValueChange={setChecked}\n                  color={isChecked ? \"#576ebd\" : undefined}\n                />\n<Image\n                    source={require(\"../../../assets/share.png\")}\n                    style={{\n                      height: 30,\n                      width: 30,\n                      marginLeft:12,\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                <Text style={styles.activityname}>Appraisal Due</Text>\n              </View>\n            </View>\n            <View style={styles.maincolumn}>\n              <View style={styles.mainheadingend}>\n                <Text style={styles.mainheadinginnerend}>Due Dates</Text>\n              </View>\n              <View style={styles.activitycoverone}>\n                <Text style={styles.activitydateyellow}>4/04/2023 \n                \n                </Text>\n                <Text style={styles.activitydateyellow}>\n                 DUE TOMORROW\n                </Text>\n              </View>\n            </View>\n          </View>\n          <View style={styles.firstcol}>\n            <View style={styles.maincolumn}>\n              <View style={styles.mainheading}>\n                <Text style={styles.mainheadinginner}>Action</Text>\n              </View>\n              <View style={styles.activitycover}>\n                <Text style={styles.activityicons}>\n                  <Image\n                    source={require(\"../../../assets/share.png\")}\n                    style={{\n                      height: 30,\n                      width: 30,\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                </Text>\n                <Text style={styles.activityicons}>\n                  <Image\n                    source={require(\"../../../assets/share.png\")}\n                    style={{\n                      height: 30,\n                      width: 30,\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.maincolumn}>\n              <View style={styles.mainheading}>\n                <Text style={styles.mainheadinginner}>Preview</Text>\n              </View>\n              <View style={styles.activitycover}>\n                <Text style={styles.activityicons}>\n                  <Image\n                    source={require(\"../../../assets/share.png\")}\n                    style={{\n                      height: 30,\n                      width: 30,\n                      resizeMode: \"contain\",\n                    }}\n                  ></Image>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.maincolumn}>\n            <View style={styles.mainheading}>\n                <Text style={styles.mainheadinginner}></Text>\n              </View>\n              <View style={styles.activitycover}>\n                <Text style={styles.activityiconstoggle}>\n                  <Switch\n                    style={{ marginRight: 12 }}\n                    trackColor={{ false: \"#767577\", true: \"#576ebd\" }}\n                    thumbColor={\"#f4f3f4\"}\n                    ios_backgroundColor=\"#3e3e3e\"\n                    onValueChange={toggleSwitch}\n                    value={isEnabled}\n                  />\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View>\n      </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default TransactionDesk;\n\nconst styles = StyleSheet.create({\n  maincover: {\n    paddingHorizontal: 12,\n    paddingTop: 12,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    borderBottomColor: Colors.gray,\n    borderBottomWidth: 1,\n    paddingBottom: 12,\n    //height:\"100%\"\n  },\n\n  activitycover: {\n    flexDirection: \"row\",\n    height: 40,\n    alignItems: \"center\",\n    justifyContent:\"center\",\n  \n  },\n  activitycoverred: {\n    flexDirection: \"column\",\n    height: 40,\n    alignItems: \"center\",\n    justifyContent:\"flex-end\",textAlign:\"right\",\n  \n  },\n  \n  activityname: { marginLeft: 7, fontSize: 14,marginTop:-5 },\n  activitydate: {\n    textAlign:\"right\",\n    alignItems:\"flex-end\",\n        fontSize: 13,\n    color: \"green\",\n  },\n  mainheadinginnerend:{ \nfontWeight: \"bold\", \nfontSize: 16 ,\n//marginRight:-20,\ntextAlign:\"right\",\nalignItems:\"flex-end\",\n//position:\"relative\",\n//left:27\n},\n  activitydatered:{ textAlign:\"right\",\n  alignItems:\"flex-end\",\n      fontSize: 13,\n    color: \"red\",\n    //position:\"relative\",\n    //left:4\n\n  },\n  firstcol: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    alignItems:\"center\"\n  },\n  firstcolnew:{ flexDirection: \"row\",\n  justifyContent: \"space-between\",\n  width: \"100%\",\nalignItems:\"flex-start\"\n},\n  mainheadinginner: {  fontWeight: \"bold\", fontSize: 16 ,},\n  activityicons: { marginRight: 6, height: 40, marginTop: 6 },\n  maincolumn: { paddingRight: 12, marginBottom: 12 ,\n  \n  justifyContent:\"flex-end\",\n  textAlign:\"right\"\n  \n  },\n  \n  activitydateyellow:{ \ntextAlign:\"right\",\nalignItems:\"flex-end\",\n    fontSize: 13,\n    color: \"orange\",},\n  // activityiconstoggle: { marginTop: 12, marginRight: 6 },\n  mainheading:\n  {\n    alignItems:\"flex-start\"\n  },\n  activitycoverone:{marginTop:10},\n  activitycover:{marginTop:10,\n    flexDirection:\"row\",alignItems:\"center\"\n  }\n});\n","import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport {\r\n  SafeAreaView,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n} from \"react-native\";\r\nimport Images from \"../utils/Images\";\r\nimport Fonts from \"../utils/Fonts\";\r\nimport Colors from \"../utils/Colors\";\r\nimport Dashboard from \"../container/Dashboard/Dashboard\";\r\n//import MyClients from \"../container/MyClients/MyClients\";\r\nimport Leads from \"../container/Leads/Leads\";\r\nimport Contact from \"../container/Contact/Contact\";\r\nimport Transactions from \"../container/Transactions/Transactions\";\r\nimport DisPosition from \"../container/DisPosition/DisPosition\";\r\nimport Marketing from \"../container/Marketing/Marketing\";\r\nimport { styleProps } from \"react-native-web/dist/cjs/modules/forwardedProps\";\r\nimport TransactionDesk from \"../container/TransactionDesk/TransactionDesk\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst BottomTabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{ headerShown: false, keyboardHidesTabBar: true }}\r\n      tabBar={(props) => <CustomTabBar {...props} size={30} />}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={Dashboard}\r\n        options={{\r\n          tabBarLabel: (\r\n            <Text style={{ fontSize: 14 }} allowFontScaling={false}>\r\n              DashBoard\r\n            </Text>\r\n          ),\r\n\r\n          tabBarIcon: require(\"./../assets/images/home.png\"),\r\n\r\n          //keyboardHidesTabBar: true,\r\n          tabBarHideOnKeyboard: true,\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Contact\"\r\n        component={Contact}\r\n        options={{\r\n          tabBarLabel: (\r\n            <Text style={{ fontSize: 14 }} allowFontScaling={false}>\r\n              Contact\r\n            </Text>\r\n          ),\r\n          tabBarIcon: require(\"./../assets/images/contactss.png\"),\r\n          //keyboardHidesTabBar: true,\r\n          tabBarHideOnKeyboard: true,\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Leads\"\r\n        component={Leads}\r\n        options={{\r\n          tabBarLabel: (\r\n            <Text style={{ fontSize: 14 }} allowFontScaling={false}>\r\n              Opportunities\r\n            </Text>\r\n          ),\r\n\r\n          tabBarIcon: require(\"./../assets/images/clientsss.png\"),\r\n          //keyboardHidesTabBar: true,\r\n          tabBarHideOnKeyboard: true,\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"TransactionDesk\"\r\n        component={TransactionDesk}\r\n        options={{\r\n          tabBarLabel: (\r\n            <Text style={{ fontSize: 14 }} allowFontScaling={false}>\r\n              Transactions\r\n            </Text>\r\n          ),\r\n          tabBarIcon: require(\"./../assets/images/transss.png\"),\r\n          //keyboardHidesTabBar: true,\r\n          tabBarHideOnKeyboard: true,\r\n          tabBarBackground: \"grey\",\r\n        }}\r\n      />\r\n      {/* <Tab.Screen\r\n        name=\"Marketing\"\r\n        component={Marketing}\r\n        options={{\r\n          tabBarLabel: (\r\n            <Text style={{ fontSize: 10 }} allowFontScaling={false}>\r\n              Marketing\r\n            </Text>\r\n          ),\r\n          tabBarIcon: require(\"../../assets/account.png\"),\r\n          //keyboardHidesTabBar: true,\r\n          tabBarHideOnKeyboard: true,\r\n        }}\r\n      /> */}\r\n    </Tab.Navigator>\r\n  );\r\n};\r\nfunction CustomTabBar({ state, descriptors, navigation }) {\r\n  return (\r\n    <>\r\n      <SafeAreaView\r\n        style={{\r\n          width: \"100%\",\r\n          maxHeight: 80,\r\n          backgroundColor: Colors.white,\r\n          borderTopColor: Colors.black,\r\n          borderTopWidth: 0.5,\r\n        }}\r\n      >\r\n        <KeyboardAvoidingView\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-evenly\",\r\n            alignItems: \"center\",\r\n            alignContent: \"center\",\r\n          }}\r\n        >\r\n          {state.routes.map((route, index) => {\r\n            const { options } = descriptors[route.key];\r\n            const label =\r\n              options.tabBarLabel !== undefined\r\n                ? options.tabBarLabel\r\n                : options.title !== undefined\r\n                ? options.title\r\n                : route.name;\r\n            const image =\r\n              options.tabBarIcon !== undefined\r\n                ? options.tabBarIcon\r\n                : route.name;\r\n            const isFocused = state.index === index;\r\n            const onPress = () => {\r\n              const event = navigation.emit({\r\n                type: \"tabPress\",\r\n                target: route.key,\r\n                canPreventDefault: true,\r\n              });\r\n              if (!isFocused && !event.defaultPrevented) {\r\n                // The `merge: true` option makes sure that the params inside the tab screen are preserved\r\n                navigation.navigate({ name: route.name, merge: true });\r\n              }\r\n            };\r\n            const onLongPress = () => {\r\n              navigation.emit({\r\n                type: \"tabLongPress\",\r\n                target: route.key,\r\n              });\r\n            };\r\n            return (\r\n              <>\r\n                <TouchableOpacity\r\n                  accessibilityRole=\"button\"\r\n                  accessibilityState={isFocused ? { selected: true } : {}}\r\n                  accessibilityLabel={options.tabBarAccessibilityLabel}\r\n                  testID={options.tabBarTestID}\r\n                  onPress={onPress}\r\n                  onLongPress={onLongPress}\r\n                  style={{\r\n                    height: 70,\r\n                    width: 100,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    alignContent: \"center\",\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      height: 50,\r\n                      width: 50,\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={image}\r\n                      resizeMode=\"contain\"\r\n                      style={{\r\n                        height: \"70%\",\r\n                        width: \"70%\",\r\n                        tintColor: isFocused ? Colors.PrimaryColor : null,\r\n\r\n                        marginBottom: 10,\r\n                      }}\r\n                    ></Image>\r\n                  </View>\r\n                  <Text\r\n                    style={{\r\n                      color: isFocused ? Colors.PrimaryColor : null,\r\n                      position: \"absolute\",\r\n                      bottom: 2,\r\n                      fontSize: 12,\r\n                      marginTop: 10,\r\n                    }}\r\n                  >\r\n                    {label}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </>\r\n            );\r\n          })}\r\n        </KeyboardAvoidingView>\r\n      </SafeAreaView>\r\n    </>\r\n  );\r\n}\r\nexport default BottomTabNavigator;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  SafeAreaView,\r\n  Alert,\r\n  Linking,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport * as DocumentPicker from \"expo-document-picker\";\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { getContacts } from \"../../modules/getContacts\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Activity from \"../../components/Activity\";\r\nimport * as Print from \"expo-print\";\r\nimport * as Sharing from \"expo-sharing\";\r\nimport * as FileSystem from \"expo-file-system\";\r\n\r\nconst Contacts = () => {\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filteredData, setFilteredData] = useState();\r\n  const menuRef = useRef(null);\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    getAllContacts();\r\n  }, []);\r\n\r\n  const searchFilter = (text) => {\r\n    setSearchText(text);\r\n    const filteredItems = data.filter((item) =>\r\n      item.contact_name.toLowerCase().includes(text.toLowerCase())\r\n    );\r\n    setFilteredData(filteredItems);\r\n    setIsSearching(true);\r\n  };\r\n\r\n  const getAllContacts = () => {\r\n    dispatch(getContacts()).then((response) => {\r\n      const contactsData = response.payload.data;\r\n      setData(Object.values(contactsData));\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    if (!loading) {\r\n      setLoading(true);\r\n      getAllContacts();\r\n    }\r\n  };\r\n\r\n  const handleMenuItemSelect = (item) => {\r\n    // Handle menu item selection\r\n    switch (item) {\r\n      case \"Import Contacts\":\r\n        handleImportPDF();\r\n        break;\r\n      case \"Export Contacts\":\r\n        handleExportPDF();\r\n        break;\r\n      case \"User Agreements\":\r\n        // Handle User Agreements\r\n        break;\r\n      case \"Pay History\":\r\n        // Handle Pay History\r\n        break;\r\n      case \"Reports\":\r\n        // Handle Reports\r\n        break;\r\n      case \"Disclosures\":\r\n        // Handle Disclosures\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setMenuVisible(false);\r\n  };\r\n\r\n  // ...\r\n\r\n  const handleExportPDF = async () => {\r\n    try {\r\n      // Fetch the API data\r\n\r\n      // Create an HTML template with the API data\r\n      const htmlTemplate = `\r\n      <html>\r\n        <head>\r\n          <style>\r\n            body {\r\n              font-family: Arial, sans-serif;\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <h1>Contact Data</h1>\r\n          ${data\r\n            .map(\r\n              (contact) => `\r\n                <div>\r\n                  <p><strong>Contact Name:</strong> ${contact.contact_full_name}</p>\r\n                  <p><strong>Contact Email:</strong> ${contact.contact_email}</p>\r\n                  <p><strong>Contact Number:</strong> ${contact.contact_number}</p>\r\n                  <p><strong>Linked Lead:</strong> ${contact.linked_lead}</p>\r\n                </div>\r\n              `\r\n            )\r\n            .join(\"\")}\r\n        </body>\r\n      </html>\r\n    `;\r\n\r\n      // Create a temporary HTML file\r\n      const htmlFileUri = `${FileSystem.cacheDirectory}contact_data.html`;\r\n      await FileSystem.writeAsStringAsync(htmlFileUri, htmlTemplate, {\r\n        encoding: FileSystem.EncodingType.UTF8,\r\n      });\r\n\r\n      // Generate a PDF file\r\n      const pdfFileUri = `${FileSystem.cacheDirectory}contact_data.pdf`;\r\n      await Print.printToFileAsync({\r\n        html: htmlFileUri,\r\n        width: 612,\r\n        height: 792,\r\n        base64: false,\r\n        filePath: pdfFileUri,\r\n      });\r\n\r\n      // Share the PDF file\r\n      await Sharing.shareAsync(pdfFileUri, {\r\n        mimeType: \"application/pdf\",\r\n        dialogTitle: \"Export PDF\",\r\n      });\r\n\r\n      // Delete the temporary files\r\n      await FileSystem.deleteAsync(htmlFileUri, { idempotent: true });\r\n      await FileSystem.deleteAsync(pdfFileUri, { idempotent: true });\r\n    } catch (error) {\r\n      Alert.alert(\r\n        \"Export PDF Error\",\r\n        \"An error occurred while exporting contact data as PDF.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleImportPDF = async () => {\r\n    try {\r\n      const res = await DocumentPicker.getDocumentAsync({\r\n        type: \"application/pdf\",\r\n      });\r\n\r\n      if (res.type === \"success\") {\r\n        // Handle the selected PDF file\r\n        const { uri, name, size } = res;\r\n        // Implement your logic to process the PDF file here\r\n        console.log(\"Import PDF\", `Selected PDF: ${name}`);\r\n        Alert.alert(\"Import PDF\", `Selected PDF: ${name}`);\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Document picker error:\", error);\r\n    }\r\n  };\r\n  const makePhoneCall = (item) => {\r\n    let phoneNumber = item;\r\n    Linking.openURL(`tel:${phoneNumber}`);\r\n  };\r\n  const sendEmail = (item) => {\r\n    let recipient = item;\r\n    let subject = \"Subject of email\";\r\n    let body = \"Body of email\";\r\n    Linking.openURL(`mailto:${recipient}?subject=${subject}&body=${body}`);\r\n  };\r\n\r\n  const sendSMS = (item) => {\r\n    let phoneNumber = item;\r\n    let message = \"Hello from my app!\";\r\n    Linking.openURL(`sms:${phoneNumber}`);\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      <View style={{ flex: 1, backgroundColor: Colors.white }}>\r\n        <View\r\n          style={{\r\n           paddingVertical:22,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                tintColor: Colors.white,\r\n              }}\r\n              source={require(\"../../../assets/back.png\")}\r\n            />\r\n            {/* <Text style={{ fontSize: 15, color: Colors.white }}>Back </Text> */}\r\n          </TouchableOpacity>\r\n          <Text\r\n            style={{ fontSize: 19, fontWeight: \"bold\", color: Colors.white }}\r\n          >\r\n            Contacts \r\n          </Text>\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(\"AddContacts\")}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                tintColor: Colors.white,\r\n              }}\r\n              source={require(\"../../../assets/plus.png\")}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            height: 80,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n            //marginBottom: 20,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              backgroundColor: Colors.buttonColor,\r\n              borderRadius: 5,\r\n              width: \"92%\",\r\n              height: 50,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../../../assets/search.png\")}\r\n              style={{\r\n                height: 20,\r\n                width: 20,\r\n                marginLeft: 10,\r\n                tintColor: Colors.white,\r\n              }}\r\n            />\r\n            <TextInput\r\n              allowFontScaling={false}\r\n              placeholder=\"Search\"\r\n              placeholderTextColor={Colors.white}\r\n              onChangeText={searchFilter}\r\n              style={{\r\n                color: Colors.white,\r\n                fontSize: 15,\r\n                marginLeft: 10,\r\n              }}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {/* <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            paddingHorizontal: 10,\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.buttonColor,\r\n              borderRadius: 5,\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 20,\r\n            }}\r\n            onPress={() => handleMenuItemSelect(\"Import Contacts\")}\r\n          >\r\n            <Text style={{ color: Colors.white }}>Import Contacts</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.buttonColor,\r\n              borderRadius: 5,\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 20,\r\n            }}\r\n            onPress={() => handleMenuItemSelect(\"Export Contacts\")}\r\n          >\r\n            <Text style={{ color: Colors.white }}>Export Contacts</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.buttonColor,\r\n              borderRadius: 5,\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 20,\r\n            }}\r\n            onPress={() => handleMenuItemSelect(\"Reports\")}\r\n          >\r\n            <Text style={{ color: Colors.white }}>Reports</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.buttonColor,\r\n              borderRadius: 5,\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 20,\r\n            }}\r\n            onPress={() => handleMenuItemSelect(\"\")}\r\n          >\r\n            <Text style={{ color: Colors.white }}>User Agreements</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.buttonColor,\r\n              borderRadius: 5,\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 20,\r\n            }}\r\n            onPress={() => handleMenuItemSelect(\"Export Contacts\")}\r\n          >\r\n            <Text style={{ color: Colors.white }}>Pay History'</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={{\r\n              backgroundColor: Colors.buttonColor,\r\n              borderRadius: 5,\r\n              paddingVertical: 10,\r\n              paddingHorizontal: 20,\r\n            }}\r\n            onPress={() => handleMenuItemSelect(\"Export Contacts\")}\r\n          >\r\n            <Text style={{ color: Colors.white }}>Disclosures</Text>\r\n          </TouchableOpacity>\r\n        </View> */}\r\n\r\n        <View style={{ flex: 1, marginTop:15 }}>\r\n          {loading ? (\r\n            <Activity />\r\n          ) : (\r\n            <FlatList\r\n              data={isSearching ? filteredData : data}\r\n              ListFooterComponent={<View style={{ height: 50 }} />}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  onPress={() =>\r\n                    navigation.navigate(\"ContactsDetails\", { item: item })\r\n                  }\r\n                  style={{\r\n                    height: 80,\r\n                    width: \"97%\",\r\n                    alignSelf: \"center\",\r\n                    borderWidth: 1,\r\n                    borderColor: \"#bbbbbb52\",\r\n                    alignItems: \"center\",\r\n                    alignContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    backgroundColor: \"#987e7e17\",\r\n                    marginBottom: 5,\r\n                    padding: 12,\r\n                    justifyContent: \"space-between\",\r\n                    borderRadius: 6,\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      justifyContent: \"space-between\",\r\n                      flexDirection: \"row\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={{ uri: item.contact_image }}\r\n                      style={{\r\n                        height: 50,\r\n                        width: 50,\r\n                        borderRadius: 30,\r\n                        resizeMode: \"cover\",\r\n                      }}\r\n                    ></Image>\r\n\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.PrimaryColor,\r\n                        fontSize: 12,\r\n                      }}\r\n                    ></Text>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.black,\r\n                        fontSize: 14,\r\n                        fontWeight: \"bold\",\r\n                        Width: 200,\r\n                        paddingHorizontal: 4,\r\n                      }}\r\n                    >\r\n                      {item.contact_name}\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        height: 80,\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.black,\r\n                          fontSize: 12,\r\n                        }}\r\n                      >\r\n                        {item.post_title}\r\n                      </Text>\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        height: 80,\r\n                        alignSelf: \"flex-end\",\r\n                        alignItems: \"center\",\r\n                        alignContent: \"center\",\r\n                        flexDirection: \"row\",\r\n\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <TouchableOpacity\r\n                        onPress={() => sendEmail(item.contact_email)}\r\n                        style={{\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Image\r\n                          source={require(\"../../../assets/mail.png\")}\r\n                          style={{\r\n                            height: 40,\r\n                            width: 40,\r\n                            resizeMode: \"contain\",\r\n                          }}\r\n                        ></Image>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity\r\n                        onPress={() => sendSMS(item.contact_number)}\r\n                        style={{\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Image\r\n                          source={require(\"../../../assets/chat.png\")}\r\n                          style={{\r\n                            height: 40,\r\n                            width: 40,\r\n                            resizeMode: \"contain\",\r\n                          }}\r\n                        ></Image>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity\r\n                        onPress={() => makePhoneCall(item.contact_number)}\r\n                        style={{\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Image\r\n                          source={require(\"../../../assets/phone.png\")}\r\n                          style={{\r\n                            height: 40,\r\n                            width: 40,\r\n                            marginLeft: \"5%\",\r\n                            resizeMode: \"contain\",\r\n                          }}\r\n                        ></Image>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View\r\n                      style={{\r\n                        height: 80,\r\n                        justifyContent: \"center\",\r\n                        marginLeft: 10,\r\n                      }}\r\n                    >\r\n                      <Image\r\n                        source={require(\"../../../assets/leftArrow.png\")}\r\n                        style={{\r\n                          height: 10,\r\n                          width: 10,\r\n                          resizeMode: \"contain\",\r\n                        }}\r\n                      ></Image>\r\n                    </View>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              )}\r\n              ListEmptyComponent={\r\n                <View style={{ alignItems: \"center\", marginTop: 20 }}>\r\n                  <Text>No data found</Text>\r\n                </View>\r\n              }\r\n              onRefresh={handleRefresh}\r\n              refreshing={loading}\r\n              keyExtractor={(item) => item.id}\r\n            />\r\n          )}\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getAPI } from \"../config/apiMethod\";\r\nimport { url } from \"../config/url\";\r\n\r\nexport const getProperties = createAsyncThunk(\"getProperties\", async (page) => {\r\n  const urlDynamic =\r\n    \"https://surf.topsearchrealty.com/wp-json/wp/v2/estate_property?per_page=50\";\r\n  return await getAPI(urlDynamic)\r\n    .then(async (response) => {\r\n      const { data } = response;\r\n      console.log(\"rohan\");\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      if (e.response) {\r\n        console.log(\"api issue\", e.response);\r\n      } else if (e.request) {\r\n        console.log(\"api issue\", e.response);\r\n      } else {\r\n        console.log(\"api issue\", e.response);\r\n      }\r\n    });\r\n});\r\n\r\nconst getPropertiesSlice = createSlice({\r\n  name: \"getProperties\",\r\n  initialState: {\r\n    getPropertiesData: [],\r\n    status: null,\r\n  },\r\n  extraReducers: {\r\n    [getProperties.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getProperties.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.getPropertiesData = action.payload;\r\n    },\r\n    [getProperties.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default getPropertiesSlice.reducer;\r\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {getAPI} from '../config/apiMethod';\r\nimport {url} from '../config/url';\r\n\r\nexport const getSearchProperties = createAsyncThunk(\r\n  'getSearchProperties',\r\n  async text => {\r\n    const urlDynamic =\r\n      'https://surf.topsearchrealty.com/wp-json/wp/v2/search/?search=' + text;\r\n    return await getAPI(urlDynamic)\r\n      .then(async response => {\r\n        const {data} = response;\r\n        return data;\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        if (e.response) {\r\n          console.log('api issue', e.response);\r\n        } else if (e.request) {\r\n          console.log('api issue', e.response);\r\n        } else {\r\n          console.log('api issue', e.response);\r\n        }\r\n      });\r\n  },\r\n);\r\n\r\nconst getSearchPropertiesSlice = createSlice({\r\n  name: 'getSearchProperties',\r\n  initialState: {\r\n    getSearchPropertiesData: [],\r\n    status: null,\r\n  },\r\n  extraReducers: {\r\n    [getSearchProperties.pending]: (state, action) => {\r\n      state.status = 'loading';\r\n    },\r\n    [getSearchProperties.fulfilled]: (state, action) => {\r\n      state.status = 'success';\r\n      state.getSearchPropertiesData = action.payload;\r\n    },\r\n    [getSearchProperties.rejected]: (state, action) => {\r\n      state.status = 'failed';\r\n    },\r\n  },\r\n});\r\n\r\nexport default getSearchPropertiesSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getAPI } from \"../config/apiMethod\";\r\nimport { url } from \"../config/url\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nexport const getSearchhistory = createAsyncThunk(\r\n  \"getSearchhistory\",\r\n  async () => {\r\n    const id = await AsyncStorage.getItem(\"userId\");\r\n    const urlDynamic =\r\n      \"https://surf.topsearchrealty.com/wp-json/saved/search/?userid=\" + id;\r\n    return await getAPI(urlDynamic)\r\n      .then(async (response) => {\r\n        const { data } = response;\r\n        return data;\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        if (e.response) {\r\n          console.log(\"api issue\", e.response);\r\n        } else if (e.request) {\r\n          console.log(\"api issue\", e.response);\r\n        } else {\r\n          console.log(\"api issue\", e.response);\r\n        }\r\n      });\r\n  }\r\n);\r\n\r\nconst getSearchhistorySlice = createSlice({\r\n  name: \"getSearchhistory\",\r\n  initialState: {\r\n    getSearchhistoryData: [],\r\n    status: null,\r\n  },\r\n  extraReducers: {\r\n    [getSearchhistory.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getSearchhistory.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.getSearchhistoryData = action.payload;\r\n    },\r\n    [getSearchhistory.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default getSearchhistorySlice.reducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  FlatList,\r\n  ActivityIndicator,\r\n  SafeAreaView,\r\n  Platform,\r\n\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { getProperties } from \"../../modules/getProperties\";\r\nimport { getSearchProperties } from \"../../modules/getSearchProperties\";\r\nimport { getSearchhistory } from \"../../modules/getSearchHistory\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Activity from \"../../components/Activity\";\r\n\r\nconst Properties = () => {\r\n  const navigation = useNavigation();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [historyData, setHistoryData] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const [activity, setActivity] = useState(false);\r\n  const [searchView, setSearchView] = useState(true);\r\n\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filteredData, setFilteredData] = useState();\r\n\r\n  const searchFilter = (text) => {\r\n    setSearchText(text);\r\n    const filteredItems = data.filter((item) =>\r\n      item.title.toLowerCase().includes(text.toLowerCase())\r\n    );\r\n    setFilteredData(filteredItems);\r\n    setIsSearching(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllProperties();\r\n    // getAllHistory();\r\n  }, []);\r\n  const getAllProperties = () => {\r\n    dispatch(getProperties()).then((response) => {\r\n      setActivity(true);\r\n      setLoading(false);\r\n      const newData = [...data, ...response.payload];\r\n      setData(response.payload);\r\n      setActivity(true);\r\n      setLoading(false);\r\n      setIsRefreshing(false);\r\n      setSearchView(true);\r\n    });\r\n  };\r\n\r\n  const getAllHistory = () => {\r\n    dispatch(getSearchhistory()).then((response) => {\r\n      setHistoryData(response.payload);\r\n      lo;\r\n    });\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    if (!loading) {\r\n      setLoading(true);\r\n      getAllHistory();\r\n      getSearchPropertiesApiCall();\r\n    }\r\n  };\r\n  const getSearchPropertiesApiCall = () => {\r\n    if (search != \"\") {\r\n      dispatch(getSearchProperties(search)).then((response) => {\r\n        setData(response.payload);\r\n        setActivity(true);\r\n      });\r\n    } else {\r\n      getAllProperties();\r\n    }\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      {activity ? (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: Colors.white,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              height: 40,\r\n              width: \"100%\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              backgroundColor: Colors.PrimaryColor,\r\n            }}\r\n          >\r\n            <TouchableOpacity\r\n              onPress={() => (\r\n                navigation.goBack(), setSearchView(true), setSearch(\"\")\r\n              )}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginLeft: 10,\r\n              }}\r\n            >\r\n              <Image\r\n                style={{\r\n                  height: 15,\r\n                  width: 15,\r\n                  resizeMode: \"contain\",\r\n                  tintColor: Colors.white,\r\n                }}\r\n                source={require(\"../../../assets/back.png\")}\r\n              ></Image>\r\n              {/* <Text style={{ fontSize: 15, color: Colors.white }}>Back</Text> */}\r\n            </TouchableOpacity>\r\n            <Text\r\n              style={{ fontSize: 19, fontWeight: \"bold\", color: Colors.white }}\r\n            >\r\n              Properties\r\n            </Text>\r\n            <TouchableOpacity\r\n            // onPress={() => navigation.navigate(\"AddProperties\")}\r\n            // style={{\r\n            //   flexDirection: \"row\",\r\n            //   justifyContent: \"center\",\r\n            //   alignItems: \"center\",\r\n            //   marginRight: 10,\r\n            // }}\r\n            >\r\n              {/* <Image\r\n                style={{\r\n                  height: 15,\r\n                  width: 15,\r\n                  resizeMode: \"contain\",\r\n                  tintColor: Colors.white,\r\n                }}\r\n                source={require(\"../../../assets/plus.png\")}\r\n              ></Image> */}\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View\r\n            style={{\r\n              height: 80,\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: Colors.PrimaryColor,\r\n              position: \"relative\",\r\n              zIndex: 9,\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                backgroundColor: Colors.buttonColor,\r\n                borderRadius: 5,\r\n                width: \"92%\",\r\n                height: 50,\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <TouchableOpacity onPress={() => getSearchPropertiesApiCall()}>\r\n                <Image\r\n                  source={require(\"../../../assets/search.png\")}\r\n                  style={{\r\n                    height: 20,\r\n                    width: 20,\r\n                    marginLeft: 10,\r\n                    tintColor: Colors.white,\r\n                  }}\r\n                ></Image>\r\n              </TouchableOpacity>\r\n\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                placeholder=\"Search\"\r\n                placeholderTextColor={Colors.white}\r\n                onChangeText={searchFilter}\r\n                style={{\r\n                  color: Colors.white,\r\n                  fontSize: 15,\r\n                  marginLeft: 10,\r\n                }}\r\n              ></TextInput>\r\n            </View>\r\n            {!searchView ? (\r\n              <View\r\n                style={{\r\n                  height: 160,\r\n                  width: \"92%\",\r\n                  backgroundColor: Colors.white,\r\n                  position: \"absolute\",\r\n                  top: 160 / 2 - 15,\r\n                  zIndex: 99,\r\n                }}\r\n              >\r\n                <FlatList\r\n                  data={[]}\r\n                  renderItem={({ item }) => (\r\n                    <TouchableOpacity\r\n                      onPress={() => (\r\n                        setSearch(item.post_title),\r\n                        setSearchView(true),\r\n                        getSearchPropertiesApiCall()\r\n                      )}\r\n                      style={{\r\n                        height: 30,\r\n                        width: \"96%\",\r\n                        alignSelf: \"center\",\r\n                        alignItems: \"center\",\r\n                        alignContent: \"center\",\r\n                        flexDirection: \"row\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.black,\r\n                          fontSize: 14,\r\n                        }}\r\n                      >\r\n                        {item.post_title}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  keyExtractor={(item) => item.id}\r\n                  key={(item) => item.id}\r\n                />\r\n              </View>\r\n            ) : null}\r\n          </View>\r\n\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"space-between\",\r\n              position: \"relative\",\r\n              zIndex: 1,\r\n            }}\r\n          >\r\n            <FlatList\r\n              data={isSearching ? filteredData : data}\r\n              extraData={data}\r\n              numColumns={2}\r\n              ListFooterComponent={() => <View style={{ height: 200 }}></View>}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  activeOpacity={1}\r\n                  onPress={() =>\r\n                    navigation.navigate(\"PropertiesDetails\", { id: item.id })\r\n                  }\r\n                  style={{\r\n                    height: 300,\r\n                    margin: \"2.5%\",\r\n                    width: \"45%\",\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      height: \"70%\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={\r\n                        item.images.large == undefined ||\r\n                        item.images.large == \"\"\r\n                          ? require(\"./../../assets/images/1.png\")\r\n                          : { uri: item.images.large }\r\n                      }\r\n                      style={{\r\n                        height: \"100%\",\r\n                        width: \"100%\",\r\n                        borderRadius: 20,\r\n                        backgroundColor: Colors.gray,\r\n                      }}\r\n                    ></Image>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.black,\r\n                        fontSize: 16,\r\n                        marginTop: 10,\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      {item.title}\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.black,\r\n                        fontSize: 12,\r\n                      }}\r\n                    >\r\n                      $ {item.originallistprice}\r\n                    </Text>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              )}\r\n              ListEmptyComponent={\r\n                <View style={{ alignItems: \"center\", marginTop: 20 }}>\r\n                  <Text>No data found</Text>\r\n                </View>\r\n              }\r\n              keyExtractor={(item) => item.id}\r\n              // onTouchStart={handleLoad}\r\n              onRefresh={handleRefresh}\r\n              refreshing={loading}\r\n              // onEndReached={handleLoadMore}\r\n              onEndReachedThreshold={0.1}\r\n            />\r\n          </View>\r\n        </View>\r\n      ) : (\r\n        <Activity />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default Properties;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n// import ImagePicker from \"react-native-image-crop-picker\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst Contacts = () => {\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [uriResponse, seturiResponse] = useState(\"\");\r\n  const [avatarSource, setAvatarSource] = useState(\"\");\r\n  const [userData, setUserDetails] = useState(\"\");\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  const getData = async () => {\r\n    const userDetails = await AsyncStorage.getItem(\"userDetails\");\r\n    // const userImage = await AsyncStorage.getItem('imageUri');\r\n    setUserDetails(JSON.parse(userDetails));\r\n  };\r\n\r\n  const _pickImage = () => {\r\n    ImagePicker.openPicker({\r\n      width: 300,\r\n      height: 400,\r\n      cropping: true,\r\n      includeBase64: true,\r\n      freeStyleCropEnabled: true,\r\n    }).then((response) => {\r\n      let source = { uri: response.path };\r\n      setAvatarSource(source);\r\n      seturiResponse(response.path);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: Colors.white,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 60,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Close</Text>\r\n          </TouchableOpacity>\r\n          <Text style={{ fontSize: 19, fontWeight: \"bold\", color: Colors.white }}>Profile</Text>\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(\"EditProfile\")}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                tintColor: Colors.white,\r\n              }}\r\n              source={require(\"../../../assets/edit.png\")}\r\n            ></Image>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView>\r\n          <View\r\n            style={{\r\n              height: 250,\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <TouchableOpacity\r\n            //onPress={() => _pickImage()}\r\n            >\r\n              <Image\r\n                source={require(\"../../../assets/profileCam.png\")}\r\n                style={{ height: 100, width: 100 }}\r\n              ></Image>\r\n            </TouchableOpacity>\r\n            <View\r\n              style={{\r\n                marginTop: 20,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  color: Colors.black,\r\n                  fontSize: 20,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {userData.display_name}\r\n              </Text>\r\n              <Text\r\n                style={{\r\n                  color: Colors.black,\r\n                  fontSize: 16,\r\n                }}\r\n              >\r\n                {userData.user_email}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getAPI } from \"../config/apiMethod\";\r\nimport { url } from \"../config/url\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nexport const getFavoriteProperties = createAsyncThunk(\r\n  \"getFavoriteProperties\",\r\n  async () => {\r\n    const id = await AsyncStorage.getItem(\"userId\");\r\n    const urlDynamic =\r\n      \"https://surf.topsearchrealty.com/wp-json/property/favorite?userid=\" + id;\r\n    return await getAPI(urlDynamic)\r\n      .then(async (response) => {\r\n        const { data } = response;\r\n        return data;\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        if (e.response) {\r\n          console.log(\"api issue\", e.response);\r\n        } else if (e.request) {\r\n          console.log(\"api issue\", e.response);\r\n        } else {\r\n          console.log(\"api issue\", e.response);\r\n        }\r\n      });\r\n  }\r\n);\r\n\r\nconst getFavoritePropertiesSlice = createSlice({\r\n  name: \"getFavoriteProperties\",\r\n  initialState: {\r\n    getFavoritePropertiesData: [],\r\n    status: null,\r\n  },\r\n  extraReducers: {\r\n    [getFavoriteProperties.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getFavoriteProperties.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.getFavoritePropertiesData = action.payload;\r\n    },\r\n    [getFavoriteProperties.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default getFavoritePropertiesSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n  DrawerItemList,\r\n  DrawerItem,\r\n} from \"@react-navigation/drawer\";\r\n\r\nimport TabNavigator from \"./TabNavigator\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  View,\r\n  Image,\r\n  Text,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport Images from \"../utils/Images\";\r\nimport Fonts from \"../utils/Fonts\";\r\nimport Colors from \"../utils/Colors\";\r\nimport Contacts from \"../container/Contacts/Contacts\";\r\nimport Properties from \"../container/Properties/Properties\";\r\nimport Profile from \"../container/Profile/Profile\";\r\nimport PropertiesFavorites from \"../container/PropertiesFavorites/PropertiesFavorites\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Contacts\",\r\n    index: 0,\r\n    img: require(\"../../assets/people.png\"),\r\n  },\r\n  {\r\n    name: \"Properties\",\r\n    index: 1,\r\n    img: require(\"../../assets/home.png\"),\r\n  },\r\n  {\r\n    name: \"SignOut\",\r\n    index: 2,\r\n    img: require(\"../../assets/signOut.png\"),\r\n  },\r\n];\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst DrawerNavigator = () => {\r\n  return (\r\n    <Drawer.Navigator\r\n      screenOptions={{\r\n        headerShown: true,\r\n        headerStyle: { backgroundColor: Colors.PrimaryColor },\r\n      }}\r\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\r\n    >\r\n      <Drawer.Screen\r\n        name=\"Dashboard\"\r\n        options={{\r\n          title: null,\r\n          headerShown: false,\r\n          headerTintColor: Colors.white,\r\n          drawerIcon: require(\"../../assets/menu.png\"),\r\n          headerBackgroundContainerStyle: {\r\n            backgroundColor: Colors.PrimaryColor,\r\n          },\r\n        }}\r\n        component={TabNavigator}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Contacts\"\r\n        options={{\r\n          title: null,\r\n          headerShown: false,\r\n          headerTintColor: Colors.white,\r\n          drawerIcon: require(\"../../assets/dashboard.png\"),\r\n          headerBackgroundContainerStyle: {\r\n            backgroundColor: Colors.PrimaryColor,\r\n          },\r\n        }}\r\n        component={Contacts}\r\n      />\r\n\r\n      <Drawer.Screen\r\n        name=\"Properties\"\r\n        options={{\r\n          title: null,\r\n          headerShown: false,\r\n          headerTintColor: Colors.white,\r\n          drawerIcon: Images.myClients,\r\n          headerBackgroundContainerStyle: {\r\n            backgroundColor: Colors.PrimaryColor,\r\n          },\r\n        }}\r\n        component={Properties}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Profile\"\r\n        options={{\r\n          title: null,\r\n          headerShown: false,\r\n          headerTintColor: Colors.white,\r\n          drawerIcon: Images.dashboard,\r\n          headerBackgroundContainerStyle: {\r\n            backgroundColor: Colors.PrimaryColor,\r\n          },\r\n        }}\r\n        component={Profile}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n};\r\n\r\nconst CustomDrawerContent = () => {\r\n  const [userData, setUserDetails] = useState([]);\r\n  const [userImage, setUserImage] = useState([]);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  const getData = async () => {\r\n    const userDetails = await AsyncStorage.getItem(\"userDetails\");\r\n    // const userImage = await AsyncStorage.getItem('imageUri');\r\n    setUserDetails(JSON.parse(userDetails));\r\n    // setUserImage(JSON.parse(userImage));\r\n  };\r\n  const navigation = useNavigation();\r\n  const signOut = (index) => {\r\n    if (index == 0) {\r\n      return navigation.navigate(\"Contacts\");\r\n    } else if (index == 1) {\r\n      return navigation.navigate(\"Properties\");\r\n    } else index == 2;\r\n    {\r\n      return navigation.navigate(\"Login\");\r\n    }\r\n  };\r\n  return (\r\n    <SafeAreaView\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        backgroundColor: Colors.PrimaryColor,\r\n      }}\r\n    >\r\n      <View style={{ flex: 1, backgroundColor: Colors.white }}>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate(\"Profile\")}\r\n          activeOpacity={1}\r\n          style={{\r\n            height: 180,\r\n            width: \"100%\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              height: 60,\r\n              width: 60,\r\n              borderRadius: 30,\r\n              marginTop: 30,\r\n              marginLeft: 20,\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../../assets/user.png\")}\r\n              style={{\r\n                height: 50,\r\n                width: 50,\r\n                resizeMode: \"contain\",\r\n              }}\r\n            ></Image>\r\n          </View>\r\n          <Text\r\n            allowFontScaling={false}\r\n            style={{\r\n              color: Colors.white,\r\n              fontSize: 20,\r\n              marginLeft: 25,\r\n              marginTop: 10,\r\n              fontWeight: \"700\",\r\n            }}\r\n          >\r\n            {userData.display_name}\r\n          </Text>\r\n          <Text\r\n            allowFontScaling={false}\r\n            style={{\r\n              color: Colors.gray,\r\n              fontSize: 14,\r\n              marginLeft: 25,\r\n              marginTop: 5,\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            {userData.user_email}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <View style={{ justifyContent: \"center\" }}>\r\n          <FlatList\r\n            data={data}\r\n            renderItem={({ item }) => (\r\n              <TouchableOpacity\r\n                onPress={() => signOut(item.index)}\r\n                style={{\r\n                  height: 60,\r\n                  alignItems: \"center\",\r\n                  alignContent: \"center\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    height: 50,\r\n                    width: 70,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Image\r\n                    source={item.img}\r\n                    resizeMode=\"contain\"\r\n                    style={{\r\n                      height: \"50%\",\r\n                      width: \"50%\",\r\n                    }}\r\n                  ></Image>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    height: 70,\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.black,\r\n                      fontSize: 16,\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    {item.name}\r\n                  </Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            )}\r\n            //   keyExtractor={(item) => item.id}\r\n            //  ItemSeparatorComponent={this.renderSeparator}\r\n            //   key={(item) => item.id}\r\n          />\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default DrawerNavigator;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from \"react-native\";\r\n\r\nimport Images from \"../../utils/Images\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport AppButton from \"../../components/AppButton\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport default function AccessRequestSent(props) {\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const backAction = () => {\r\n    navigation.navigate(\"Login\");\r\n  };\r\n  const emailAddress = props.route.params.email;\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <ScrollView\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          backgroundColor: Colors.PrimaryColor,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 100,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{ fontSize: 20, color: Colors.white, fontWeight: \"bold\" }}\r\n          >\r\n            Lokul CRM WIP\r\n          </Text>\r\n        </View>\r\n        <View\r\n          style={{\r\n            height: 300,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{ fontSize: 40, color: Colors.white, fontWeight: \"bold\" }}\r\n          >\r\n            Request sent\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              fontSize: 20,\r\n              color: Colors.white,\r\n              fontWeight: \"500\",\r\n              marginTop: 10,\r\n              width: \"90%\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            You will get an email letting you know if your request was approved.\r\n          </Text>\r\n          <View style={styles.inputView}>\r\n            <Text\r\n              style={{\r\n                fontSize: 20,\r\n                color: Colors.white,\r\n                fontWeight: \"bold\",\r\n                marginTop: 10,\r\n                width: \"90%\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              {emailAddress}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View style={{ height: 400, width: \"100%\" }}>\r\n          <AppButton\r\n            onPress={() => backAction()}\r\n            btnText={\"Back to sign in\"}\r\n            textStyle={{ fontSize: 20, fontWeight: \"500\", color: Colors.white }}\r\n            btnStyle={{\r\n              marginTop: \"13%\",\r\n              borderRadius: 6,\r\n              backgroundColor: Colors.buttonColor,\r\n            }}\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.PrimaryColor,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  image: {\r\n    marginBottom: 40,\r\n    height: 200,\r\n    width: 200,\r\n  },\r\n  inputView: {\r\n    width: \"90%\",\r\n    marginTop: 30,\r\n    alignItems: \"center\",\r\n    borderColor: Colors.white,\r\n    justifyContent: \"center\",\r\n  },\r\n  TextInput: {\r\n    width: \"90%\",\r\n    color: Colors.white,\r\n    fontSize: 20,\r\n  },\r\n  forgot_button: {\r\n    height: 30,\r\n    marginBottom: 30,\r\n  },\r\n  loginBtn: {\r\n    width: \"80%\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    backgroundColor: \"#FF1493\",\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Alert,\r\n} from \"react-native\";\r\n\r\nimport Images from \"../../utils/Images\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport AppButton from \"../../components/AppButton\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nexport default function EnterPin(props) {\r\n  const navigation = useNavigation();\r\n  const emailAddress = props.route.params.email;\r\n  const [pin, setPin] = useState(\"123456\");\r\n  const [oldPin, setOldPin] = useState(\"123456\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const fogotPassword = () => {\r\n    navigation.navigate(\"ForgotPassword\");\r\n  };\r\n  const accessRequestAction = () => {\r\n    if (pin == oldPin) {\r\n      navigation.navigate(\"Dashboard\");\r\n    } else {\r\n      Alert.alert(\"Please enter valid pin\");\r\n    }\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <ScrollView\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          backgroundColor: Colors.PrimaryColor,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 100,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{ fontSize: 20, color: Colors.white, fontWeight: \"bold\" }}\r\n          >\r\n            Lokul CRM WIP\r\n          </Text>\r\n        </View>\r\n        <View\r\n          style={{\r\n            height: 350,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: 20,\r\n              color: Colors.white,\r\n              fontWeight: \"500\",\r\n              marginTop: 10,\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            We've sent a pin to {emailAddress}\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              fontSize: 20,\r\n              color: Colors.white,\r\n              fontWeight: \"500\",\r\n              marginTop: 10,\r\n              textAlign: \"center\",\r\n              width: \"80%\",\r\n            }}\r\n          >\r\n            Check your spam folder if you don't receive it.\r\n          </Text>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.TextInput}\r\n              placeholder=\"Enter pin\"\r\n              placeholderTextColor={Colors.white}\r\n              inputMode=\"numeric\"\r\n              maxLength={8}\r\n              value={pin}\r\n              secureTextEntry\r\n              onChangeText={(pin) => setPin(pin)}\r\n            />\r\n          </View>\r\n        </View>\r\n        <View style={{ height: 200, width: \"100%\" }}>\r\n          <AppButton\r\n            onPress={() => accessRequestAction()}\r\n            btnText={\"Sign In\"}\r\n            textStyle={{ fontSize: 20, fontWeight: \"500\", color: Colors.white }}\r\n            btnStyle={{ marginTop: \"13%\", borderRadius: 6 }}\r\n          />\r\n          <AppButton\r\n            onPress={() => navigation.goBack()}\r\n            btnText={\"I need another pin\"}\r\n            textStyle={{ fontSize: 20, fontWeight: \"500\", color: Colors.white }}\r\n            btnStyle={{ backgroundColor: \"transparent\" }}\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.PrimaryColor,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  image: {\r\n    marginBottom: 40,\r\n    height: 200,\r\n    width: 200,\r\n  },\r\n  inputView: {\r\n    backgroundColor: Colors.buttonColor,\r\n    borderRadius: 5,\r\n    width: \"90%\",\r\n    height: 50,\r\n    marginTop: 30,\r\n    alignItems: \"center\",\r\n    borderWidth: 2,\r\n    borderColor: Colors.white,\r\n    justifyContent: \"center\",\r\n  },\r\n  TextInput: {\r\n    width: \"90%\",\r\n    color: Colors.white,\r\n    fontSize: 20,\r\n  },\r\n  forgot_button: {\r\n    height: 30,\r\n    marginBottom: 30,\r\n  },\r\n  loginBtn: {\r\n    width: \"80%\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    backgroundColor: \"#FF1493\",\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  ScrollView,\r\n  Linking,\r\n  SafeAreaView,\r\n\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n// import ImagePicker from \"react-native-image-crop-picker\";\r\n\r\nconst ContactsDetails = (props) => {\r\n  const navigation = useNavigation();\r\n  const [value, setValue] = useState([]);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [leadType, setLeadType] = useState(\"\");\r\n  const items = props.route.params.item;\r\n  useEffect(() => {\r\n    leadData();\r\n  }, []);\r\n  const leadData = () => {\r\n    const url = items.linked_lead;\r\n\r\n    try {\r\n      const regex = /(\\w+)=\\d+/;\r\n      const matches = url.match(regex);\r\n\r\n      if (matches && matches.length >= 2) {\r\n        const paramName = \"Lead\";\r\n        setLeadType(paramName);\r\n      } else {\r\n        console.log(\"Parameter not found in the URL\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error parsing URL:\", error);\r\n    }\r\n  };\r\n\r\n  //setValue(items);\r\n  const fogotPassword = () => {\r\n    navigation.navigate(\"ForgotPassword\");\r\n  };\r\n  const makePhoneCall = () => {\r\n    let phoneNumber = items.contact_number;\r\n    Linking.openURL(`tel:${phoneNumber}`);\r\n  };\r\n  const sendEmail = () => {\r\n    let recipient = items.contact_email;\r\n    let subject = \"Subject of email\";\r\n    let body = \"Body of email\";\r\n    Linking.openURL(`mailto:${recipient}?subject=${subject}&body=${body}`);\r\n  };\r\n\r\n  const sendSMS = () => {\r\n    let phoneNumber = items.phoneNumber;\r\n    let message = \"Hello from my app!\";\r\n    Linking.openURL(`sms:${phoneNumber}`);\r\n  };\r\n  const _pickImage = () => {\r\n    ImagePicker.openPicker({\r\n      width: 300,\r\n      height: 400,\r\n      cropping: true,\r\n      includeBase64: true,\r\n      freeStyleCropEnabled: true,\r\n    }).then((response) => {\r\n      let source = { uri: response.path };\r\n      setAvatarSource(source);\r\n      seturiResponse(response.path);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n       {/* <StatusBar /> */}\r\n       <View style={{ flex: 1, backgroundColor: Colors.white }}>\r\n       {/* <View style={{ }}>\r\n        <View\r\n          style={{\r\n            height: 60,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                tintColor: Colors.white,\r\n              }}\r\n              source={require(\"../../../assets/back.png\")}\r\n            ></Image>\r\n           \r\n          </TouchableOpacity>\r\n          <Text\r\n            style={{ fontSize: 19, fontWeight: \"bold\", color: Colors.white }}\r\n          >\r\n            Contacts Details \r\n          </Text>\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              navigation.navigate(\"EditContactsDetails\", { item: items })\r\n            }\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                tintColor: Colors.white,\r\n              }}\r\n              source={require(\"../../../assets/edit.png\")}\r\n            ></Image>\r\n          </TouchableOpacity>\r\n        </View>\r\n        </View> */}\r\n       <View\r\n            style={{\r\n             paddingVertical:22,\r\n              width: \"100%\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              backgroundColor: Colors.PrimaryColor,\r\n            }}\r\n          >\r\n            <TouchableOpacity onPress={() => (\r\n                navigation.goBack()\r\n              )}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginLeft: 10,\r\n              }}\r\n            >\r\n              <Image\r\n                style={{\r\n                  height: 15,\r\n                  width: 15,\r\n                  resizeMode: \"contain\",\r\n                  tintColor: Colors.white,\r\n                }}\r\n                source={require(\"../../../assets/back.png\")}\r\n              ></Image>\r\n              {/* <Text style={{ fontSize: 15, color: Colors.white }}>Back</Text> */}\r\n            </TouchableOpacity>\r\n            <Text\r\n              style={{ fontSize: 19, fontWeight: \"bold\", color: Colors.white }}\r\n              >\r\n                Contacts Details \r\n            </Text>\r\n            <TouchableOpacity\r\n            // onPress={() => navigation.navigate(\"AddProperties\")}\r\n            // style={{\r\n            //   flexDirection: \"row\",\r\n            //   justifyContent: \"center\",\r\n            //   alignItems: \"center\",\r\n            //   marginRight: 10,\r\n            // }}\r\n            >\r\n              {/* <Image\r\n                style={{\r\n                  height: 15,\r\n                  width: 15,\r\n                  resizeMode: \"contain\",\r\n                  tintColor: Colors.white,\r\n                }}\r\n                source={require(\"../../../assets/plus.png\")}\r\n              ></Image> */}\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          {/* <View\r\n            style={{\r\n              height: 80,\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: Colors.PrimaryColor,\r\n              position: \"relative\",\r\n              zIndex: 9,\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                backgroundColor: Colors.buttonColor,\r\n                borderRadius: 5,\r\n                width: \"92%\",\r\n                height: 50,\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <TouchableOpacity onPress={() => getSearchPropertiesApiCall()}>\r\n                <Image\r\n                  source={require(\"../../../assets/search.png\")}\r\n                  style={{\r\n                    height: 20,\r\n                    width: 20,\r\n                    marginLeft: 10,\r\n                    tintColor: Colors.white,\r\n                  }}\r\n                ></Image>\r\n              </TouchableOpacity>\r\n\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                placeholder=\"Search\"\r\n                placeholderTextColor={Colors.white}\r\n             \r\n                style={{\r\n                  color: Colors.white,\r\n                  fontSize: 15,\r\n                  marginLeft: 10,\r\n                }}\r\n              ></TextInput>\r\n            </View>\r\n         \r\n              <View\r\n                style={{\r\n                 \r\n                  width: \"92%\",\r\n                  backgroundColor: Colors.white,\r\n                  position: \"absolute\",\r\n                  top: 160 / 2 - 15,\r\n                  zIndex: 99,\r\n                }}\r\n              >\r\n            \r\n              </View>\r\n           \r\n          </View> */}\r\n        <ScrollView>\r\n          <View\r\n            style={{\r\n              height: 200,\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <View>\r\n              <Image\r\n                source={{ uri: items.contact_image }}\r\n                style={{\r\n                  height: 120,\r\n                  width: 120,\r\n                  borderRadius: 60,\r\n                  borderWidth:1,\r\n                  borderColor:Colors.gray\r\n                }}\r\n              ></Image>\r\n            </View>\r\n            <View\r\n              style={{\r\n                marginTop: 20,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  color: Colors.black,\r\n                  fontSize: 22,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {items.contact_name}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={{\r\n              height: 80,\r\n              width: \"96%\",\r\n              alignSelf: \"flex-end\",\r\n              alignItems: \"center\",\r\n              alignContent: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"80%\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  height: 80,\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.black,\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: 2,\r\n                  }}\r\n                >\r\n                  Email\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    color: Colors.black,\r\n                    fontSize: 15,\r\n                  }}\r\n                >\r\n                  {items.contact_email}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n            <TouchableOpacity\r\n              onPress={() => sendEmail()}\r\n              style={{\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Image\r\n                source={require(\"../../../assets/mail.png\")}\r\n                style={{\r\n                  height: 40,\r\n                  width: 40,\r\n                  resizeMode: \"contain\",\r\n                }}\r\n              ></Image>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View\r\n            style={{\r\n              height: 80,\r\n              width: \"96%\",\r\n              alignSelf: \"flex-end\",\r\n\r\n              alignItems: \"center\",\r\n              alignContent: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                width: \"70%\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  height: 80,\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.black,\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: 2,\r\n                  }}\r\n                >\r\n                  Phone\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    color: Colors.black,\r\n                    fontSize: 15,\r\n                  }}\r\n                >\r\n                  {items.contact_number}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n            <TouchableOpacity\r\n              onPress={() => sendSMS()}\r\n              style={{\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Image\r\n                source={require(\"../../../assets/chat.png\")}\r\n                style={{\r\n                  height: 40,\r\n                  width: 40,\r\n                  resizeMode: \"contain\",\r\n                }}\r\n              ></Image>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => makePhoneCall()}\r\n              style={{\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Image\r\n                source={require(\"../../../assets/phone.png\")}\r\n                style={{\r\n                  height: 40,\r\n                  width: 40,\r\n                  marginLeft: \"5%\",\r\n                  resizeMode: \"contain\",\r\n                }}\r\n              ></Image>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ width: \"96%\", alignSelf: \"center\" , paddingLeft:8}}>\r\n            <Text style={{ color: Colors.black, marginTop: 15,color: Colors.black,\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                     }}>\r\n              Client Type{\" \"}\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n           \r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  color: Colors.black, marginTop: 15,color: Colors.black,\r\n                    fontSize: 16,\r\n                    fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {leadType}\r\n              </Text>\r\n            </View>\r\n           \r\n          </View>\r\n\r\n          <View style={{ height: 50 }}></View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default ContactsDetails;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { url } from \"../config/url\";\nimport { postAPI } from \"../config/apiMethod\";\n\nexport const addContact = createAsyncThunk(\"addContact\", async (payload) => {\n  const urlDynamic =\n    \"https://surf.topsearchrealty.com/wp-json/contact/createcontact\";\n  try {\n    const response = await postAPI(urlDynamic, payload);\n    console.log(response, \"res\");\n    const { data } = response;\n    return data;\n  } catch (error) {\n    console.log(error);\n    if (error.response) {\n      console.log(\"API issue\", error.response);\n    } else if (error.request) {\n      console.log(\"API issue\", error.request);\n    } else {\n      console.log(\"API issue\", error.message);\n    }\n    throw error;\n  }\n});\n\nconst addContactSlice = createSlice({\n  name: \"addContact\",\n  initialState: {\n    contactData: [],\n    status: null,\n  },\n  extraReducers: {\n    [addContact.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [addContact.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.contactData = action.payload;\n    },\n    [addContact.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default addContactSlice.reducer;\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  Switch,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n// import ImagePicker from \"react-native-image-crop-picker\";\r\nimport { getProperties } from \"../../modules/getProperties\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { addContact } from \"../../modules/addContact\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport { getContacts } from \"../../modules/getContacts\";\r\nconst AddContacts = () => {\r\n  const navigation = useNavigation();\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [password, setPassword] = useState(\"\");\r\n  const fogotPassword = () => {\r\n    navigation.navigate(\"ForgotPassword\");\r\n  };\r\n  const [meetingType, setMeetingType] = useState(\"\");\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n  const [dropdownData, setDropdownData] = useState([]);\r\n  const [avatarSource, setAvatarSource] = useState(null);\r\n  const [uriResponse, setUriResponse] = useState(null);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [agentId, setAgentId] = useState(\"\");\r\n  const showDatePicker = () => {\r\n    setDatePickerVisibility(true);\r\n  };\r\n\r\n  const hideDatePicker = () => {\r\n    setDatePickerVisibility(false);\r\n  };\r\n  const contactTypes = [\r\n    \"contributor\",\r\n    \"lander\",\r\n    \"buyer\",\r\n    \"seller\",\r\n    \"associated\",\r\n    \"insurance\",\r\n    \"inspector\",\r\n    \"real-estate-agent\",\r\n    \"title-co\",\r\n    \"attorney\",\r\n    \"escrow-agent\",\r\n    \"appraiser\",\r\n    \"contractor\",\r\n  ];\r\n  const [selectedContactType, setSelectedContactType] = useState(\"\");\r\n\r\n  const handleContactTypeChange = (itemValue) => {\r\n    setSelectedContactType(itemValue);\r\n  };\r\n  const handleConfirm = (date) => {\r\n    const dateObj = new Date(date);\r\n    const formattedDate = dateObj.toLocaleString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n    });\r\n\r\n    setSelectedDate(formattedDate);\r\n    hideDatePicker();\r\n  };\r\n  useEffect(() => {\r\n    getAllProperties();\r\n    getData();\r\n  }, []);\r\n  const getAllProperties = () => {\r\n    dispatch(getProperties()).then((response) => {\r\n      setDropdownData(response.payload);\r\n    });\r\n  };\r\n\r\n  const _pickImage = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access the camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n      base64: true, // Request base64 encoding\r\n    });\r\n\r\n    if (!pickerResult.cancelled) {\r\n      let base64Image = `data:image/png;base64,${pickerResult.base64}`;\r\n      let filename = `lokal-with_board-(1).png`;\r\n      let tmpName = `/tmp/phpr2QrsB`;\r\n      let fileArray = [\r\n        {\r\n          name: filename,\r\n          tmp_name: tmpName,\r\n          // Adjust the type according to your requirements\r\n        },\r\n      ];\r\n      setUriResponse(base64Image);\r\n    }\r\n  };\r\n  const getData = async () => {\r\n    const userDetails = await AsyncStorage.getItem(\"userDetails\");\r\n    const parsedUserDetails = JSON.parse(userDetails);\r\n    const id = parsedUserDetails.ID;\r\n    setAgentId(id);\r\n  };\r\n  const formatDate = (date) => {\r\n    return date.toLocaleString(\"en-US\", {\r\n      timeZone: \"Asia/Kolkata\", // Set the desired timezone\r\n      hour12: true,\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    });\r\n  };\r\n\r\n  const handleAddContact = () => {\r\n    const payload = {\r\n      user_email: email,\r\n      user_first_name: name,\r\n      user_last_name: lastName,\r\n      user_mobile: phone,\r\n      agentid: agentId,\r\n      schedule_mode: meetingType,\r\n      comment: comment,\r\n      propid: selectedValue,\r\n      contactimg: uriResponse,\r\n      userrole: selectedContactType,\r\n    };\r\n    dispatch(addContact(payload)).then((response) => {\r\n      getContacts();\r\n      navigation.goBack();\r\n    });\r\n  };\r\n\r\n  const onHandleClick = () => {\r\n    handleAddContact();\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: Colors.white,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 60,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Cancel </Text>\r\n          </TouchableOpacity>\r\n          {/* <Text style={{ fontSize: 15, color: Colors.white }}></Text> */}\r\n          <TouchableOpacity\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n            onPress={handleAddContact}\r\n          >\r\n            <Text\r\n              style={{ fontSize: 15, fontWeight: \"bold\", color: Colors.white }}\r\n            >\r\n              Add\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView style={{flex: \"1 1 0\"}}>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              First Name\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  //backgroundColor: Colors.gray,\r\n                  borderColor:Colors.cream,\r\n                  borderWidth:1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setName(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Last Name\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor:Colors.cream,\r\n                  borderWidth:1,\r\n                  //backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setLastName(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Phone\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  //backgroundColor: Colors.gray,\r\n                  borderColor:Colors.cream,\r\n                  borderWidth:1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                keyboardType=\"number-pad\"\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setPhone(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Email\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                 // backgroundColor: Colors.gray,\r\n                 borderColor:Colors.cream,\r\n                 borderWidth:1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                keyboardType=\"email-address\"\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setEmail(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n\r\n          <View style={{ width: \"95%\", alignSelf: \"center\", borderRadius: 8,}}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Properties\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\", borderRadius: 8,\r\n              }}\r\n            >\r\n              <Picker\r\n                selectedValue={selectedValue}\r\n                onValueChange={(itemValue) => setSelectedValue(itemValue)}\r\n                style={{\r\n                  borderRadius: 8,\r\n                  backgroundColor: Colors.gray,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  //backgroundColor: Colors.gray,\r\n                  borderColor:Colors.cream,\r\n                  borderWidth:1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n               \r\n                \r\n                }}\r\n              >\r\n                <Picker.Item label=\"Select an option\" value=\"\" />\r\n                {dropdownData.map((item) => (\r\n                  <Picker.Item\r\n                    key={item.id}\r\n                    label={item.property_address}\r\n                    value={item.id}\r\n                  />\r\n                ))}\r\n              </Picker>\r\n            </View>\r\n          </View>\r\n\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Comments\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 100,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  //backgroundColor: Colors.gray,\r\n                  borderColor:Colors.cream,\r\n                  borderWidth:1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                  \r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setComment(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n          <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Date & Time\r\n            </Text>\r\n            <View\r\n              style={{\r\n                borderRadius: 8,\r\n               // backgroundColor: Colors.gray,\r\n                width: \"100%\",\r\n                height:55,\r\n                paddingHorizontal: 15,\r\n                color: Colors.black,\r\n                borderColor:Colors.cream,\r\n                  borderWidth:1,\r\n                fontSize: 14,\r\n                padding: 2,\r\n                borderColor: Colors.gray,\r\n                marginTop:10,\r\n                paddingTop:17\r\n              }}\r\n            >\r\n              <TouchableOpacity onPress={showDatePicker}>\r\n                <Text style={styles.datePickerText}>\r\n                  {selectedDate ? formatDate(selectedDate) : \"None\"}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              <DateTimePickerModal\r\n                isVisible={isDatePickerVisible}\r\n                mode=\"datetime\"\r\n                onConfirm={handleConfirm}\r\n                onCancel={hideDatePicker}\r\n                \r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Picker\r\n                selectedValue={selectedContactType}\r\n                onValueChange={handleContactTypeChange}\r\n                style={{\r\n                  borderRadius: 8,\r\n                  backgroundColor: Colors.gray,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  //backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  borderColor:Colors.cream,\r\n                  borderWidth:1,\r\n                  padding: 2,\r\n                  \r\n                  borderColor: Colors.gray,\r\n                }}\r\n              >\r\n                {contactTypes.map((contactType) => (\r\n                  <Picker.Item\r\n                    key={contactType}\r\n                    label={contactType}\r\n                    value={contactType}\r\n                  />\r\n                ))}\r\n              </Picker>\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Schedule Mode\r\n            </Text>\r\n            <TouchableOpacity\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 10,\r\n              }}\r\n              onPress={() => setMeetingType(\"in_person\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 20,\r\n                  height: 20,\r\n                  borderRadius: 10,\r\n                  borderWidth: 2,\r\n                  borderColor:\r\n                    meetingType === \"in_person\"\r\n                      ? Colors.PrimaryColor\r\n                      : Colors.gray,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginRight: 10,\r\n                }}\r\n              >\r\n                {meetingType === \"in_person\" && (\r\n                  <View\r\n                    style={{\r\n                      width: 12,\r\n                      height: 12,\r\n                      borderRadius: 6,\r\n                      backgroundColor: Colors.PrimaryColor,\r\n                    }}\r\n                  />\r\n                )}\r\n              </View>\r\n              <Text>In Person</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 10,\r\n              }}\r\n              onPress={() => setMeetingType(\"video_call\")}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 20,\r\n                  height: 20,\r\n                  borderRadius: 10,\r\n                  borderWidth: 2,\r\n                  borderColor:\r\n                    meetingType === \"video_call\"\r\n                      ? Colors.PrimaryColor\r\n                      : Colors.gray,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  marginRight: 10,\r\n                }}\r\n              >\r\n                {meetingType === \"video_call\" && (\r\n                  <View\r\n                    style={{\r\n                      width: 12,\r\n                      height: 12,\r\n                      borderRadius: 6,\r\n                      backgroundColor: Colors.PrimaryColor,\r\n                    }}\r\n                  />\r\n                )}\r\n              </View>\r\n              <Text>Video Call</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Picture\r\n            </Text>\r\n            <TouchableOpacity\r\n              onPress={() => _pickImage()}\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <View\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  //backgroundColor: Colors.gray,\r\n                  borderColor:Colors.cream,\r\n                  borderWidth:1,\r\n                  fontSize: 14,\r\n                  alignSelf: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <Image\r\n                  style={{\r\n                    height: 30,\r\n                    width: 30,\r\n                    resizeMode: \"contain\",\r\n                    marginLeft: 10,\r\n                  }}\r\n                  source={require(\"../../../assets/uploadImage.png\")}\r\n                ></Image>\r\n                <Text\r\n                  allowFontScaling={false}\r\n                  style={{\r\n                    color: Colors.black,\r\n                    fontSize: 14,\r\n                    marginLeft: 10,\r\n                    alignSelf: \"center\",\r\n                  }}\r\n                >\r\n                  Choose an image...\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ height: 50 }}></View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n  },\r\n  header: {\r\n    height: 60,\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: Colors.PrimaryColor,\r\n    paddingHorizontal: 10,\r\n  },\r\n  headerText: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  scrollViewContent: {\r\n    flexGrow: 1,\r\n    margin: 10,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  inputContainer: {\r\n    marginBottom: 10,\r\n  },\r\n  label: {\r\n    marginTop: 5,\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n  },\r\n  pickerContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 3,\r\n  },\r\n  picker: {\r\n    height: 40,\r\n  },\r\n  textInputContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 3,\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    paddingHorizontal: 10,\r\n  },\r\n  datePickerButton: {\r\n    paddingVertical: 10,\r\n  },\r\n  datePickerText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default AddContacts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  Button,\r\n  Alert,\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nconst AddProperties = () => {\r\n  const navigation = useNavigation();\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const fogotPassword = () => {\r\n    navigation.navigate(\"ForgotPassword\");\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: Colors.white,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 60,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Cancel</Text>\r\n          </TouchableOpacity>\r\n          <Text style={{ fontSize: 15, color: Colors.white }}></Text>\r\n          <TouchableOpacity\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Add</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              First Name\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setName(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Last Name\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setLastName(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Phone\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                keyboardType=\"number-pad\"\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setPhone(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Email\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                keyboardType=\"email-address\"\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setEmail(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Linked Lead\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setName(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Picture\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setName(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ height: 50 }}></View>\r\n          <View\r\n            style={{\r\n              marginTop: 10,\r\n              flexDirection: \"row\",\r\n              marginHorizontal: 10,\r\n              marginBottom: 20,\r\n            }}\r\n          >\r\n            <View\r\n              style={{ backgroundColor: Colors.PrimaryColor, borderRadius: 10 }}\r\n            >\r\n              <Button\r\n                title=\"Submit\"\r\n                onPress={() => {\r\n                  Alert.alert(\"hello\");\r\n                }}\r\n                color={\"white\"}\r\n              />\r\n            </View>\r\n            <View\r\n              style={{\r\n                backgroundColor: Colors.gray,\r\n                borderRadius: 10,\r\n                marginHorizontal: 20,\r\n              }}\r\n            >\r\n              <Button\r\n                title=\"Cancel\"\r\n                onPress={() => {\r\n                  navigation.goBack();\r\n                }}\r\n                color={Colors.PrimaryColor}\r\n              />\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default AddProperties;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { postAPI } from \"../config/apiMethod\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\n// Async thunk action creator for updating a contact\r\nexport const updateContact = createAsyncThunk(\r\n  \"contacts/updateContact\",\r\n  async (payload) => {\r\n    const url = \"https://surf.topsearchrealty.com/wp-json/leads/updatecontacts\";\r\n    try {\r\n      const response = await postAPI(url, payload); // Pass the payload to the postAPI function\r\n      const { data } = response;\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error.response) {\r\n        console.log(\"API issue\", error.response);\r\n      } else if (error.request) {\r\n        console.log(\"API issue\", error.request);\r\n      } else {\r\n        console.log(\"API issue\", error.message);\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n);\r\n\r\n// Redux slice for managing update contact state\r\nconst updateContactSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState: {\r\n    updateContactData: [],\r\n    status: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(updateContact.pending, (state, action) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(updateContact.fulfilled, (state, action) => {\r\n        state.status = \"success\";\r\n        state.updateContactData = action.payload;\r\n      })\r\n      .addCase(updateContact.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n      });\r\n  },\r\n});\r\n\r\nexport default updateContactSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateContact } from \"../../modules/deleteContact\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nconst EditContactsDetails = (props) => {\r\n  const navigation = useNavigation();\r\n  const dispatch = useDispatch();\r\n  const item = props.route.params.item;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [linkedId, setLinkedId] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [avatarSource, setAvatarSource] = useState(null);\r\n  const [uriResponse, setUriResponse] = useState(null);\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {\r\n    setName(item.contact_name);\r\n    setPhone(item.contact_number);\r\n    setEmail(item.contact_email);\r\n    setLinkedId(item.linked_lead);\r\n    setPassword(item.password);\r\n  }, [item]);\r\n  useEffect(() => {\r\n    if (isFocused) {  \r\n  \r\n    }\r\n  }, [isFocused]);\r\n  const handleDelete = () => {\r\n    const payload = {\r\n      contactid: item.id,\r\n      contact_name: name,\r\n      contact_number: phone,\r\n      contactimg: uriResponse,\r\n    };\r\n    dispatch(updateContact(payload))\r\n      .then((res) => {\r\n        (\"Contact update successfully\");\r\n\r\n        navigation.navigate(\"Contact\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error deleting contact:\", error);\r\n      });\r\n  };\r\n\r\n  const _pickImage = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access the camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n      base64: true, // Request base64 encoding\r\n    });\r\n\r\n    if (!pickerResult.cancelled) {\r\n      let base64Image = `data:image/png;base64,${pickerResult.base64}`;\r\n\r\n      setUriResponse(base64Image);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      <View style={{ flex: 1, backgroundColor: Colors.white }}>\r\n        {/* Header */}\r\n        <View\r\n          style={{\r\n            height: 60,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Cancel</Text>\r\n          </TouchableOpacity>\r\n          <Text style={{ fontSize: 15, color: Colors.white }}></Text>\r\n          <TouchableOpacity\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n            onPress={handleDelete}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Done</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* Scrollable content */}\r\n        <ScrollView>\r\n          {/* Phone */}\r\n\r\n          {/* First Name */}\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Name\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={name}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setName(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Phone\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={phone}\r\n                keyboardType=\"number-pad\"\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setPhone(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          {/* Last Name */}\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Email\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={email}\r\n                editable={false}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setEmail(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n\r\n          {/* Linked Lead */}\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Linked Lead\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={item.linked_lead}\r\n                autoCorrect={false}\r\n                editable={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setLinkedId(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Picture\r\n            </Text>\r\n            <TouchableOpacity\r\n              onPress={() => _pickImage()}\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <View\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  alignSelf: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <Image\r\n                  style={{\r\n                    height: 30,\r\n                    width: 30,\r\n                    resizeMode: \"contain\",\r\n                    marginLeft: 10,\r\n                  }}\r\n                  source={require(\"../../../assets/uploadImage.png\")}\r\n                ></Image>\r\n\r\n                <Text\r\n                  allowFontScaling={false}\r\n                  style={{\r\n                    color: Colors.black,\r\n                    fontSize: 14,\r\n                    marginLeft: 10,\r\n                    alignSelf: \"center\",\r\n                  }}\r\n                >\r\n                  Choose an image...\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <TouchableOpacity\r\n            style={{ alignSelf: \"center\", marginTop: 30 }}\r\n            onPress={handleDelete}\r\n          >\r\n            <Text style={{ fontSize: 20, fontWeight: \"bold\", color: \"red\" }}>\r\n              Update Contact\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <View style={{ height: 50 }}></View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default EditContactsDetails;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getAPI } from \"../config/apiMethod\";\r\nimport { url } from \"../config/url\";\r\n\r\nexport const getPropertiesDetails = createAsyncThunk(\r\n  \"getPropertiesDetails\",\r\n  async (id) => {\r\n    const urlDynamic =\r\n      \"https://surf.topsearchrealty.com/wp-json/wp/v2/estate_property/\" + id;\r\n    return await getAPI(urlDynamic)\r\n      .then(async (response) => {\r\n        const { data } = response;\r\n        return data;\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        if (e.response) {\r\n          console.log(\"api issue\", e.response);\r\n        } else if (e.request) {\r\n          console.log(\"api issue\", e.response);\r\n        } else {\r\n          console.log(\"api issue\", e.response);\r\n        }\r\n      });\r\n  }\r\n);\r\n\r\nconst getPropertiesDetailsSlice = createSlice({\r\n  name: \"getPropertiesDetails\",\r\n  initialState: {\r\n    getPropertiesDetailsData: [],\r\n    status: null,\r\n  },\r\n  extraReducers: {\r\n    [getPropertiesDetails.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getPropertiesDetails.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.getPropertiesDetailsData = action.payload;\r\n    },\r\n    [getPropertiesDetails.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default getPropertiesDetailsSlice.reducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  ScrollView,\r\n  Linking,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport \"react-native-gesture-handler\";\r\n// import MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { getPropertiesDetails } from \"../../modules/getPropertiesDetails\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Activity from \"../../components/Activity\";\r\nconst PropertiesDetails = (props) => {\r\n  const navigation = useNavigation();\r\n  const id = props.route.params.id;\r\n  const dispatch = useDispatch();\r\n  const [activity, setActivity] = useState(false);\r\n  useEffect(() => {\r\n    getPropertiesDetailsApiCall();\r\n  }, []);\r\n  const [data, setdata] = useState([]);\r\n  const getPropertiesDetailsApiCall = () => {\r\n    dispatch(getPropertiesDetails(id)).then((response) => {\r\n      setdata(response.payload);\r\n      console.log(response.payload);\r\n      setActivity(true);\r\n    });\r\n  };\r\n  const makePhoneCall = () => {\r\n    let phoneNumber = data.listagentpreferredphone;\r\n    Linking.openURL(`tel:${phoneNumber}`);\r\n  };\r\n  const sendEmail = () => {\r\n    let recipient = data.listagentemail;\r\n    let subject = \"Subject of email\";\r\n    let body = \"Body of email\";\r\n    Linking.openURL(`mailto:${recipient}?subject=${subject}&body=${body}`);\r\n  };\r\n\r\n  const sendSMS = () => {\r\n    let phoneNumber = data.listagentpreferredphone;\r\n    let message = \"Hello from my app!\";\r\n    Linking.openURL(`sms:${phoneNumber}`);\r\n  };\r\n  const goToMap = () => {\r\n    const latitude = data.property_latitude;\r\n    const longitude = data.property_longitude;\r\n\r\n    const mapUrl = `https://www.google.com/maps/search/?api=1&query=${latitude},${longitude}`;\r\n\r\n    Linking.canOpenURL(mapUrl)\r\n      .then((supported) => {\r\n        if (supported) {\r\n          Linking.openURL(mapUrl);\r\n        } else {\r\n          console.log(\"Map URL scheme is not supported\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error opening map URL:\", error);\r\n      });\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      {activity ? (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: Colors.white,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              height: 60,\r\n              width: \"100%\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              backgroundColor: Colors.PrimaryColor,\r\n            }}\r\n          >\r\n            <TouchableOpacity\r\n              onPress={() => navigation.goBack()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginLeft: 10,\r\n              }}\r\n            >\r\n              <Image\r\n                style={{\r\n                  height: 15,\r\n                  width: 15,\r\n                  resizeMode: \"contain\",\r\n                  tintColor: Colors.white,\r\n                }}\r\n                source={require(\"../../../assets/back.png\")}\r\n              ></Image>\r\n              {/* <Text style={{ fontSize: 15, color: Colors.white }}>Back</Text> */}\r\n            </TouchableOpacity>\r\n            <Text style={{ fontSize: 19, fontWeight:\"bold\", color: Colors.white }}>\r\n              {data.property_address}\r\n            </Text>\r\n            <TouchableOpacity></TouchableOpacity>\r\n          </View>\r\n          <ScrollView>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              {/* <View style={{ marginTop: 20 }}>\r\n                <Image\r\n                  source={{ uri: data.featured_image_src }}\r\n                  style={{ height: 120, width: 120, borderRadius: 60 }}\r\n                ></Image>\r\n              </View> */}\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  marginTop: 20,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.black,\r\n                    fontSize: 20,\r\n                    fontWeight: \"bold\",\r\n                    textAlign: \"center\",\r\n                    paddingHorizontal:12,\r\n                  }}\r\n                >\r\n                  {data.title}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    color: Colors.black,\r\n                    fontSize: 16,\r\n                    marginTop: 10,\r\n                  }}\r\n                >\r\n                  $ {data.originallistprice}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              activeOpacity={1}\r\n              onPress={() => goToMap()}\r\n              style={{\r\n                justifyContent: \"center\",\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              {/* <MapView\r\n                provider={PROVIDER_GOOGLE}\r\n                style={{\r\n                  height: 250,\r\n                  width: \"100%\",\r\n                }}\r\n                region={{\r\n                  latitude: parseFloat(data.property_latitude),\r\n                  longitude: parseFloat(data.property_longitude),\r\n                  latitudeDelta: 0.015,\r\n                  longitudeDelta: 0.0121,\r\n                }}\r\n              >\r\n                <Marker\r\n                  coordinate={{\r\n                    latitude: parseFloat(data.property_latitude),\r\n                    longitude: parseFloat(data.property_longitude),\r\n                  }}\r\n                />\r\n              </MapView> */}\r\n            </TouchableOpacity>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                borderBottomWidth: 1,\r\n                borderColor: Colors.gray,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                Size (sq/FT)\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                {data.property_size}\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                borderBottomWidth: 1,\r\n                borderColor: Colors.gray,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                Bedrooms\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                {data.property_bedrooms}\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                borderBottomWidth: 1,\r\n                borderColor: Colors.gray,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                Bathrooms\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                {data.bathroomsfull}\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                borderBottomWidth: 1,\r\n                borderColor: Colors.gray,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                Last Price Change\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n              {new Date(data.modified).toLocaleString(\"en-US\", {\r\n      dateStyle: \"short\",\r\n      timeStyle: \"short\",\r\n    })}\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                borderBottomWidth: 1,\r\n                borderColor: Colors.gray,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                Previous Price\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                $ {data.originallistprice}\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                borderBottomWidth: 1,\r\n                borderColor: Colors.gray,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                Original Price\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                $ {data.originallistprice}\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                borderBottomWidth: 1,\r\n                borderColor: Colors.gray,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>Status</Text>\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                {data.status}\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                Days On Market\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                {data.yearbuilt}\r\n              </Text>\r\n            </View>\r\n\r\n            <View style={{ width: \"95%\", height: 80, alignSelf: \"center\" }}>\r\n              <Text\r\n                style={{ fontSize: 15, color: Colors.black, marginTop: 15,  }}\r\n              >\r\n                Listing Agent\r\n              </Text>\r\n              <Text style={{ fontSize: 15, color: Colors.black, marginTop: 5 ,fontWeight: \"bold\",}}>\r\n                {data.listagentfullname}\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                height: 80,\r\n                width: \"96%\",\r\n                alignSelf: \"flex-end\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: \"70%\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    height: 80,\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.black,\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    Phone\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.black,\r\n                      fontSize: 15,\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    {data.listagentpreferredphone}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              <TouchableOpacity\r\n                onPress={() => sendSMS()}\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Image\r\n                  source={require(\"../../../assets/chat.png\")}\r\n                  style={{\r\n                    height: 40,\r\n                    width: 40,\r\n                    resizeMode: \"contain\",\r\n                  }}\r\n                ></Image>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={() => makePhoneCall()}\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Image\r\n                  source={require(\"../../../assets/phone.png\")}\r\n                  style={{\r\n                    height: 40,\r\n                    width: 40,\r\n                    marginLeft: \"5%\",\r\n                    resizeMode: \"contain\",\r\n                  }}\r\n                ></Image>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View\r\n              style={{\r\n                height: 80,\r\n                width: \"96%\",\r\n                alignSelf: \"flex-end\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: \"80%\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    height: 80,\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.black,\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    Email\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.black,\r\n                      fontSize: 15,\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    {data.listagentemail}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              <TouchableOpacity\r\n                onPress={() => sendEmail()}\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Image\r\n                  source={require(\"../../../assets/mail.png\")}\r\n                  style={{\r\n                    height: 40,\r\n                    width: 40,\r\n                    resizeMode: \"contain\",\r\n                  }}\r\n                ></Image>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={{ height: 50 }}></View>\r\n          </ScrollView>\r\n        </View>\r\n      ) : (\r\n        <Activity />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default PropertiesDetails;\r\n","import React, {useState} from 'react';\r\nimport {View, Modal, Text, TouchableOpacity, StyleSheet} from 'react-native';\r\nimport Colors from '../utils/Colors';\r\n\r\nconst CustomAlert = ({\r\n  title,\r\n  message,\r\n  visible,\r\n  onCancel,\r\n  onDelete,\r\n  firstName,\r\n  secondName,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      animationType=\"fade\"\r\n      transparent={true}\r\n      onRequestClose={() => onClose()}>\r\n      <View style={styles.modalContainer}>\r\n        <View style={styles.alertContainer}>\r\n          <Text style={styles.title}>{title}</Text>\r\n          <Text style={styles.message}>{message}</Text>\r\n          <View style={{flexDirection: 'row'}}>\r\n            <TouchableOpacity\r\n              style={styles.buttonCancel}\r\n              onPress={() => onCancel()}>\r\n              <Text style={styles.buttonText}>{firstName}</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              style={styles.buttonDelete}\r\n              onPress={() => onDelete()}>\r\n              <Text style={styles.buttonText}>{secondName}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  alertContainer: {\r\n    backgroundColor: '#FFF',\r\n    borderRadius: 8,\r\n    width: '90%',\r\n\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    marginTop: 20,\r\n    fontWeight: 'bold',\r\n    marginLeft: '5%',\r\n    marginRight: '5%',\r\n    fontSize: 18,\r\n    marginBottom: 8,\r\n    color: Colors.black,\r\n    textAlign: 'center',\r\n  },\r\n  message: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    marginBottom: 16,\r\n    color: Colors.black,\r\n    marginBottom: 20,\r\n  },\r\n  buttonDelete: {\r\n    height: 50,\r\n    width: '50%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderBottomRightRadius: 8,\r\n    backgroundColor: 'red',\r\n  },\r\n  buttonCancel: {\r\n    height: 50,\r\n    width: '50%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderBottomLeftRadius: 8,\r\n    backgroundColor: Colors.buttonColor,\r\n  },\r\n  buttonText: {\r\n    color: Colors.black,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default CustomAlert;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n// import ImagePicker from \"react-native-image-crop-picker\";\r\nimport CustomAlert from \"../../components/CustomAlert\";\r\n\r\nconst DeletePropertiy = () => {\r\n  const navigation = useNavigation();\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handlePress = () => {\r\n    setShowAlert(true);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setShowAlert(false);\r\n  };\r\n\r\n  const onDelete = () => {\r\n    setShowAlert(false);\r\n    navigation.goBack();\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: Colors.white,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 60,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Cancel</Text>\r\n          </TouchableOpacity>\r\n          <Text style={{ fontSize: 15, color: Colors.white }}></Text>\r\n          <TouchableOpacity\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Done</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <TouchableOpacity\r\n          onPress={() => handlePress()}\r\n          style={{ alignSelf: \"center\", marginTop: 30 }}\r\n        >\r\n          <Text style={{ fontSize: 20, fontWeight: \"bold\", color: \"red\" }}>\r\n            Delete Item\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <CustomAlert\r\n          title=\"Are you sure you want to delete this item?\"\r\n          message=\"This action cannot be undone\"\r\n          firstName={\"Cancel\"}\r\n          secondName={\"Delete\"}\r\n          visible={showAlert}\r\n          onCancel={() => onCancel()}\r\n          onDelete={() => onDelete()}\r\n        />\r\n        <View style={{ height: 50 }}></View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default DeletePropertiy;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n//import ImagePicker from \"react-native-image-crop-picker\";\r\n\r\nconst AddClients = () => {\r\n  const navigation = useNavigation();\r\n  const [id, setID] = useState(\"\");\r\n  const [login, setLogin] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const fogotPassword = () => {\r\n    navigation.navigate(\"ForgotPassword\");\r\n  };\r\n  const _pickImage = () => {\r\n    ImagePicker.openPicker({\r\n      width: 300,\r\n      height: 400,\r\n      cropping: true,\r\n      includeBase64: true,\r\n      freeStyleCropEnabled: true,\r\n    }).then((response) => {\r\n      let source = { uri: response.path };\r\n      setAvatarSource(source);\r\n      seturiResponse(response.path);\r\n    });\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ backgroundColor: Colors.PrimaryColor, flex: 1 }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: Colors.white,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 60,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Cancel</Text>\r\n          </TouchableOpacity>\r\n          <Text style={{ fontSize: 15, color: Colors.white }}></Text>\r\n          <TouchableOpacity\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Add</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              ID\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setID(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Login\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setLogin(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Email\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                keyboardType=\"email-address\"\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setEmail(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          {/* <View style={{width: '95%', alignSelf: 'center'}}>\r\n          <Text style={{fontSize: 15, color: Colors.black, marginTop: 15}}>\r\n            Nick Name\r\n          </Text>\r\n          <View\r\n            style={{\r\n              width: '100%',\r\n              height: 50,\r\n              marginTop: 10,\r\n              justifyContent: 'center',\r\n            }}>\r\n            <TextInput\r\n              allowFontScaling={false}\r\n              style={{\r\n                width: '100%',\r\n                borderRadius: 8,\r\n                height: '100%',\r\n                paddingHorizontal: 15,\r\n                color: Colors.black,\r\n                borderColor: Colors.PrimaryColor,\r\n                backgroundColor: Colors.gray,\r\n                fontSize: 14,\r\n                padding: 2,\r\n              }}\r\n              autoCorrect={false}\r\n              returnKeyType=\"done\"\r\n              onChangeText={text => setNickname(text)}\r\n            />\r\n          </View>\r\n        </View> */}\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              First Name\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setName(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n\r\n          {/* <View style={{width: '95%', alignSelf: 'center'}}>\r\n          <Text style={{fontSize: 15, color: Colors.black, marginTop: 15}}>\r\n            Last Name\r\n          </Text>\r\n          <View\r\n            style={{\r\n              width: '100%',\r\n              height: 50,\r\n              marginTop: 10,\r\n              justifyContent: 'center',\r\n            }}>\r\n            <TextInput\r\n              allowFontScaling={false}\r\n              style={{\r\n                width: '100%',\r\n                borderRadius: 8,\r\n                height: '100%',\r\n                paddingHorizontal: 15,\r\n                color: Colors.black,\r\n                backgroundColor: Colors.gray,\r\n                fontSize: 14,\r\n                padding: 2,\r\n              }}\r\n              autoCorrect={false}\r\n              returnKeyType=\"done\"\r\n              onChangeText={text => setLastName(text)}\r\n            />\r\n          </View>\r\n        </View> */}\r\n\r\n          {/* <View style={{width: '95%', alignSelf: 'center'}}>\r\n            <Text style={{fontSize: 15, color: Colors.black, marginTop: 15}}>\r\n              Mobile\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: '100%',\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: 'center',\r\n              }}>\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: '100%',\r\n                  borderRadius: 8,\r\n                  height: '100%',\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                keyboardType=\"number-pad\"\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={text => setMobile(text)}\r\n              />\r\n            </View>\r\n          </View> */}\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Phone\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                keyboardType=\"number-pad\"\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setPhone(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Profile Picture\r\n            </Text>\r\n            <TouchableOpacity\r\n              //onPress={() => _pickImage()}\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <View\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  alignSelf: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <Image\r\n                  style={{\r\n                    height: 30,\r\n                    width: 30,\r\n                    resizeMode: \"contain\",\r\n                    marginLeft: 10,\r\n                  }}\r\n                  source={Images.uploadImage}\r\n                ></Image>\r\n\r\n                <Text\r\n                  allowFontScaling={false}\r\n                  style={{\r\n                    color: Colors.black,\r\n                    fontSize: 14,\r\n                    marginLeft: 10,\r\n                    alignSelf: \"center\",\r\n                  }}\r\n                >\r\n                  Choose an image...\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ height: 50 }}></View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default AddClients;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getAPI } from \"../config/apiMethod\";\nimport { url } from \"../config/url\";\n\nexport const getClientDetails = createAsyncThunk(\n  \"getPropertiesDetails\",\n  async (id) => {\n    const urlDynamic =\n      \"https://surf.topsearchrealty.com/wp-json/client/singlecontacts/details/?contactid=\" +\n      id;\n    return await getAPI(urlDynamic)\n      .then(async (response) => {\n        const { data } = response;\n        return data;\n      })\n      .catch((e) => {\n        console.log(e);\n        if (e.response) {\n          console.log(\"api issue\", e.response);\n        } else if (e.request) {\n          console.log(\"api issue\", e.response);\n        } else {\n          console.log(\"api issue\", e.response);\n        }\n      });\n  }\n);\n\nconst getClientDetailsSlice = createSlice({\n  name: \"getClientDetails\",\n  initialState: {\n    getClientDetails: [],\n    status: null,\n  },\n  extraReducers: {\n    [getClientDetails.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getClientDetails.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.getClientDetails = action.payload;\n    },\n    [getClientDetails.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default getClientDetailsSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getAPI } from \"../config/apiMethod\";\n\nexport const activityHistory = createAsyncThunk(\"activityHistory\", async () => {\n  const urlDynamic =\n    \"https://surf.topsearchrealty.com/wp-json/activity/taskhistory\";\n  return await getAPI(urlDynamic)\n    .then(async (response) => {\n      const { data } = response;\n      return data;\n    })\n    .catch((e) => {\n      console.log(e);\n      if (e.response) {\n        console.log(\"api issue\", e.response);\n      } else if (e.request) {\n        console.log(\"api issue\", e.response);\n      } else {\n        console.log(\"api issue\", e.response);\n      }\n    });\n});\n\nconst activityHistorySlice = createSlice({\n  name: \"activityHistory\",\n  initialState: {\n    activityHistoryData: [],\n    status: null,\n  },\n  extraReducers: {\n    [activityHistory.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [activityHistory.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.activityHistoryData = action.payload;\n    },\n    [activityHistory.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default activityHistorySlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getAPI } from \"../config/apiMethod\";\nimport { url } from \"../config/url\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const getActivityData = createAsyncThunk(\n  \"getActivityData\",\n  async (id) => {\n    const urlDynamic =\n      \" https://surf.topsearchrealty.com/wp-json/activity/activitytask?Contactid=\" +\n      id;\n    return await getAPI(urlDynamic)\n      .then(async (response) => {\n        const { data } = response;\n        return data;\n      })\n      .catch((e) => {\n        console.log(e);\n        if (e.response) {\n          console.log(\"api issue\", e.response);\n        } else if (e.request) {\n          console.log(\"api issue\", e.response);\n        } else {\n          console.log(\"api issue\", e.response);\n        }\n      });\n  }\n);\n\nconst getActivityDataSlice = createSlice({\n  name: \"getActivityData\",\n  initialState: {\n    getActivityData: [],\n    status: null,\n  },\n  extraReducers: {\n    [getActivityData.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getActivityData.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.getActivityData = action.payload;\n    },\n    [getActivityData.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default getActivityDataSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getAPI } from \"../config/apiMethod\";\nimport { url } from \"../config/url\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const getNoteData = createAsyncThunk(\"getNoteData\", async (id) => {\n  const urlDynamic =\n    \" https://surf.topsearchrealty.com/wp-json/activity/activitynotes?Contactid=\" +\n    id;\n  return await getAPI(urlDynamic)\n    .then(async (response) => {\n      const { data } = response;\n      return data;\n    })\n    .catch((e) => {\n      console.log(e);\n      if (e.response) {\n        console.log(\"api issue\", e.response);\n      } else if (e.request) {\n        console.log(\"api issue\", e.response);\n      } else {\n        console.log(\"api issue\", e.response);\n      }\n    });\n});\n\nconst getNoteDataSlice = createSlice({\n  name: \"getNoteData\",\n  initialState: {\n    getNoteData: [],\n    status: null,\n  },\n  extraReducers: {\n    [getNoteData.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getNoteData.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.getContactsData = action.payload;\n    },\n    [getNoteData.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default getNoteDataSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getAPI } from \"../config/apiMethod\";\n\nexport const getDocument = createAsyncThunk(\"getDocument\", async () => {\n  const urlDynamic = \"https://surf.topsearchrealty.com/api/v1/docusign/\";\n  return await getAPI(urlDynamic)\n    .then(async (response) => {\n      const { data } = response;\n      return data;\n    })\n    .catch((e) => {\n      console.log(e);\n      if (e.response) {\n        console.log(\"api issue\", e.response);\n      } else if (e.request) {\n        console.log(\"api issue\", e.response);\n      } else {\n        console.log(\"api issue\", e.response);\n      }\n    });\n});\n\nconst getDocumentSlice = createSlice({\n  name: \"getDocument\",\n  initialState: {\n    getDocumentData: [],\n    status: null,\n  },\n  extraReducers: {\n    [getDocument.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDocument.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.getDocumentData = action.payload;\n    },\n    [getDocument.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default getDocumentSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getAPI } from \"../config/apiMethod\";\nimport { url } from \"../config/url\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const getDisposition = createAsyncThunk(\n  \"getDisposition\",\n  async (id) => {\n    const urlDynamic =\n      \" https://surf.topsearchrealty.com/wp-json/activity/activitydispositions?Contactid=\" +\n      id;\n    return await getAPI(urlDynamic)\n      .then(async (response) => {\n        const { data } = response;\n        return data;\n      })\n      .catch((e) => {\n        console.log(e);\n        if (e.response) {\n          console.log(\"api issue\", e.response);\n        } else if (e.request) {\n          console.log(\"api issue\", e.response);\n        } else {\n          console.log(\"api issue\", e.response);\n        }\n      });\n  }\n);\n\nconst getDispositionSlice = createSlice({\n  name: \"getDisposition\",\n  initialState: {\n    getDispositionData: [],\n    status: null,\n  },\n  extraReducers: {\n    [getDisposition.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getDisposition.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.getDispositionData = action.payload;\n    },\n    [getDisposition.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default getDispositionSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getAPI } from \"../config/apiMethod\";\nimport { url } from \"../config/url\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const getTodayDipos = createAsyncThunk(\n  \"getTodayDipos\",\n  async (id) => {\n    const urlDynamic =\n      \" https://surf.topsearchrealty.com/wp-json/activity/todaydispositions?Contactid=\" +\n      id;\n    return await getAPI(urlDynamic)\n      .then(async (response) => {\n        const { data } = response;\n        return data;\n      })\n      .catch((e) => {\n        console.log(e);\n        if (e.response) {\n          console.log(\"api issue\", e.response);\n        } else if (e.request) {\n          console.log(\"api issue\", e.response);\n        } else {\n          console.log(\"api issue\", e.response);\n        }\n      });\n  }\n);\n\nconst getTodayDiposSlice = createSlice({\n  name: \"getTodayDipos\",\n  initialState: {\n    getTodayDiposData: [],\n    status: null,\n  },\n  extraReducers: {\n    [getTodayDipos.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getTodayDipos.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.getTodayDiposData = action.payload;\n    },\n    [getTodayDipos.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default getTodayDiposSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getAPI } from \"../config/apiMethod\";\nimport { url } from \"../config/url\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const getCurrentDisposition = createAsyncThunk(\n  \"getCurrentDisposition\",\n  async (id) => {\n    const urlDynamic =\n      \"https://surf.topsearchrealty.com/wp-json/activity/currentdispositions?Contactid=\" +\n      id;\n    return await getAPI(urlDynamic)\n      .then(async (response) => {\n        const { data } = response;\n        return data;\n      })\n      .catch((e) => {\n        console.log(e);\n        if (e.response) {\n          console.log(\"api issue\", e.response);\n        } else if (e.request) {\n          console.log(\"api issue\", e.response);\n        } else {\n          console.log(\"api issue\", e.response);\n        }\n      });\n  }\n);\n\nconst getCurrentDispositionSlice = createSlice({\n  name: \"getCurrentDispositionData\",\n  initialState: {\n    getCurrentDispositionData: [],\n    status: null,\n  },\n  extraReducers: {\n    [getCurrentDisposition.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getCurrentDisposition.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.getCurrentDispositionData = action.payload;\n    },\n    [getCurrentDisposition.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default getCurrentDispositionSlice.reducer;\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  ScrollView,\r\n  Linking,\r\n  SafeAreaView,\r\n  Modal,\r\n  StyleSheet,\r\n  PanResponder,\r\n  Share,\r\n} from \"react-native\";\r\n\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getClientDetails } from \"../../modules/getMyClientDetails\";\r\nimport { activityHistory } from \"../../modules/activityHistory\";\r\nimport { getActivityData } from \"../../modules/getActivityTask\";\r\nimport { getNoteData } from \"../../modules/getNoteData\";\r\nimport { getDocument } from \"../../modules/getDocument\";\r\nimport { getDisposition } from \"../../modules/getDisposition\";\r\nimport { getTodayDipos } from \"../../modules/getTodayDipos\";\r\nimport { getCurrentDisposition } from \"../../modules/currentDisposition\";\r\n\r\nconst MyClientsDetails = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [data, setData] = useState();\r\n  const [history, setHistory] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [note, setNote] = useState([]);\r\n  const [task, setTask] = useState([]);\r\n  const [leadType, setLeadType] = useState(\"\");\r\n  const [property, setProperty] = useState([]);\r\n  const items = props.route.params;\r\n  const isFocused = useIsFocused();\r\n  const [showAll, setShowAll] = useState(false);\r\n  const [todayDipo, setTodayDipo] = useState(\"\");\r\n  const [futureDipo, setFutureDipo] = useState([]);\r\n  const [currentDipo, setCurrentDisposition] = useState([]);\r\n  const [selectedActivityType, setSelectedActivityType] = useState(null);\r\n  const [selectedTodayActivityType, setSelectedTodayActivityType] =\r\n    useState(null);\r\n\r\n  const [expandedActivityTypes, setExpandedActivityTypes] = useState([]);\r\n  const [showAllItems, setShowAllItems] = useState(false);\r\n  const itemsToShow = showAllItems ? history.length : 5;\r\n  const id = items.item.id;\r\n  const [showAllNotes, setShowAllNotes] = useState(false);\r\n  const notesToShow = showAllNotes ? note.length : 5;\r\n\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      console.log(\"Page refreshed\");\r\n    }\r\n    disPosition();\r\n    MyClientsDetails();\r\n    allActivityHistory();\r\n    MyNoteData();\r\n    currentDisposition();\r\n    TodayDisPosition();\r\n  }, [isFocused]);\r\n\r\n  const MyClientsDetails = () => {\r\n    dispatch(getClientDetails(id))\r\n      .then((response) => {\r\n        const clientData = response.payload.data;\r\n        setData(clientData);\r\n        const propTitles = clientData.flatMap((item) =>\r\n          item.property_viewed\r\n            .map((property) => property.prop_title)\r\n            .filter((title) => title)\r\n        );\r\n        setProperty(propTitles);\r\n        const url = clientData.map((item) => item.linked_id);\r\n        const updatedLeadTypes = clientData.map((item) => {\r\n          const url = item.linked_lead;\r\n          const paramName = getParamNameFromUrl(url, \"wpestate_crm_lead\");\r\n          return \"Lead\";\r\n        });\r\n\r\n        setLeadType(updatedLeadTypes);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error fetching client details:\", error);\r\n      });\r\n    const getParamNameFromUrl = (url, paramKey) => {\r\n      const regex = new RegExp(`[?&](${paramKey}=([^&#]*)|&|#|$)`);\r\n      const match = url.match(regex);\r\n      if (match) {\r\n        return match[1].split(\"=\")[0];\r\n      }\r\n      return \"\";\r\n    };\r\n  };\r\n  const disPosition = () => {\r\n    dispatch(getDisposition(id)).then((response) => {\r\n      const data = response.payload.data;\r\n      setFutureDipo(data);\r\n      console.log(data);\r\n    });\r\n  };\r\n\r\n  const TodayDisPosition = () => {\r\n    dispatch(getTodayDipos(id)).then((response) => {\r\n      const data = response.payload.data;\r\n      setTodayDipo(data);\r\n      console.log(data, \"dfsdf\");\r\n    });\r\n  };\r\n  const currentDisposition = () => {\r\n    dispatch(getCurrentDisposition(id)).then((response) => {\r\n      const data = response.payload.data;\r\n      setCurrentDisposition(data);\r\n    });\r\n  };\r\n  const allActivityHistory = () => {\r\n    dispatch(activityHistory()).then((response) => {\r\n      const history = response.payload.data;\r\n      setHistory(history);\r\n    });\r\n  };\r\n  const handleShowMoreLess = () => {\r\n    setShowAllNotes(!showAllNotes);\r\n  };\r\n\r\n  const renderHistoryItem = ({ item }) => (\r\n    <TouchableOpacity\r\n      style={{\r\n        height: 60,\r\n        width: \"90%\",\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: Colors.gray,\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n        flexDirection: \"row\",\r\n        alignSelf: \"center\",\r\n      }}\r\n    >\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 80,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              color: Colors.black,\r\n              fontSize: 16,\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            {item.activity_type}\r\n          </Text>\r\n\r\n          <Text\r\n            style={{\r\n              color: Colors.black,\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            {item.activity_date}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n  const MyNoteData = () => {\r\n    dispatch(getNoteData(id)).then((response) => {\r\n      const noteData = response.payload.data;\r\n      setNote(noteData);\r\n    });\r\n  };\r\n\r\n  const panResponder = useRef(\r\n    PanResponder.create({\r\n      onMoveShouldSetPanResponder: (_, gestureState) => {\r\n        // Only respond to vertical gestures (swipe down)\r\n        return Math.abs(gestureState.dx) < Math.abs(gestureState.dy);\r\n      },\r\n      onPanResponderRelease: (_, gestureState) => {\r\n        if (gestureState.dy > 0) {\r\n          setModalVisible(false);\r\n        }\r\n      },\r\n    })\r\n  ).current;\r\n  // const getUserInitials = (fullName) => {\r\n  //   const [firstName, lastName] = fullName.split(\" \");\r\n  //   return `${firstName.charAt(0)} ${lastName.charAt(0)}`;\r\n  // };\r\n  const makePhoneCall = () => {\r\n    let phoneNumber = items.item.contact_number;\r\n    Linking.openURL(`tel:${phoneNumber}`);\r\n  };\r\n  const sendEmail = () => {\r\n    let recipient = items.item.contact_email;\r\n    let subject = \"Subject of email\";\r\n    let body = \"Body of email\";\r\n    Linking.openURL(`mailto:${recipient}?subject=${subject}&body=${body}`);\r\n  };\r\n\r\n  const sendSMS = () => {\r\n    let phoneNumber = items.item.contact_number;\r\n    let message = \"Hello from my app!\";\r\n    Linking.openURL(`sms:${phoneNumber}`);\r\n  };\r\n  const handleShare = () => {\r\n    Share.share({\r\n      message: \"Check out this cool article I found!\",\r\n      url: \"https://example.com/article\",\r\n      title: \"Cool Article\",\r\n    });\r\n  };\r\n\r\n  const _pickImage = () => {\r\n    ImagePicker.openPicker({\r\n      width: 300,\r\n      height: 400,\r\n      cropping: true,\r\n      includeBase64: true,\r\n      freeStyleCropEnabled: true,\r\n    }).then((response) => {\r\n      let source = { uri: response.path };\r\n      setAvatarSource(source);\r\n      seturiResponse(response.path);\r\n      console.warn(\"mkm\", avatarSource);\r\n      console.warn(\"uri\", uriResponse);\r\n    });\r\n  };\r\n  const toggleModal = () => {\r\n    setModalVisible(!modalVisible);\r\n  };\r\n  function formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n\r\n    const formattedDate = date.toLocaleDateString(\"en-US\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n    });\r\n\r\n    const formattedTime = date.toLocaleTimeString(\"en-US\", {\r\n      hour: \"numeric\",\r\n      minute: \"2-digit\",\r\n      hour12: true,\r\n    });\r\n\r\n    return `${formattedDate} ${formattedTime}`;\r\n  }\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: Colors.white,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n            paddingVertical: 22,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n            onPress={() => navigation.goBack()}\r\n          >\r\n            <Image\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                tintColor: Colors.white,\r\n              }}\r\n              source={require(\"../../../assets/back.png\")}\r\n            ></Image>\r\n            <Text style={{ fontSize: 15, color: Colors.white }}></Text>\r\n          </TouchableOpacity>\r\n          <Text\r\n            style={{\r\n              fontSize: 19,\r\n              fontWeight: \"bold\",\r\n              color: Colors.white,\r\n            }}\r\n          >\r\n            My Clients Details\r\n          </Text>\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(\"EditClientsDetails\", { items })}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../../../assets/edit.png\")}\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                tintColor: Colors.white,\r\n              }}\r\n            ></Image>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <FlatList\r\n            data={data}\r\n            scrollEnabled={false}\r\n            renderItem={({ item, index }) => (\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  alignSelf: \"center\",\r\n                  borderRadius: 5,\r\n                  marginTop: 0,\r\n                  borderColor: Colors.gray,\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    flexDirection: \"row\",\r\n                    padding: 10,\r\n                    marginTop: 20,\r\n                  }}\r\n                >\r\n                  <Image\r\n                    source={{ uri: item.contact_image }}\r\n                    style={{\r\n                      height: 120,\r\n                      width: 120,\r\n                      borderRadius: 60,\r\n                      borderWidth: 2,\r\n                      borderColor: \"#ddd\",\r\n                    }}\r\n                  ></Image>\r\n                  <View style={{ width: \"60%\", justifyContent: \"center\" }}>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.black,\r\n                        fontSize: 19,\r\n\r\n                        fontWeight: \"bold\",\r\n                        marginLeft: 20,\r\n                      }}\r\n                    >\r\n                      {item.contact_name}{\" \"}\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.black,\r\n                        fontSize: 16,\r\n                        marginTop: 5,\r\n                        marginLeft: 20,\r\n                      }}\r\n                    >\r\n                      {item.contact_name}{\" \"}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    height: 60,\r\n                    width: \"60%\",\r\n                    alignSelf: \"center\",\r\n                    alignItems: \"center\",\r\n                    alignContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    onPress={() => makePhoneCall()}\r\n                    style={{\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../../../assets/phone.png\")}\r\n                      style={{\r\n                        height: 50,\r\n                        width: 50,\r\n                        resizeMode: \"contain\",\r\n                      }}\r\n                    ></Image>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    onPress={() => sendEmail()}\r\n                    style={{\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../../../assets/mail.png\")}\r\n                      style={{\r\n                        height: 50,\r\n                        width: 50,\r\n                        resizeMode: \"contain\",\r\n                      }}\r\n                    ></Image>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => sendSMS()}\r\n                    style={{\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../../../assets/chat.png\")}\r\n                      style={{\r\n                        height: 50,\r\n                        width: 50,\r\n                        resizeMode: \"contain\",\r\n                      }}\r\n                    ></Image>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    onPress={() => handleShare()}\r\n                    style={{\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={require(\"../../../assets/share.png\")}\r\n                      style={{\r\n                        height: 50,\r\n                        width: 50,\r\n                        resizeMode: \"contain\",\r\n                      }}\r\n                    ></Image>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    height: 40,\r\n                    width: \"90%\",\r\n                    alignSelf: \"center\",\r\n                    alignItems: \"center\",\r\n                    alignContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    //  borderBottomWidth: 1,\r\n                    // borderColor: Colors.gray,\r\n                    marginTop: 6,\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: \"#8d8a8a\",\r\n                      fontSize: 14,\r\n                    }}\r\n                  >\r\n                    Phone\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.black,\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    {item.contact_number}\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    height: 30,\r\n                    width: \"90%\",\r\n                    alignSelf: \"center\",\r\n                    alignItems: \"center\",\r\n                    alignContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    // borderBottomWidth: 1,\r\n                    // borderColor: Colors.gray,\r\n                    marginTop: 6,\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: \"#8d8a8a\",\r\n                      fontSize: 14,\r\n                    }}\r\n                  >\r\n                    Email\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.black,\r\n                      fontSize: 16,\r\n                      color: Colors.PrimaryColor,\r\n                    }}\r\n                  >\r\n                    {item.contact_email}{\" \"}\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    height: 30,\r\n                    width: \"90%\",\r\n                    alignSelf: \"center\",\r\n                    alignItems: \"center\",\r\n                    alignContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    // borderBottomWidth: 1,\r\n                    // borderColor: Colors.gray,\r\n                    marginTop: 6,\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: \"#8d8a8a\",\r\n                      fontSize: 14,\r\n                    }}\r\n                  >\r\n                    Propertity Address\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.black,\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    {item.property_address}{\" \"}\r\n                  </Text>\r\n                </View>\r\n\r\n                <View\r\n                  style={{\r\n                    height: 30,\r\n                    width: \"90%\",\r\n                    alignSelf: \"center\",\r\n                    alignItems: \"center\",\r\n                    alignContent: \"center\",\r\n                    flexDirection: \"row\",\r\n                    marginTop: 6,\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: \"#8d8a8a\",\r\n                      fontSize: 14,\r\n                    }}\r\n                  >\r\n                    Client Type\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.black,\r\n                      fontSize: 16,\r\n                      color: Colors.PrimaryColor,\r\n                    }}\r\n                  >\r\n                    {leadType}{\" \"}\r\n                  </Text>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    width: \"90%\",\r\n                    height: 60,\r\n                    marginTop: 20,\r\n                    alignSelf: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    onPress={() => navigation.navigate(\"DisPosition\", { item })}\r\n                    style={{\r\n                      height: 42,\r\n                      width: \"30%\",\r\n                      borderRadius: 5,\r\n                      borderColor: Colors.gray,\r\n                      borderWidth: 0.5,\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      marginRight: 6,\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontSize: 14, color: Colors.black }}>\r\n                      🗓️ TASK\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    onPress={() => navigation.navigate(\"NewNote\", { item })}\r\n                    style={{\r\n                      height: 42,\r\n                      width: \"30%\",\r\n                      borderRadius: 5,\r\n                      borderColor: Colors.gray,\r\n                      borderWidth: 0.5,\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontSize: 14, color: Colors.black }}>\r\n                      📝 NOTE\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            )}\r\n          />\r\n\r\n          <View\r\n            style={{\r\n              width: \"95%\",\r\n              alignSelf: \"center\",\r\n              borderRadius: 5,\r\n              marginTop: 2,\r\n            }}\r\n          >\r\n            <View>\r\n              <Text\r\n                style={{\r\n                  color: Colors.black,\r\n                  fontSize: 18,\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 20,\r\n                }}\r\n              >\r\n                Today's Activities\r\n              </Text>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                alignSelf: \"flex-start\",\r\n                alignItems: \"flex-start\",\r\n                alignContent: \"flex-start\",\r\n                flexDirection: \"column\",\r\n                marginTop: 3,\r\n\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  alignSelf: \"flex-start\",\r\n                  alignItems: \"flex-start\",\r\n                  alignContent: \"flex-start\",\r\n                  flexDirection: \"column\",\r\n                  marginTop: 20,\r\n\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    paddingRight: 20,\r\n                    alignSelf: \"flex-start\",\r\n                    alignItems: \"flex-start\",\r\n                    alignContent: \"flex-start\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                ></View>\r\n                {typeof todayDipo === \"string\" ? (\r\n                  <Text\r\n                    style={{\r\n                      alignSelf: \"center\",\r\n                      alignItems: \"flex-start\",\r\n                      alignContent: \"flex-start\",\r\n                      flexDirection: \"column\",\r\n                      marginTop: 20,\r\n                    }}\r\n                  >\r\n                    {todayDipo}\r\n                  </Text>\r\n                ) : (\r\n                  <FlatList\r\n                    style={{\r\n                      width: \"100%\",\r\n                    }}\r\n                    data={todayDipo}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({ item, index }) => (\r\n                      <React.Fragment>\r\n                        <TouchableOpacity\r\n                          onPress={() => {\r\n                            if (\r\n                              selectedTodayActivityType ===\r\n                              item.activity_disposition\r\n                            ) {\r\n                              setSelectedTodayActivityType(null);\r\n                            } else {\r\n                              setSelectedTodayActivityType(\r\n                                item.activity_disposition\r\n                              );\r\n                            }\r\n                          }}\r\n                          style={{\r\n                            flexDirection: \"row\",\r\n                            width: \"100%\",\r\n                          }}\r\n                        >\r\n                          <Text style={styles.subheadingmaintype}>\r\n                            {item.activity_disposition}\r\n                          </Text>\r\n                          {/* Other activity type data */}\r\n                        </TouchableOpacity>\r\n                        {selectedTodayActivityType ===\r\n                          item.activity_disposition && (\r\n                          <View\r\n                            style={{\r\n                              width: \"100%\",\r\n                            }}\r\n                          >\r\n                            <View\r\n                              style={{\r\n                                borderColor: Colors.gray,\r\n                                borderWidth: 1,\r\n                                padding: 12,\r\n                                width: \"100%\",\r\n                                borderRadius: 4,\r\n\r\n                                marginBottom: 20,\r\n                                backgroundColor: Colors.cream,\r\n                              }}\r\n                            >\r\n                              <View\r\n                                style={{\r\n                                  alignItems: \"center\",\r\n                                  width: \"100%\",\r\n                                  flexDirection: \"row\",\r\n                                  justifyContent: \"space-between\",\r\n                                  marginBottom: 20,\r\n                                }}\r\n                              >\r\n                                <Text style={styles.headingmaintype}>\r\n                                  Activity Disposition\r\n                                </Text>\r\n                                <Text style={styles.subheadingmaintypeinner}>\r\n                                  {item.activity_disposition}\r\n                                </Text>\r\n                              </View>\r\n                              <View\r\n                                style={{\r\n                                  alignItems: \"center\",\r\n                                  width: \"100%\",\r\n                                  flexDirection: \"row\",\r\n                                  justifyContent: \"space-between\",\r\n                                  marginBottom: 20,\r\n                                }}\r\n                              >\r\n                                <Text style={styles.headingmaintype}>\r\n                                  Activity Type\r\n                                </Text>\r\n                                <Text style={styles.subheadingmaintypeinner}>\r\n                                  {item.activity_type}\r\n                                </Text>\r\n                              </View>\r\n                              <View\r\n                                style={{\r\n                                  alignItems: \"center\",\r\n                                  width: \"100%\",\r\n                                  flexDirection: \"row\",\r\n                                  justifyContent: \"space-between\",\r\n                                  marginBottom: 20,\r\n                                }}\r\n                              >\r\n                                <Text style={styles.headingmaintype}>\r\n                                  Activity Notes\r\n                                </Text>\r\n                                <Text style={styles.subheadingmaintypeinner}>\r\n                                  {item.activity_notes}\r\n                                </Text>\r\n                              </View>\r\n                              <View\r\n                                style={{\r\n                                  alignItems: \"center\",\r\n                                  width: \"100%\",\r\n                                  flexDirection: \"row\",\r\n                                  justifyContent: \"space-between\",\r\n                                  marginBottom: 20,\r\n                                }}\r\n                              >\r\n                                <Text style={styles.headingmaintype}>\r\n                                  Next Disposition Date\r\n                                </Text>\r\n                                <Text\r\n                                  style={styles.subheadingmaintypeinnerdate}\r\n                                >\r\n                                  {item.next_disposition_date}\r\n                                </Text>\r\n                              </View>\r\n                              <View\r\n                                style={{\r\n                                  alignItems: \"center\",\r\n                                  width: \"100%\",\r\n                                  flexDirection: \"row\",\r\n                                  justifyContent: \"space-between\",\r\n                                  marginBottom: 20,\r\n                                }}\r\n                              >\r\n                                <Text style={styles.headingmaintype}>\r\n                                  Activity Next Disposition\r\n                                </Text>\r\n                                <Text style={styles.subheadingmaintypeinner}>\r\n                                  {item.activity_next_disposition}\r\n                                </Text>\r\n                              </View>\r\n                              <View\r\n                                style={{\r\n                                  alignItems: \"center\",\r\n                                  width: \"100%\",\r\n                                  flexDirection: \"row\",\r\n                                  justifyContent: \"space-between\",\r\n                                  marginBottom: 20,\r\n                                }}\r\n                              >\r\n                                <Text style={styles.headingmaintype}>\r\n                                  Next Disposition Notes\r\n                                </Text>\r\n                                <Text style={styles.subheadingmaintypeinner}>\r\n                                  {item.next_disposition_notes}\r\n                                </Text>\r\n                              </View>\r\n                            </View>\r\n                          </View>\r\n                        )}\r\n                      </React.Fragment>\r\n                    )}\r\n                  />\r\n                )}\r\n              </View>\r\n            </View>\r\n          </View>\r\n\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              alignSelf: \"center\",\r\n              borderRadius: 5,\r\n              marginTop: 20,\r\n            }}\r\n          >\r\n            <View>\r\n              <Text\r\n                style={{\r\n                  color: Colors.black,\r\n                  fontSize: 18,\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 5,\r\n\r\n                  marginLeft: 10,\r\n                }}\r\n              >\r\n                Activity Log\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                alignSelf: \"flex-start\",\r\n                alignItems: \"flex-start\",\r\n                alignContent: \"flex-start\",\r\n                flexDirection: \"column\",\r\n                marginTop: 3,\r\n                paddingHorizontal: 8,\r\n                justifyContent: \"space-between\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <ScrollView\r\n                style={{\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    alignSelf: \"flex-start\",\r\n                    alignItems: \"flex-start\",\r\n                    alignContent: \"flex-start\",\r\n                    flexDirection: \"column\",\r\n                    marginTop: 20,\r\n\r\n                    width: \"100%\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  {typeof futureDipo === \"string\" ? (\r\n                    <Text\r\n                      style={{\r\n                        alignSelf: \"center\",\r\n                        alignItems: \"flex-start\",\r\n                        alignContent: \"flex-start\",\r\n                        flexDirection: \"column\",\r\n                        marginTop: 20,\r\n                      }}\r\n                    >\r\n                      {futureDipo}\r\n                    </Text>\r\n                  ) : (\r\n                    <FlatList\r\n                      style={{\r\n                        width: \"100%\",\r\n                      }}\r\n                      data={futureDipo}\r\n                      keyExtractor={(item, index) => index.toString()}\r\n                      renderItem={({ item, index }) => (\r\n                        <React.Fragment>\r\n                          <TouchableOpacity\r\n                            onPress={() => {\r\n                              if (\r\n                                selectedActivityType ===\r\n                                item.activity_disposition\r\n                              ) {\r\n                                setSelectedActivityType(null);\r\n                              } else {\r\n                                setSelectedActivityType(\r\n                                  item.activity_disposition\r\n                                );\r\n                              }\r\n                            }}\r\n                            style={{\r\n                              flexDirection: \"row\",\r\n                            }}\r\n                          >\r\n                            <Text style={styles.subheadingmaintype}>\r\n                              {item.activity_disposition}\r\n                            </Text>\r\n                            {/* Other activity type data */}\r\n                          </TouchableOpacity>\r\n                          {selectedActivityType ===\r\n                            item.activity_disposition && (\r\n                            <View\r\n                              style={{\r\n                                width: \"100%\",\r\n                              }}\r\n                            >\r\n                              <View\r\n                                style={{\r\n                                  paddingRight: 20,\r\n                                  borderColor: Colors.gray,\r\n                                  borderWidth: 1,\r\n                                  padding: 12,\r\n                                  width: \"100%\",\r\n                                  marginBottom: 20,\r\n                                  borderRadius: 4,\r\n                                  backgroundColor: Colors.cream,\r\n                                }}\r\n                              >\r\n                                <View\r\n                                  style={{\r\n                                    alignItems: \"center\",\r\n\r\n                                    flexDirection: \"row\",\r\n                                    justifyContent: \"space-between\",\r\n                                    marginBottom: 20,\r\n                                  }}\r\n                                >\r\n                                  <Text style={styles.headingmaintype}>\r\n                                    Activity Disposition\r\n                                  </Text>\r\n                                  <Text style={styles.subheadingmaintypeinner}>\r\n                                    {item.activity_disposition}\r\n                                  </Text>\r\n                                </View>\r\n                                <View\r\n                                  style={{\r\n                                    alignItems: \"center\",\r\n                                    width: \"100%\",\r\n                                    flexDirection: \"row\",\r\n                                    justifyContent: \"space-between\",\r\n                                    marginBottom: 20,\r\n                                  }}\r\n                                >\r\n                                  <Text style={styles.headingmaintype}>\r\n                                    Activity Type\r\n                                  </Text>\r\n                                  <Text style={styles.subheadingmaintypeinner}>\r\n                                    {item.activity_type}\r\n                                  </Text>\r\n                                </View>\r\n                                <View\r\n                                  style={{\r\n                                    alignItems: \"center\",\r\n                                    width: \"100%\",\r\n                                    flexDirection: \"row\",\r\n                                    justifyContent: \"space-between\",\r\n                                    marginBottom: 20,\r\n                                  }}\r\n                                >\r\n                                  <Text style={styles.headingmaintype}>\r\n                                    Activity Notes\r\n                                  </Text>\r\n                                  <Text style={styles.subheadingmaintypeinner}>\r\n                                    {item.activity_notes}\r\n                                  </Text>\r\n                                </View>\r\n                                <View\r\n                                  style={{\r\n                                    alignItems: \"center\",\r\n                                    width: \"100%\",\r\n                                    flexDirection: \"row\",\r\n                                    justifyContent: \"space-between\",\r\n                                    marginBottom: 20,\r\n                                  }}\r\n                                >\r\n                                  <Text style={styles.headingmaintype}>\r\n                                    Next Disposition Date\r\n                                  </Text>\r\n                                  <Text\r\n                                    style={styles.subheadingmaintypeinnerdate}\r\n                                  >\r\n                                    {formatDate(item.next_disposition_date)}\r\n                                  </Text>\r\n                                </View>\r\n                                <View\r\n                                  style={{\r\n                                    alignItems: \"center\",\r\n                                    width: \"100%\",\r\n                                    flexDirection: \"row\",\r\n                                    justifyContent: \"space-between\",\r\n                                    marginBottom: 20,\r\n                                  }}\r\n                                >\r\n                                  <Text style={styles.headingmaintype}>\r\n                                    Activity Next Disposition\r\n                                  </Text>\r\n                                  <Text style={styles.subheadingmaintypeinner}>\r\n                                    {item.activity_next_disposition}\r\n                                  </Text>\r\n                                </View>\r\n                                <View\r\n                                  style={{\r\n                                    alignItems: \"center\",\r\n                                    width: \"100%\",\r\n                                    flexDirection: \"row\",\r\n                                    justifyContent: \"space-between\",\r\n                                    marginBottom: 20,\r\n                                  }}\r\n                                >\r\n                                  <Text style={styles.headingmaintype}>\r\n                                    Next Disposition Notes\r\n                                  </Text>\r\n                                  <Text style={styles.subheadingmaintypeinner}>\r\n                                    {item.next_disposition_notes}\r\n                                  </Text>\r\n                                </View>\r\n                                <TouchableOpacity\r\n                                  onPress={() =>\r\n                                    navigation.navigate(\"EditActivity\", {\r\n                                      item,\r\n                                    })\r\n                                  }\r\n                                  style={{\r\n                                    flexDirection: \"row\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                    marginRight: 10,\r\n                                    borderRadius: 100,\r\n\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                  }}\r\n                                >\r\n                                  <View\r\n                                    style={{\r\n                                      height: 40,\r\n                                      width: 40,\r\n                                      backgroundColor: Colors.white,\r\n                                      alignItems: \"center\",\r\n                                      justifyContent: \"center\",\r\n                                      borderRadius: 100,\r\n                                    }}\r\n                                  >\r\n                                    <Image\r\n                                      source={require(\"../../../assets/edit.png\")}\r\n                                      style={{\r\n                                        height: 15,\r\n                                        width: 15,\r\n                                        resizeMode: \"contain\",\r\n                                        tintColor: Colors.PrimaryColor,\r\n                                      }}\r\n                                    ></Image>\r\n                                  </View>\r\n                                  <Text style={styles.editactivity}>\r\n                                    Edit Activity\r\n                                  </Text>\r\n                                </TouchableOpacity>\r\n                              </View>\r\n                            </View>\r\n                          )}\r\n                        </React.Fragment>\r\n                      )}\r\n                    />\r\n                  )}\r\n                </View>\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n\r\n          <View\r\n            style={{\r\n              borderWidth: 1,\r\n              width: \"95%\",\r\n              alignSelf: \"center\",\r\n              borderRadius: 5,\r\n              marginTop: 20,\r\n              borderColor: Colors.gray,\r\n            }}\r\n          >\r\n            <View\r\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  color: Colors.black,\r\n                  fontSize: 18,\r\n                  fontWeight: \"bold\",\r\n                  marginTop: 25,\r\n                  marginBottom: 15,\r\n                  width: \"100%\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Properties Viewed\r\n              </Text>\r\n            </View>\r\n            {property.length === 0 ? (\r\n              <Text style={styles.nodata}>No data found</Text>\r\n            ) : (\r\n              <View style={styles.propertydata}>\r\n                {property.map((title, index) => (\r\n                  <View key={index}>\r\n                    <Text style={styles.mainpropertydata}>\r\n                      {\"\\u2022\"} {title}\r\n                    </Text>\r\n                  </View>\r\n                ))}\r\n              </View>\r\n            )}\r\n\r\n            {/* {property.length === 0 ? (\r\n              <Text>No data found</Text>\r\n            ) : (\r\n              <FlatList\r\n                data={property}\r\n                keyExtractor={(item, index) => index.toString()}\r\n                renderItem={({ item }) => (\r\n                  <Text>\r\n                    <li>{item}</li>\r\n                  </Text>\r\n                )}\r\n              />\r\n            )} */}\r\n\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                width: \"90%\",\r\n                height: 60,\r\n                marginTop: 20,\r\n                alignSelf: \"center\",\r\n                justifyContent: \"flex-end\",\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => navigation.navigate(\"Properties\")}\r\n                style={{\r\n                  height: 35,\r\n                  width: \"45%\",\r\n                  borderRadius: 5,\r\n                  backgroundColor: Colors.PrimaryColor,\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 14,\r\n\r\n                    color: Colors.white,\r\n                  }}\r\n                >\r\n                  See all Properties\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={{\r\n              borderWidth: 1,\r\n              width: \"95%\",\r\n              alignSelf: \"center\",\r\n              borderRadius: 5,\r\n              marginTop: 20,\r\n              borderColor: Colors.gray,\r\n            }}\r\n          ></View>\r\n          <View\r\n            style={{\r\n              borderWidth: 1,\r\n              width: \"95%\",\r\n              alignSelf: \"center\",\r\n              borderRadius: 5,\r\n              marginTop: 20,\r\n              borderColor: Colors.gray,\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignContent: \"center\",\r\n                alignItems: \"center\",\r\n                width: \"90%\",\r\n                alignSelf: \"center\",\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  color: Colors.black,\r\n                  fontSize: 18,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Notes\r\n              </Text>\r\n              {/* <TouchableOpacity\r\n                onPress={toggleModal}\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  backgroundColor: Colors.PrimaryColor,\r\n                  height: 40,\r\n                  width: 40,\r\n                  borderRadius: 20,\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Image\r\n                  style={{ height: 20, width: 20, resizeMode: \"contain\" }}\r\n                  source={require(\"../../../assets/plus.png\")}\r\n                ></Image>\r\n              </TouchableOpacity> */}\r\n            </View>\r\n            <View style={{ backgroundColor: Colors.white, marginTop: 20 }}>\r\n              {note && note.length > 0 ? (\r\n                <>\r\n                  <FlatList\r\n                    data={note.slice(0, notesToShow)}\r\n                    scrollEnabled={false}\r\n                    renderItem={({ item }) => (\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          height: 60,\r\n                          width: \"90%\",\r\n                          borderBottomWidth: 1,\r\n                          borderBottomColor: Colors.gray,\r\n                          alignItems: \"center\",\r\n                          alignContent: \"center\",\r\n                          flexDirection: \"row\",\r\n                          alignSelf: \"center\",\r\n                        }}\r\n                      >\r\n                        <View\r\n                          style={{\r\n                            width: \"100%\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"space-between\",\r\n                          }}\r\n                        >\r\n                          <View\r\n                            style={{\r\n                              height: 80,\r\n                              justifyContent: \"center\",\r\n                            }}\r\n                          >\r\n                            <Text\r\n                              style={{\r\n                                color: Colors.black,\r\n                                fontSize: 16,\r\n                                fontWeight: \"bold\",\r\n                              }}\r\n                            >\r\n                              {item.note_content}\r\n                            </Text>\r\n\r\n                            <Text\r\n                              style={{\r\n                                color: Colors.black,\r\n                                fontSize: 12,\r\n                              }}\r\n                            >\r\n                              {item.created_date}\r\n                            </Text>\r\n                          </View>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  />\r\n\r\n                  {note.length > 5 && (\r\n                    <TouchableOpacity\r\n                      onPress={() => setShowAllNotes(!showAllNotes)}\r\n                      style={{\r\n                        height: 60,\r\n                        width: \"90%\",\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: Colors.gray,\r\n                        alignItems: \"center\",\r\n                        alignContent: \"center\",\r\n                        flexDirection: \"row\",\r\n                        alignSelf: \"center\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.PrimaryColor,\r\n                          fontSize: 14,\r\n                          textAlign: \"center\",\r\n                          width: \"100%\",\r\n                          fontWeight: \"bold\",\r\n                        }}\r\n                      >\r\n                        {showAllNotes ? \"Show Less\" : \"Show More\"}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <Text style={styles.nodata}>No Notes found.</Text>\r\n              )}\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignContent: \"center\",\r\n                alignItems: \"center\",\r\n                width: \"90%\",\r\n                alignSelf: \"center\",\r\n                marginTop: 20,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  color: Colors.black,\r\n                  fontSize: 18,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                History\r\n              </Text>\r\n            </View>\r\n            <View style={{ backgroundColor: Colors.white, marginTop: 20 }}>\r\n              {history && history.length > 0 ? (\r\n                <>\r\n                  <FlatList\r\n                    data={history.slice(0, itemsToShow)}\r\n                    scrollEnabled={false}\r\n                    renderItem={renderHistoryItem}\r\n                  />\r\n                  {history.length > 5 && (\r\n                    <TouchableOpacity\r\n                      onPress={() => setShowAllItems(!showAllItems)}\r\n                      style={{\r\n                        height: 60,\r\n                        width: \"90%\",\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: Colors.gray,\r\n                        alignItems: \"center\",\r\n                        alignContent: \"center\",\r\n                        flexDirection: \"row\",\r\n                        alignSelf: \"center\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.PrimaryColor,\r\n                          fontSize: 14,\r\n                          fontWeight: \"bold\",\r\n                          alignSelf: \"center\",\r\n                          marginTop: 20,\r\n                        }}\r\n                      >\r\n                        {showAllItems ? \"Show Less\" : \"Show More\"}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <Text style={styles.nodata}>No activity history found.</Text>\r\n              )}\r\n            </View>\r\n            {/* <View style={{ backgroundColor: Colors.white, marginTop: 20 }}>\r\n              <FlatList\r\n                data={history}\r\n                scrollEnabled={false}\r\n                renderItem={({ item }) => (\r\n                  <TouchableOpacity\r\n                    //onPress={() => navigation.navigate('MyClientsDetails')}\r\n                    style={{\r\n                      height: 60,\r\n                      width: \"90%\",\r\n                      borderBottomWidth: 1,\r\n                      borderBottomColor: Colors.gray,\r\n                      alignItems: \"center\",\r\n                      alignContent: \"center\",\r\n                      flexDirection: \"row\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    <View\r\n                      style={{\r\n                        width: \"100%\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <View\r\n                        style={{\r\n                          height: 80,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: Colors.black,\r\n                            fontSize: 16,\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        >\r\n                          {item.activity_type}\r\n                        </Text>\r\n\r\n                        <Text\r\n                          style={{\r\n                            color: Colors.black,\r\n                            fontSize: 12,\r\n                          }}\r\n                        >\r\n                          {item.activity_date}\r\n                        </Text>\r\n                      </View>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                )}\r\n                //   keyExtractor={(item) => item.id}\r\n                //  ItemSeparatorComponent={this.renderSeparator}\r\n                //   key={(item) => item.id}\r\n              />\r\n            </View> */}\r\n            {/* <View style={{ height: 50 }}></View> */}\r\n          </View>\r\n\r\n          <Modal\r\n            transparent={true}\r\n            animationType=\"slide\"\r\n            visible={modalVisible}\r\n            onRequestClose={toggleModal}\r\n          >\r\n            <View\r\n              style={{\r\n                height: \"75%\",\r\n                width: \"100%\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n                backgroundColor: Colors.white,\r\n                position: \"absolute\",\r\n                bottom: 0,\r\n                borderTopLeftRadius: 20,\r\n                borderTopRightRadius: 20,\r\n                justifyContent: \"center\",\r\n                borderWidth: 1,\r\n                borderColor: Colors.gray,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  height: 60,\r\n                  width: \"90%\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                }}\r\n                {...panResponder.panHandlers}\r\n              >\r\n                <TouchableOpacity\r\n                  onPress={() => navigation.goBack()}\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginLeft: 10,\r\n                  }}\r\n                >\r\n                  <Text style={{ fontSize: 15, color: Colors.gray }}></Text>\r\n                </TouchableOpacity>\r\n                <View\r\n                  style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: 10,\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalVisible(false)}\r\n                    style={{\r\n                      height: 5,\r\n                      width: 50,\r\n                      borderRadius: 8,\r\n                      backgroundColor: Colors.gray,\r\n                    }}\r\n                  ></TouchableOpacity>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 18,\r\n                      fontWeight: \"700\",\r\n                      color: Colors.black,\r\n                      marginTop: 10,\r\n                    }}\r\n                  >\r\n                    Add item\r\n                  </Text>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                  onPress={() => setModalVisible(false)}\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginRight: 10,\r\n                  }}\r\n                >\r\n                  <Image\r\n                    style={{\r\n                      height: 20,\r\n                      width: 20,\r\n                      resizeMode: \"contain\",\r\n                      tintColor: Colors.black,\r\n                      transform: [{ rotate: \"45deg\" }],\r\n                    }}\r\n                    source={require(\"../../../assets/plus.png\")}\r\n                  ></Image>\r\n                </TouchableOpacity>\r\n              </View>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: 1,\r\n                  backgroundColor: Colors.gray,\r\n                  marginTop: 10,\r\n                  justifyContent: \"center\",\r\n                }}\r\n              ></View>\r\n              <ScrollView\r\n                showsHorizontalScrollIndicator={false}\r\n                showsVerticalScrollIndicator={false}\r\n                style={{ width: \"95%\" }}\r\n              >\r\n                <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                      marginTop: 15,\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontSize: 15, color: Colors.black }}>\r\n                      Activity Type\r\n                    </Text>\r\n                    <Text style={{ fontSize: 12, color: Colors.black }}></Text>\r\n                  </View>\r\n\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: 50,\r\n                      marginTop: 10,\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <TextInput\r\n                      allowFontScaling={false}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        borderRadius: 8,\r\n                        height: \"100%\",\r\n                        paddingHorizontal: 15,\r\n                        color: Colors.black,\r\n                        borderColor: Colors.gray,\r\n                        borderWidth: 1,\r\n                        fontSize: 14,\r\n                        padding: 2,\r\n                      }}\r\n                      autoCorrect={false}\r\n                      returnKeyType=\"done\"\r\n                      //onChangeText={text => setID(text)}\r\n                    />\r\n                  </View>\r\n                </View>\r\n                <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                      marginTop: 15,\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontSize: 15, color: Colors.black }}>\r\n                      Activity Descripition\r\n                    </Text>\r\n                    <Text style={{ fontSize: 12, color: Colors.black }}></Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: 50,\r\n                      marginTop: 10,\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <TextInput\r\n                      allowFontScaling={false}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        borderRadius: 8,\r\n                        height: \"100%\",\r\n                        paddingHorizontal: 15,\r\n                        color: Colors.black,\r\n                        borderColor: Colors.gray,\r\n                        borderWidth: 1,\r\n                        fontSize: 14,\r\n                        padding: 2,\r\n                      }}\r\n                      autoCorrect={false}\r\n                      returnKeyType=\"done\"\r\n                    />\r\n                  </View>\r\n                </View>\r\n                <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"space-between\",\r\n                      marginTop: 15,\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontSize: 15, color: Colors.black }}>\r\n                      Due Date\r\n                    </Text>\r\n                    <Text style={{ fontSize: 12, color: Colors.black }}></Text>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: 50,\r\n                      marginTop: 10,\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <TextInput\r\n                      allowFontScaling={false}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        borderRadius: 8,\r\n                        height: \"100%\",\r\n                        paddingHorizontal: 15,\r\n                        color: Colors.black,\r\n                        borderColor: Colors.gray,\r\n                        borderWidth: 1,\r\n                        fontSize: 14,\r\n                        padding: 2,\r\n                      }}\r\n                      keyboardType=\"email-address\"\r\n                      autoCorrect={false}\r\n                      returnKeyType=\"done\"\r\n                      onChangeText={(text) => setEmail(text)}\r\n                    />\r\n                  </View>\r\n                </View>\r\n                <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 15,\r\n                      color: Colors.black,\r\n                      marginTop: 15,\r\n                    }}\r\n                  >\r\n                    Notes\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: 50,\r\n                      marginTop: 10,\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <TextInput\r\n                      allowFontScaling={false}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        borderRadius: 8,\r\n                        height: \"100%\",\r\n                        paddingHorizontal: 15,\r\n                        color: Colors.black,\r\n                        borderColor: Colors.gray,\r\n                        borderWidth: 1,\r\n                        fontSize: 14,\r\n                        padding: 2,\r\n                      }}\r\n                      autoCorrect={false}\r\n                      returnKeyType=\"done\"\r\n                      // onChangeText={text => setNickname(text)}\r\n                    />\r\n                  </View>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    width: \"95%\",\r\n                    alignSelf: \"center\",\r\n                    borderWidth: 1,\r\n                    borderColor: Colors.gray,\r\n                    marginTop: 30,\r\n                    marginBottom: 20,\r\n                  }}\r\n                ></View>\r\n                <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 15,\r\n                      color: Colors.black,\r\n                      marginTop: 15,\r\n                    }}\r\n                  >\r\n                    Completed Date\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: 50,\r\n                      marginTop: 10,\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.black,\r\n                        fontSize: 16,\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      {items.item.contact_email}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n                <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 15,\r\n                      color: Colors.black,\r\n                      marginTop: 15,\r\n                    }}\r\n                  >\r\n                    Owner\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: 50,\r\n                      marginTop: 10,\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <TextInput\r\n                      allowFontScaling={false}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        borderRadius: 8,\r\n                        height: \"100%\",\r\n                        paddingHorizontal: 15,\r\n                        color: Colors.black,\r\n                        borderWidth: 1,\r\n                        borderColor: Colors.gray,\r\n                        fontSize: 14,\r\n                        padding: 2,\r\n                      }}\r\n                      autoCorrect={false}\r\n                      returnKeyType=\"done\"\r\n                      placeholder=\"biff@bowser.com\"\r\n                      placeholderTextColor={Colors.black}\r\n                      // onChangeText={text => setLastName(text)}\r\n                    />\r\n                  </View>\r\n                </View>\r\n                <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 15,\r\n                      color: Colors.black,\r\n                      marginTop: 15,\r\n                    }}\r\n                  >\r\n                    Contact\r\n                  </Text>\r\n                  <View\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: 50,\r\n                      marginTop: 10,\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <TextInput\r\n                      allowFontScaling={false}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        borderRadius: 8,\r\n                        height: \"100%\",\r\n                        paddingHorizontal: 15,\r\n                        color: Colors.black,\r\n                        borderWidth: 1,\r\n                        borderColor: Colors.gray,\r\n                        fontSize: 14,\r\n                        padding: 2,\r\n                      }}\r\n                      keyboardType=\"number-pad\"\r\n                      autoCorrect={false}\r\n                      returnKeyType=\"done\"\r\n                      placeholderTextColor={Colors.black}\r\n                      //onChangeText={text => setMobile(text)}\r\n                    />\r\n                  </View>\r\n                </View>\r\n\r\n                <View style={{ height: 20 }}></View>\r\n              </ScrollView>\r\n              <View style={{ height: 100, width: \"100%\" }}>\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: 1,\r\n                    backgroundColor: Colors.gray,\r\n                    marginTop: 10,\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                ></View>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    width: \"90%\",\r\n                    height: 60,\r\n                    marginTop: 20,\r\n                    alignSelf: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalVisible(false)}\r\n                    style={{\r\n                      height: 35,\r\n                      width: \"45%\",\r\n                      borderRadius: 5,\r\n                      borderColor: Colors.gray,\r\n                      borderWidth: 0.5,\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontSize: 14, fontWeight: \"700\" }}>\r\n                      Cancel\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    onPress={() => setModalVisible(false)}\r\n                    style={{\r\n                      height: 35,\r\n                      width: \"45%\",\r\n                      borderRadius: 5,\r\n                      backgroundColor: Colors.PrimaryColor,\r\n\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 14,\r\n                        fontWeight: \"700\",\r\n                        color: Colors.white,\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n\r\n          {/* <View\r\n            style={{\r\n              borderWidth: 1,\r\n              width: \"95%\",\r\n              alignSelf: \"center\",\r\n              borderRadius: 5,\r\n              marginTop: 30,\r\n              borderColor: Colors.gray,\r\n            }}\r\n          ></View>\r\n          <View\r\n            style={{\r\n              borderWidth: 1,\r\n              width: \"95%\",\r\n              alignSelf: \"center\",\r\n              borderRadius: 5,\r\n              marginTop: 30,\r\n              borderColor: Colors.gray,\r\n            }}\r\n          ></View> */}\r\n          <View\r\n            style={{\r\n              width: \"95%\",\r\n              alignSelf: \"center\",\r\n              marginTop: 30,\r\n            }}\r\n          ></View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  headingmaintype: {\r\n    color: \"black\",\r\n    fontSize: 14,\r\n\r\n    marginBottom: 3,\r\n\r\n    //  width: \"100%\",\r\n  },\r\n  subheadingmaintype: {\r\n    color: \"black\",\r\n    fontSize: 14,\r\n\r\n    marginBottom: 15,\r\n    width: \"100%\",\r\n    fontWeight: \"bold\",\r\n    textTransform: \"capitalize\",\r\n    borderColor: Colors.gray,\r\n    borderWidth: 1,\r\n    padding: 12,\r\n    paddingVertical: 16,\r\n  },\r\n  subheadingmaintypeinner: {\r\n    color: \"black\",\r\n    fontSize: 14,\r\n\r\n    marginBottom: 3,\r\n    // width: \"100%\",\r\n    width: 130,\r\n    textAlign: \"right\",\r\n  },\r\n  subheadingmaintypeinnerdate: {\r\n    color: \"black\",\r\n    fontSize: 14,\r\n\r\n    marginBottom: 3,\r\n    // width: \"100%\",\r\n    width: 100,\r\n    textAlign: \"right\",\r\n  },\r\n  nodata: { textAlign: \"center\" },\r\n  mainpropertydata: {\r\n    textAlign: \"left\",\r\n    width: \"100%\",\r\n    paddingLeft: 12,\r\n    marginBottom: 9,\r\n  },\r\n  editactivity: {\r\n    marginLeft: 12,\r\n    color: Colors.PrimaryColor,\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\nexport default MyClientsDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  Alert,\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n// import ImagePicker from \"react-native-image-crop-picker\";\r\nimport { create } from \"apisauce\";\r\nconst EditProfile = () => {\r\n  const navigation = useNavigation();\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const fogotPassword = () => {\r\n    navigation.navigate(\"ForgotPassword\");\r\n  };\r\n  const _pickImage = () => {\r\n    ImagePicker.openPicker({\r\n      width: 300,\r\n      height: 400,\r\n      cropping: true,\r\n      includeBase64: true,\r\n      freeStyleCropEnabled: true,\r\n    }).then((response) => {\r\n      let source = { uri: response.path };\r\n      setAvatarSource(source);\r\n      seturiResponse(response.path);\r\n    });\r\n  };\r\n  const upadteProfile = () => {\r\n    if (name == \"\") {\r\n      Alert.alert(\"enter first name\");\r\n    } else if (lastName == \"\") {\r\n      Alert.alert(\"enter last name\");\r\n    } else if (phone == \"\") {\r\n      Alert.alert(\"enter phoneNumber\");\r\n    } else {\r\n      uploadFile();\r\n    }\r\n    uploadFile();\r\n  };\r\n  const uploadFile = () => {\r\n    const api = create({\r\n      baseURL: \"\",\r\n      headers: {},\r\n    });\r\n    let data = new FormData();\r\n    data.append(\"first_name\", name);\r\n    // data.append('custom_picture', {\r\n    //   uri: avatarSource.uri\r\n    //     ? avatarSource.uri\r\n    //     : imageUrl + itemDetail.user_photo,\r\n    //   name: 'image.jpg',\r\n    //   fileName: 'image',\r\n    //   type: 'image/jpg',\r\n    // });\r\n    data.append(\"last_name\", lastName);\r\n    data.append(\"phone\", phone);\r\n   \r\n    api\r\n      .post(\r\n        \"https://surf.topsearchrealty.com//wp-json/wp/v2/users/18\",\r\n        data,\r\n        {}\r\n      )\r\n      .then((res) => {\r\n     \r\n    \r\n        if (res.data.status == \"success\") {\r\n          //  saveImage(res.data.user.user_photo);\r\n          navigation.navigate(\"Profile\");\r\n        } else if (res.data.status == \"failure\") {\r\n          console.log(res.data.message);\r\n        } else {\r\n          console.log(\"error\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: Colors.white,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 60,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Cancel</Text>\r\n          </TouchableOpacity>\r\n          <Text style={{ fontSize: 15, color: Colors.white }}></Text>\r\n          <TouchableOpacity\r\n            onPress={() => upadteProfile()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Update</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              First Name\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setName(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Last Name\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setLastName(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Phone\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                keyboardType=\"number-pad\"\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setPhone(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Picture\r\n            </Text>\r\n            <TouchableOpacity\r\n              // onPress={() => _pickImage()}\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <View\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  alignSelf: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <Image\r\n                  style={{\r\n                    height: 30,\r\n                    width: 30,\r\n                    resizeMode: \"contain\",\r\n                    marginLeft: 10,\r\n                  }}\r\n                  source={require(\"../../../assets/uploadImage.png\")}\r\n                ></Image>\r\n\r\n                <Text\r\n                  allowFontScaling={false}\r\n                  style={{\r\n                    color: Colors.black,\r\n                    fontSize: 14,\r\n                    marginLeft: 10,\r\n                    alignSelf: \"center\",\r\n                  }}\r\n                >\r\n                  Choose an image...\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ height: 50 }}></View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { url } from \"../config/url\";\nimport { postAPI } from \"../config/apiMethod\";\n\nexport const addActivityTask = createAsyncThunk(\n  \"addActivityTask\",\n  async (payload) => {\n    const urlDynamic =\n      \" https://surf.topsearchrealty.com/wp-json/activity/addtask\";\n    try {\n      const response = await postAPI(urlDynamic, payload);\n      const { data } = response;\n      return data;\n    } catch (error) {\n      console.log(error);\n      if (error.response) {\n        console.log(\"API issue\", error.response);\n      } else if (error.request) {\n        console.log(\"API issue\", error.request);\n      } else {\n        console.log(\"API issue\", error.message);\n      }\n      throw error;\n    }\n  }\n);\n\nconst addActivityTaskSlice = createSlice({\n  name: \"addActivityTask\",\n  initialState: {\n    addActivityTaskData: [],\n    status: null,\n  },\n  extraReducers: {\n    [addActivityTask.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [addActivityTask.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.addActivityTaskData = action.payload;\n    },\n    [addActivityTask.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default addActivityTaskSlice.reducer;\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  TextInput,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { addActivityTask } from \"../../modules/addActivityTask\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport getMyClientDetails from \"../../modules/getMyClientDetails\";\r\n\r\nconst AddActivity = (props) => {\r\n  const dispatch = useDispatch();\r\n  const navigation = useNavigation();\r\n  const [selectedOption, setSelectedOption] = useState(\"note\");\r\n  const [login, setLogin] = useState(\"\");\r\n  const [notes, setNotes] = useState(\"\");\r\n  const [agentEmail, setAgentEmail] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n\r\n  const showDatePicker = () => {\r\n    setDatePickerVisibility(true);\r\n  };\r\n\r\n  const hideDatePicker = () => {\r\n    setDatePickerVisibility(false);\r\n  };\r\n\r\n  const handleOptionChange = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n  const formatDate = (date) => {\r\n    return date.toLocaleString(\"en-US\", {\r\n      timeZone: \"Asia/Kolkata\", // Set the desired timezone\r\n      hour12: true,\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    });\r\n  };\r\n  const handleConfirm = (date) => {\r\n    setSelectedDate(date);\r\n    hideDatePicker();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const userDetails = await AsyncStorage.getItem(\"userDetails\");\r\n    const parsedUserDetails = JSON.parse(userDetails);\r\n    const email = parsedUserDetails.user_email;\r\n    setAgentEmail(email);\r\n  };\r\n\r\n  const addActivity = () => {\r\n    const payload = {\r\n      client_id: props.route.params.item.id,\r\n      contact_lead_id: props.route.params.item.contact_lead_id,\r\n      activity_type: selectedOption,\r\n      activity_content: login,\r\n      activity_date: selectedDate,\r\n      activity_notes: notes,\r\n      contact_email: props.route.params.item.contact_email,\r\n      agent_email: agentEmail,\r\n    };\r\n    dispatch(addActivityTask(payload)).then((response) => {\r\n      navigation.goBack();\r\n    });\r\n  };\r\n\r\n  const onHandleClick = () => {\r\n    addActivity();\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <TouchableOpacity onPress={() => navigation.goBack()}>\r\n          <Text style={styles.headerText}>Cancel</Text>\r\n        </TouchableOpacity>\r\n        <Text style={{ fontSize: 19, fontWeight: \"bold\", color: Colors.white }}>\r\n          New Activity\r\n        </Text>\r\n        <TouchableOpacity onPress={onHandleClick}>\r\n          <Text style={styles.headerText}>Submit</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <ScrollView contentContainerStyle={styles.scrollViewContent}>\r\n        <View style={styles.content}>\r\n          <View style={styles.inputContainer}>\r\n            <Text style={styles.label}>Activity Type</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Picker\r\n                selectedValue={selectedOption}\r\n                onValueChange={handleOptionChange}\r\n                style={{\r\n                  borderRadius: 8,\r\n                  backgroundColor: Colors.gray,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                  borderColor: Colors.gray,\r\n                }}\r\n              >\r\n                <Picker.Item label=\"Note\" value=\"note\" />\r\n                <Picker.Item label=\"Call\" value=\"call\" />\r\n                <Picker.Item label=\"In-person\" value=\"inperson\" />\r\n                <Picker.Item label=\"Task\" value=\"task\" />\r\n                <Picker.Item label=\"Video call\" value=\"videocall\" />\r\n              </Picker>\r\n            </View>\r\n          </View>\r\n          <View style={styles.inputContainer}>\r\n            <Text style={styles.label}>Activity</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                onChangeText={setLogin}\r\n                value={login}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={styles.inputContainer}>\r\n            <Text style={styles.label}>Due Date</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                borderRadius: 8,\r\n                height: \"100%\",\r\n                paddingVertical: 9,\r\n                color: Colors.black,\r\n                borderColor: Colors.PrimaryColor,\r\n                backgroundColor: Colors.gray,\r\n                fontSize: 14,\r\n                padding: 2,\r\n                marginTop: 12,\r\n                paddingHorizontal: 15,\r\n                height: 55,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={showDatePicker}\r\n                style={styles.datePickerButton}\r\n              >\r\n                <Text style={styles.datePickerText}>\r\n                  {selectedDate ? formatDate(selectedDate) : \"None\"}{\" \"}\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              <DateTimePickerModal\r\n                isVisible={isDatePickerVisible}\r\n                mode=\"datetime\"\r\n                onConfirm={handleConfirm}\r\n                onCancel={hideDatePicker}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={styles.inputContainer}>\r\n            <Text style={styles.label}>Notes</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                onChangeText={setNotes}\r\n                value={notes}\r\n                multiline={true}\r\n                numberOfLines={4}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={styles.inputContainer}>\r\n            <Text style={styles.label}>Contact Email</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                value={props.route.params.item.contact_email}\r\n                editable={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={styles.inputContainer}>\r\n            <Text style={styles.label}>Owner</Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                onChangeText={setAgentEmail}\r\n                value={agentEmail}\r\n                editable={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  backgroundColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n  },\r\n  header: {\r\n    height: 60,\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: Colors.PrimaryColor,\r\n    paddingHorizontal: 10,\r\n  },\r\n  headerText: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n  },\r\n  scrollViewContent: {\r\n    flexGrow: 1,\r\n    margin: 10,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  inputContainer: {\r\n    marginBottom: 10,\r\n  },\r\n  label: {\r\n    marginTop: 5,\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n  },\r\n  pickerContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 3,\r\n  },\r\n  picker: {\r\n    height: 40,\r\n  },\r\n  textInputContainer: {\r\n    borderWidth: 1,\r\n    borderRadius: 3,\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    paddingHorizontal: 10,\r\n  },\r\n  datePickerButton: {\r\n    paddingVertical: 10,\r\n  },\r\n  datePickerText: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default AddActivity;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { url } from \"../config/url\";\nimport { postAPI } from \"../config/apiMethod\";\n\nexport const activityAddnote = createAsyncThunk(\n  \"activityAddnote\",\n  async (payload) => {\n    const urlDynamic =\n      \"https://surf.topsearchrealty.com/wp-json/activity/addnote\";\n    try {\n      const response = await postAPI(urlDynamic, payload); // Pass the payload to the postAPI function\n      const { data } = response;\n      return data;\n    } catch (error) {\n      console.log(error);\n      if (error.response) {\n        console.log(\"API issue\", error.response);\n      } else if (error.request) {\n        console.log(\"API issue\", error.request);\n      } else {\n        console.log(\"API issue\", error.message);\n      }\n      throw error;\n    }\n  }\n);\n\nconst activityAddnoteSlice = createSlice({\n  name: \"activityAddnote\",\n  initialState: {\n    activityAddnoteData: [],\n    status: null,\n  },\n  extraReducers: {\n    [activityAddnote.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [activityAddnote.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.activityAddnoteData = action.payload;\n    },\n    [activityAddnote.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default activityAddnoteSlice.reducer;\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { activityAddnote } from \"../../modules/activityAddnote\";\r\nimport moment from \"moment\";\r\nimport getMyClientDetails from \"../../modules/getMyClientDetails\";\r\n\r\n// import ImagePicker from \"react-native-image-crop-picker\";\r\n\r\nconst NewNote = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const items = props.route.params;\r\n\r\n  const navigation = useNavigation();\r\n  const [note, setNote] = useState(\"\");\r\n  const [login, setLogin] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const onhandleClick = () => {\r\n    addActivity();\r\n  };\r\n  const addActivity = () => {\r\n    const currentDateTime = moment().format(\"YYYY-MM-DD HH:mm:ss\");\r\n    setDate(currentDateTime);\r\n\r\n    const payload = {\r\n      note_client_id: items.item.id,\r\n      note_contact_lead_id: items.item.contact_lead_id,\r\n      activity_note_content: note,\r\n      note_created_date: currentDateTime,\r\n    };\r\n    dispatch(activityAddnote(payload)).then((response) => {\r\n      navigation.goBack();\r\n    });\r\n  };\r\n  const fogotPassword = () => {\r\n    navigation.navigate(\"ForgotPassword\");\r\n  };\r\n  const _pickImage = () => {\r\n    ImagePicker.openPicker({\r\n      width: 300,\r\n      height: 400,\r\n      cropping: true,\r\n      includeBase64: true,\r\n      freeStyleCropEnabled: true,\r\n    }).then((response) => {\r\n      let source = { uri: response.path };\r\n      setAvatarSource(source);\r\n      seturiResponse(response.path);\r\n    });\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ backgroundColor: Colors.PrimaryColor, flex: 1 }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: Colors.white,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 60,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                tintColor: Colors.white,\r\n              }}\r\n              source={require(\"../../../assets/back.png\")}\r\n            ></Image>\r\n          </TouchableOpacity>\r\n          <Text style={{  fontSize: 19, fontWeight: \"bold\", color: Colors.white }}>New Note</Text>\r\n          <TouchableOpacity\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                transform: [{ rotate: \"45deg\" }],\r\n              }}\r\n              source={require(\"../../../assets/plus.png\")}\r\n            ></Image>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <View\r\n              style={{\r\n                borderWidth: 1,\r\n                width: \"95%\",\r\n                alignSelf: \"center\",\r\n                borderRadius: 5,\r\n                marginTop: 20,\r\n                borderColor: Colors.gray,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  flexDirection: \"row\",\r\n                  padding: 10,\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Image\r\n                  source={{ uri: items.item.contact_image }}\r\n                  style={{\r\n                    height: 80,\r\n                    width: 80,\r\n                    borderRadius: 40,\r\n                    borderWidth:1,\r\n                    borderColor:Colors.gray\r\n                  }}\r\n                ></Image>\r\n                <View>\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.black,\r\n                      fontSize: 19,\r\n\r\n                      fontWeight: \"bold\",\r\n                      marginLeft: 20,\r\n                    }}\r\n                  >\r\n                    {items.item.contact_name}\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.black,\r\n                      fontSize: 14,\r\n                      marginTop: 5,\r\n                      marginLeft: 20,\r\n                    }}\r\n                  >\r\n                    {items.item.contact_name}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                marginTop: 40,\r\n                width: \"95%\",\r\n                alignSelf: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontSize: 16, color: Colors.black, fontWeight: \"700\" }}\r\n              >\r\n                Note\r\n              </Text>\r\n              <Text style={{ fontSize: 12, color: \"#950000\" }}>\r\n                Required\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 150,\r\n                marginTop: 10,\r\n                alignSelf: \"center\",\r\n                //justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                //allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  paddingVertical:15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                  //backgroundColor: Colors.gray,\r\n                  borderColor: Colors.gray,\r\n                  borderWidth: 1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                  alignItems:\"flex-start\",\r\n                  textAlignVertical: 'top'\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                multiline={true}\r\n                placeholder=\"Enter your note here....\"\r\n                onChangeText={(text) => setNote(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              width: \"95%\",\r\n              height: 60,\r\n              marginTop: 20,\r\n              alignItems:\"flex-start\",\r\n              justifyContent: \"flex-end\"\r\n            }}\r\n          >\r\n            <TouchableOpacity\r\n              style={{\r\n                height: 35,\r\n                width: \"30%\",\r\n                borderRadius: 5,\r\n                backgroundColor: Colors.PrimaryColor,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n              onPress={onhandleClick}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: 14,\r\n                  //fontWeight: \"bold\",\r\n                  color: Colors.white,\r\n                }}\r\n              >\r\n                Submit\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ height: 50 }}></View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default NewNote;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n// import ImagePicker from \"react-native-image-crop-picker\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { updateContact } from \"../../modules/deleteContact\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst EditClientsDetails = (props) => {\r\n  const navigation = useNavigation();\r\n  const dispatch = useDispatch();\r\n  const [id, setID] = useState(\"\");\r\n  const [login, setLogin] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [comments, setComments] = useState(\"\");\r\n  const [avatarSource, setAvatarSource] = useState(null);\r\n  const [uriResponse, setUriResponse] = useState(null);\r\n  const fogotPassword = () => {\r\n    navigation.navigate(\"ForgotPassword\");\r\n  };\r\n  const item = props.route.params.item;\r\n  useEffect(() => {\r\n    setName(item.contact_full_name);\r\n    setEmail(item.contact_email);\r\n    setPhone(item.contact_number);\r\n    setID(item.linked_lead);\r\n  }, [item]);\r\n\r\n  const onHandleClick = () => {\r\n    const payload = {\r\n      contactid: item.id,\r\n      contact_name: name,\r\n      contact_number: phone,\r\n      contactimg: uriResponse,\r\n    };\r\n    dispatch(updateContact(payload))\r\n      .then((res) => {\r\n        console.log(\"Contact update successfully\");\r\n        navigation.navigate(\"MyClients\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error deleting contact:\", error);\r\n      });\r\n  };\r\n\r\n  const _pickImage = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access the camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n      base64: true, // Request base64 encoding\r\n    });\r\n\r\n    if (!pickerResult.cancelled) {\r\n      let base64Image = `data:image/png;base64,${pickerResult.base64}`;\r\n      let filename = `lokal-with_board-(1).png`;\r\n      let tmpName = `/tmp/phpr2QrsB`;\r\n      let fileArray = [\r\n        {\r\n          name: filename,\r\n          tmp_name: tmpName,\r\n          // Adjust the type according to your requirements\r\n        },\r\n      ];\r\n      setUriResponse(fileArray);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ backgroundColor: Colors.PrimaryColor, flex: 1 }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: Colors.white,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 60,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Cancel</Text>\r\n          </TouchableOpacity>\r\n          <Text style={{  fontSize: 19, fontWeight: \"bold\", color: Colors.white }}>Edit Client</Text>\r\n          <TouchableOpacity\r\n            onPress={onHandleClick}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Submit</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                marginTop: 15,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 15, color: Colors.black }}>\r\n                Full_Name\r\n              </Text>\r\n              <Text style={{ fontSize: 12, color: \"#950000\" }}>\r\n                Required\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.gray,\r\n                  borderWidth: 1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={name}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setName(text)}\r\n\r\n                //onChangeText={text => setID(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          {/* <View style={{width: '95%', alignSelf: 'center'}}>\r\n            <View\r\n              style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                marginTop: 15,\r\n              }}>\r\n              <Text style={{fontSize: 15, color: Colors.black}}>\r\n                Company Name\r\n              </Text>\r\n              <Text style={{fontSize: 12, color: Colors.black}}></Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: '100%',\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: 'center',\r\n              }}>\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: '100%',\r\n                  borderRadius: 8,\r\n                  height: '100%',\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.gray,\r\n                  borderWidth: 1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n              />\r\n            </View>\r\n          </View> */}\r\n\r\n          {/* <View style={{width: '95%', alignSelf: 'center'}}>\r\n            <View\r\n              style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n                marginTop: 15,\r\n              }}>\r\n              <Text style={{fontSize: 15, color: Colors.black}}>Job_Title</Text>\r\n              <Text style={{fontSize: 12, color: Colors.black}}></Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: '100%',\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: 'center',\r\n              }}>\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: '100%',\r\n                  borderRadius: 8,\r\n                  height: '100%',\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.gray,\r\n                  borderWidth: 1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                keyboardType=\"email-address\"\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                //onChangeText={text => setEmail(text)}\r\n              />\r\n            </View>\r\n          </View> */}\r\n\r\n          {/* <View style={{width: '95%', alignSelf: 'center'}}>\r\n            <Text style={{fontSize: 15, color: Colors.black, marginTop: 15}}>\r\n              Client Type\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: '100%',\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: 'center',\r\n              }}>\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: '100%',\r\n                  borderRadius: 8,\r\n                  height: '100%',\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.gray,\r\n                  borderWidth: 1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={text => setNickname(text)}\r\n              />\r\n            </View>\r\n          </View> */}\r\n\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Email\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderWidth: 1,\r\n                  borderColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={email}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                placeholderTextColor={Colors.black}\r\n                onChangeText={(text) => setEmail(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Phone\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderWidth: 1,\r\n                  borderColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={phone}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                placeholderTextColor={Colors.black}\r\n                onChangeText={(text) => setPhone(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          {/* \r\n          <View style={{width: '95%', alignSelf: 'center'}}>\r\n            <Text style={{fontSize: 15, color: Colors.black, marginTop: 15}}>\r\n              Linkedin\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: '100%',\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: 'center',\r\n              }}>\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: '100%',\r\n                  borderRadius: 8,\r\n                  height: '100%',\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderWidth: 1,\r\n                  borderColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                placeholder=\"biff@bowser.com\"\r\n                placeholderTextColor={Colors.black}\r\n                //onChangeText={text => setLastName(text)}\r\n              />\r\n            </View>\r\n          </View> */}\r\n\r\n          {/* <View style={{width: '95%', alignSelf: 'center'}}>\r\n            <Text style={{fontSize: 15, color: Colors.black, marginTop: 15}}>\r\n              Twitter\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: '100%',\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: 'center',\r\n              }}>\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: '100%',\r\n                  borderRadius: 8,\r\n                  height: '100%',\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderWidth: 1,\r\n                  borderColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                placeholder=\"biff@bowser.com\"\r\n                placeholderTextColor={Colors.black}\r\n                //onChangeText={text => setLastName(text)}\r\n              />\r\n            </View>\r\n          </View> */}\r\n\r\n          {/* <View style={{width: '95%', alignSelf: 'center'}}>\r\n            <Text style={{fontSize: 15, color: Colors.black, marginTop: 15}}>\r\n              Role\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: '100%',\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: 'center',\r\n              }}>\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: '100%',\r\n                  borderRadius: 8,\r\n                  height: '100%',\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderWidth: 1,\r\n                  borderColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                placeholder=\"Decision Maker\"\r\n                placeholderTextColor={Colors.black}\r\n                //onChangeText={text => setLastName(text)}\r\n              />\r\n            </View>\r\n          </View> */}\r\n\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Client Type\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                editable={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderWidth: 1,\r\n                  borderColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={id}\r\n                keyboardType=\"number-pad\"\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                placeholderTextColor={Colors.black}\r\n                //onChangeText={text => setMobile(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n\r\n          {/* <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Comments\r\n            </Text>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 100,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderWidth: 1,\r\n                  borderColor: Colors.gray,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                multiline={true}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                placeholderTextColor={Colors.black}\r\n                onChangeText={(text) => setComments(text)}\r\n              />\r\n            </View>\r\n          </View> */}\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <Text style={{ fontSize: 15, color: Colors.black, marginTop: 15 }}>\r\n              Profile Picture\r\n            </Text>\r\n            <TouchableOpacity onPress={_pickImage}>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: 50,\r\n                  marginTop: 10,\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    width: \"100%\",\r\n                    borderRadius: 8,\r\n                    height: \"100%\",\r\n                    color: Colors.black,\r\n                    borderColor: Colors.gray,\r\n                    backgroundColor: Colors.white,\r\n                    borderWidth: 1,\r\n                    fontSize: 14,\r\n                    alignSelf: \"center\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                >\r\n                   <Image\r\n                  style={{\r\n                    height: 30,\r\n                    width: 30,\r\n                    resizeMode: \"contain\",\r\n                    marginLeft: 10,\r\n                  }}\r\n                  source={require(\"../../../assets/uploadImage.png\")}\r\n                ></Image>\r\n\r\n                  <Text\r\n                    style={{\r\n                      color: Colors.black,\r\n                      fontSize: 14,\r\n                      marginLeft: 10,\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    Choose an image...\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{ height: 50 }}></View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default EditClientsDetails;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Platform,\r\n  FlatList,\r\n} from \"react-native\";\r\n\r\nimport Images from \"../../utils/Images\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nconst screenHeight = Dimensions.get(\"window\").height;\r\nconst screenWidth = Dimensions.get(\"window\").width;\r\n\r\nconst fontSizeRatio = screenHeight / 1000;\r\nconst viewSizeRatio = screenHeight / 1000;\r\nconst imageSizeRation = screenHeight / 1000;\r\n\r\nconst images = [\r\n  {\r\n    image: Images.favroites,\r\n    title: \"123 main St. | Boynton Beach\",\r\n    navigation:\r\n      \"Which apartment, could you send me the link plaese the one you said\",\r\n    time: \"8:12 am\",\r\n  },\r\n  {\r\n    image: Images.favroites,\r\n    title: \"321  St. | Boynton Beach\",\r\n    navigation:\r\n      \"Which apartment, could you send me the link plaese the one you said\",\r\n    time: \"Apr 13\",\r\n  },\r\n  {\r\n    image: Images.favroites,\r\n    title: \"100 Ocean St. | Boynton Beach\",\r\n    navigation:\r\n      \"Which apartment, could you send me the link plaese the one you said\",\r\n    time: \"Apr 12\",\r\n  },\r\n  {\r\n    image: Images.favroites,\r\n    title: \"123 main St. | Boynton Beach\",\r\n    navigation:\r\n      \"Which apartment, could you send me the link plaese the one you said\",\r\n    time: \"8:12 am\",\r\n  },\r\n  {\r\n    image: Images.favroites,\r\n    title: \"321  St. | Boynton Beach\",\r\n    navigation:\r\n      \"Which apartment, could you send me the link plaese the one you said\",\r\n    time: \"Apr 13\",\r\n  },\r\n  {\r\n    image: Images.favroites,\r\n    title: \"100 Ocean St. | Boynton Beach\",\r\n    navigation:\r\n      \"Which apartment, could you send me the link plaese the one you said\",\r\n    time: \"Apr 12\",\r\n  },\r\n  {\r\n    image: Images.favroites,\r\n    title: \"123 main St. | Boynton Beach\",\r\n    navigation:\r\n      \"Which apartment, could you send me the link plaese the one you said\",\r\n    time: \"8:12 am\",\r\n  },\r\n  {\r\n    image: Images.favroites,\r\n    title: \"321  St. | Boynton Beach\",\r\n    navigation:\r\n      \"Which apartment, could you send me the link plaese the one you said\",\r\n    time: \"Apr 13\",\r\n  },\r\n  {\r\n    image: Images.favroites,\r\n    title: \"100 Ocean St. | Boynton Beach\",\r\n    navigation:\r\n      \"Which apartment, could you send me the link plaese the one you said\",\r\n    time: \"Apr 12\",\r\n  },\r\n  {\r\n    image: Images.favroites,\r\n    title: \"123 main St. | Boynton Beach\",\r\n    navigation:\r\n      \"Which apartment, could you send me the link plaese the one you said\",\r\n    time: \"8:12 am\",\r\n  },\r\n  {\r\n    image: Images.favroites,\r\n    title: \"321  St. | Boynton Beach\",\r\n    navigation:\r\n      \"Which apartment, could you send me the link plaese the one you said\",\r\n    time: \"Apr 13\",\r\n  },\r\n  {\r\n    image: Images.favroites,\r\n    title: \"100 Ocean St. | Boynton Beach\",\r\n    navigation:\r\n      \"Which apartment, could you send me the link plaese the one you said\",\r\n    time: \"Apr 12\",\r\n  },\r\n];\r\n\r\nconst Documents = () => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const [adress, setAddres] = useState(\"\");\r\n  const [index, setIndex] = useState(true);\r\n  const flatListRef = useRef(null);\r\n  const navigation = useNavigation();\r\n  // useEffect(() => {\r\n  //   Orientation.lockToPortrait();\r\n  //   return () => {\r\n  //     Orientation.unlockAllOrientations();\r\n  //   };\r\n  // }, []);\r\n\r\n  const renderItem = ({ item, index }) => (\r\n    <View style={styles.slideOuter}>\r\n      <TouchableOpacity\r\n        style={{\r\n          width: \"95%\",\r\n          alignItems: \"center\",\r\n          height: 60,\r\n          borderColor: Colors.BorderColor,\r\n          borderWidth: 1,\r\n          borderRadius: 8,\r\n          borderLeftWidth: index == 0 ? 4 : null,\r\n          borderLeftColor: index == 0 ? Colors.PrimaryColor : null,\r\n          justifyContent: \"center\",\r\n          backgroundColor: index == 0 ? \"#f5f9fc\" : null,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            width: \"95%\",\r\n            height: 40,\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: 16,\r\n              marginLeft: 5,\r\n              color: Colors.textColorLight,\r\n            }}\r\n          >\r\n            {item.title}\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              fontSize: 12,\r\n              color: Colors.textColorLight,\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 8,\r\n            }}\r\n          >\r\n            {item.time}\r\n          </Text>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            width: \"95%\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: 10,\r\n              color: Colors.textColorLight,\r\n            }}\r\n          >\r\n            {item.navigation}\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View\r\n        style={{ height: \"100%\", width: \"100%\", backgroundColor: Colors.white }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 40,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                tintColor: Colors.white,\r\n              }}\r\n              source={Images.back}\r\n            ></Image>\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Back</Text>\r\n          </TouchableOpacity>\r\n          <Text style={{ fontSize: 15, color: Colors.white }}>Documents</Text>\r\n          <View\r\n            //onPress={() => navigation.navigate('AddContacts')}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Image\r\n              style={{\r\n                height: 15,\r\n                width: 15,\r\n                resizeMode: \"contain\",\r\n                tintColor: Colors.white,\r\n              }}\r\n              //source={Images.plus}\r\n            ></Image>\r\n          </View>\r\n        </View>\r\n        <View\r\n          style={{\r\n            marginTop: 5,\r\n            height: \"100%\",\r\n            backgroundColor: Colors.white,\r\n          }}\r\n        >\r\n          <FlatList\r\n            data={images}\r\n            keyExtractor={(item) => item.id}\r\n            renderItem={renderItem}\r\n            ListFooterComponent={<View style={{ height: 50 }}></View>}\r\n          />\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.PrimaryColor,\r\n  },\r\n  slideOuter: {\r\n    width: screenWidth,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 5,\r\n  },\r\n\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 20,\r\n  },\r\n  button: {\r\n    padding: 10,\r\n    backgroundColor: \"blue\",\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  pagination: {\r\n    position: \"absolute\",\r\n    bottom: 20,\r\n    alignSelf: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  paginationDot: {\r\n    width: 10,\r\n    height: 10,\r\n    borderRadius: 5,\r\n    backgroundColor: \"gray\",\r\n    marginHorizontal: 5,\r\n  },\r\n  paginationDotActive: {\r\n    backgroundColor: \"blue\",\r\n  },\r\n  //fliter\r\n  filter: {\r\n    height: 60,\r\n  },\r\n});\r\n\r\nexport default Documents;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  FlatList,\r\n  ActivityIndicator,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { getFavoriteProperties } from \"../../modules/getFavoriteProperties\";\r\nimport { getSearchProperties } from \"../../modules/getSearchProperties\";\r\nimport { getSearchhistory } from \"../../modules/getSearchHistory\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Activity from \"../../components/Activity\";\r\n\r\nconst PropertiesViewedByLeads = () => {\r\n  const navigation = useNavigation();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [historyData, setHistoryData] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const [activity, setActivity] = useState(false);\r\n  const [searchView, setSearchView] = useState(true);\r\n  useEffect(() => {\r\n    getAllProperties();\r\n    getAllHistory();\r\n  }, []);\r\n  const getAllProperties = () => {\r\n    dispatch(getFavoriteProperties()).then((response) => {\r\n      //const newData = [...data, ...response.payload];\r\n      setData(response.payload);\r\n      setActivity(true);\r\n      setLoading(false);\r\n      setIsRefreshing(false);\r\n      setSearchView(true);\r\n    });\r\n  };\r\n\r\n  const getAllHistory = () => {\r\n    dispatch(getSearchhistory()).then((response) => {\r\n      setHistoryData(response.payload);\r\n    });\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    if (!loading) {\r\n      setLoading(true);\r\n      getAllProperties();\r\n    }\r\n  };\r\n  const getSearchPropertiesApiCall = () => {\r\n    if (search != \"\") {\r\n      dispatch(getSearchProperties(search)).then((response) => {\r\n        setData(response.payload);\r\n        setActivity(true);\r\n      });\r\n    } else {\r\n      getAllProperties();\r\n    }\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      {activity ? (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: Colors.white,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              height: 40,\r\n              width: \"100%\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              backgroundColor: Colors.PrimaryColor,\r\n            }}\r\n          >\r\n            <TouchableOpacity\r\n              onPress={() => (\r\n                navigation.goBack(), setSearchView(true), setSearch(\"\")\r\n              )}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginLeft: 10,\r\n              }}\r\n            >\r\n              <Image\r\n                style={{\r\n                  height: 15,\r\n                  width: 15,\r\n                  resizeMode: \"contain\",\r\n                  tintColor: Colors.white,\r\n                }}\r\n                source={Images.back}\r\n              ></Image>\r\n              <Text style={{ fontSize: 15, color: Colors.white }}>Back</Text>\r\n            </TouchableOpacity>\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>\r\n              PropertiesViewedByLeads\r\n            </Text>\r\n            <TouchableOpacity\r\n              onPress={() => navigation.navigate(\"AddProperties\")}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginRight: 10,\r\n              }}\r\n            >\r\n              <Image\r\n                style={{\r\n                  height: 15,\r\n                  width: 15,\r\n                  resizeMode: \"contain\",\r\n                  tintColor: Colors.white,\r\n                }}\r\n                source={Images.plus}\r\n              ></Image>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View\r\n            style={{\r\n              height: 80,\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: Colors.PrimaryColor,\r\n              position: \"relative\",\r\n              zIndex: 9,\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                backgroundColor: Colors.buttonColor,\r\n                borderRadius: 5,\r\n                width: \"92%\",\r\n                height: 50,\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <TouchableOpacity onPress={() => getSearchPropertiesApiCall()}>\r\n                <Image\r\n                  source={Images.search}\r\n                  style={{\r\n                    height: 20,\r\n                    width: 20,\r\n                    marginLeft: 10,\r\n                    tintColor: Colors.white,\r\n                  }}\r\n                ></Image>\r\n              </TouchableOpacity>\r\n\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                placeholder=\"Search\"\r\n                value={search}\r\n                placeholderTextColor={Colors.white}\r\n                onTouchStart={() => setSearchView(false)}\r\n                onChangeText={(search) =>\r\n                  getSearchPropertiesApiCall(\r\n                    setSearch(search),\r\n                    setSearchView(false)\r\n                  )\r\n                }\r\n                style={{\r\n                  color: Colors.white,\r\n                  fontSize: 18,\r\n                  marginLeft: 10,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              ></TextInput>\r\n            </View>\r\n            {!searchView ? (\r\n              <View\r\n                style={{\r\n                  height: 160,\r\n                  width: \"92%\",\r\n                  backgroundColor: Colors.white,\r\n                  position: \"absolute\",\r\n                  top: 160 / 2 - 15,\r\n                  zIndex: 99,\r\n                }}\r\n              >\r\n                <FlatList\r\n                  data={historyData}\r\n                  renderItem={({ item }) => (\r\n                    <TouchableOpacity\r\n                      onPress={() => (\r\n                        setSearch(item.post_title),\r\n                        setSearchView(true),\r\n                        getSearchPropertiesApiCall()\r\n                      )}\r\n                      style={{\r\n                        height: 30,\r\n                        width: \"96%\",\r\n                        alignSelf: \"center\",\r\n                        alignItems: \"center\",\r\n                        alignContent: \"center\",\r\n                        flexDirection: \"row\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          color: Colors.black,\r\n                          fontSize: 14,\r\n                        }}\r\n                      >\r\n                        {item.post_title}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                  //   keyExtractor={(item) => item.id}\r\n                  //  ItemSeparatorComponent={this.renderSeparator}\r\n                  //   key={(item) => item.id}\r\n                />\r\n              </View>\r\n            ) : null}\r\n          </View>\r\n\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"space-between\",\r\n              position: \"relative\",\r\n              zIndex: 1,\r\n            }}\r\n          >\r\n            <FlatList\r\n              data={data}\r\n              extraData={data}\r\n              numColumns={2}\r\n              ListFooterComponent={() => <View style={{ height: 200 }}></View>}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  activeOpacity={1}\r\n                  onPress={() =>\r\n                    navigation.navigate(\"PropertiesDetails\", { id: item.id })\r\n                  }\r\n                  style={{\r\n                    maxHeight: 300,\r\n                    margin: \"2.5%\",\r\n                    width: \"45%\",\r\n                  }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      height: \"70%\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      source={\r\n                        item.images.large == undefined ||\r\n                        item.images.large == \"\"\r\n                          ? Images[1]\r\n                          : { uri: item.images.large }\r\n                      }\r\n                      style={{\r\n                        height: \"100%\",\r\n                        width: \"100%\",\r\n                        borderRadius: 20,\r\n                        backgroundColor: Colors.gray,\r\n                      }}\r\n                    ></Image>\r\n                  </View>\r\n                  <View\r\n                    style={{\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.black,\r\n                        fontSize: 16,\r\n                        marginTop: 10,\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      {item.title}\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        color: Colors.black,\r\n                        fontSize: 12,\r\n                      }}\r\n                    >\r\n                      $ {item.originallistprice}\r\n                    </Text>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              )}\r\n              keyExtractor={(item) => item.id}\r\n              // onTouchStart={handleLoad}\r\n              onRefresh={handleRefresh}\r\n              refreshing={loading}\r\n              // onEndReached={handleLoadMore}\r\n              // onEndReachedThreshold={0.1}\r\n            />\r\n          </View>\r\n        </View>\r\n      ) : (\r\n        <Activity />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default PropertiesViewedByLeads;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  ScrollView,\r\n  Linking,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { getProperties } from \"../../modules/getProperties\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Activity from \"../../components/Activity\";\r\nconst PropertiesViewed = (props) => {\r\n  const navigation = useNavigation();\r\n  //const id = props.route.params.id;\r\n  const dispatch = useDispatch();\r\n  const [activity, setActivity] = useState(true);\r\n  useEffect(() => {\r\n    //getPropertiesViewedApiCall();\r\n  }, []);\r\n  const [data, setdata] = useState([]);\r\n  const getPropertiesViewedApiCall = () => {\r\n    dispatch(getProperties(id)).then((response) => {\r\n      setdata(response.payload);\r\n      setActivity(true);\r\n    });\r\n  };\r\n  const makePhoneCall = () => {\r\n    let phoneNumber = \"512458790\";\r\n    Linking.openURL(`tel:${phoneNumber}`);\r\n  };\r\n  const sendEmail = () => {\r\n    let recipient = \"example@example.com\";\r\n    let subject = \"Subject of email\";\r\n    let body = \"Body of email\";\r\n    Linking.openURL(`mailto:${recipient}?subject=${subject}&body=${body}`);\r\n  };\r\n\r\n  const sendSMS = () => {\r\n    let phoneNumber = \"512458790\";\r\n    let message = \"Hello from my app!\";\r\n    Linking.openURL(`sms:${phoneNumber}`);\r\n  };\r\n  const goToMap = () => {\r\n    let latitude = data.property_latitude;\r\n    let longitude = data.property_longitude;\r\n    let label = \"San Francisco\";\r\n    Linking.openURL(`geo:${latitude},${longitude}?q=${label}`);\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: Colors.PrimaryColor }}>\r\n      {activity ? (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: Colors.white,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              height: 60,\r\n              width: \"100%\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              backgroundColor: Colors.PrimaryColor,\r\n            }}\r\n          >\r\n            <TouchableOpacity\r\n              onPress={() => navigation.goBack()}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginLeft: 10,\r\n              }}\r\n            >\r\n              <Image\r\n                style={{\r\n                  height: 15,\r\n                  width: 15,\r\n                  resizeMode: \"contain\",\r\n                  tintColor: Colors.white,\r\n                }}\r\n                source={Images.back}\r\n              ></Image>\r\n              <Text style={{ fontSize: 15, color: Colors.white }}>Back</Text>\r\n            </TouchableOpacity>\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>\r\n              5686 Enclave Drive | Mangonia Park\r\n            </Text>\r\n            <View\r\n              // onPress={() => navigation.navigate('DeletePropertiy')}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginRight: 10,\r\n              }}\r\n            >\r\n              <Image\r\n                style={{\r\n                  height: 15,\r\n                  width: 15,\r\n                  resizeMode: \"contain\",\r\n                  tintColor: Colors.white,\r\n                }}\r\n              ></Image>\r\n            </View>\r\n          </View>\r\n          <ScrollView>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <View style={{ marginTop: 20 }}>\r\n                <Image\r\n                  //source={{uri: data.featured_image_src}}\r\n                  source={Images[1]}\r\n                  style={{ height: 120, width: 120, borderRadius: 60 }}\r\n                ></Image>\r\n              </View>\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  marginTop: 20,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: Colors.black,\r\n                    fontSize: 22,\r\n                    fontWeight: \"bold\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {data.title}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    color: Colors.black,\r\n                    fontSize: 16,\r\n                    marginTop: 10,\r\n                  }}\r\n                >\r\n                  $ 4,499,000\r\n                </Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                borderBottomWidth: 1,\r\n                borderColor: Colors.gray,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                Favorited on\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                2023-01-20 8:03:34\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                borderBottomWidth: 1,\r\n                borderColor: Colors.gray,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                Days on Market\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>319</Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                borderBottomWidth: 1,\r\n                borderColor: Colors.gray,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                Current Price\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                $ 4,499,000\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                borderBottomWidth: 1,\r\n                borderColor: Colors.gray,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                Original Price\r\n              </Text>\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                $ 4,599,000\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"95%\",\r\n                height: 60,\r\n                borderBottomWidth: 1,\r\n                borderColor: Colors.gray,\r\n                alignSelf: \"center\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 16, color: Colors.black }}>\r\n                Link to property\r\n              </Text>\r\n              <Text\r\n                onPress={() =>\r\n                  Linking.openURL(\"https://surf.topsearchrealty.com/\")\r\n                }\r\n                style={{ fontSize: 16, color: Colors.PrimaryColor }}\r\n              >\r\n                https://surf.topsearchrealty.com/\r\n              </Text>\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              //onPress={() => navigation.navigate('PropertiesViewedByLeads')}\r\n              style={{\r\n                height: 35,\r\n                width: \"90%\",\r\n                borderRadius: 5,\r\n                marginTop: 20,\r\n                backgroundColor: Colors.PrimaryColor,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                alignSelf: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: 14,\r\n                  fontWeight: \"bold\",\r\n                  color: Colors.white,\r\n                }}\r\n              >\r\n                Transaction Contacts\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              //onPress={() => navigation.navigate('PropertiesViewedByLeads')}\r\n              style={{\r\n                height: 35,\r\n                width: \"90%\",\r\n                borderRadius: 5,\r\n                marginTop: 20,\r\n                backgroundColor: Colors.PrimaryColor,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                alignSelf: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: 14,\r\n                  fontWeight: \"bold\",\r\n                  color: Colors.white,\r\n                }}\r\n              >\r\n                Prepare Contracts\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              //onPress={() => navigation.navigate('PropertiesViewedByLeads')}\r\n              style={{\r\n                height: 35,\r\n                width: \"90%\",\r\n                borderRadius: 5,\r\n                marginTop: 20,\r\n                backgroundColor: Colors.PrimaryColor,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                alignSelf: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: 14,\r\n                  fontWeight: \"bold\",\r\n                  color: Colors.white,\r\n                }}\r\n              >\r\n                Transaction Coordinator\r\n              </Text>\r\n            </TouchableOpacity>\r\n\r\n            <View style={{ height: 50 }}></View>\r\n          </ScrollView>\r\n        </View>\r\n      ) : (\r\n        <Activity />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default PropertiesViewed;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { postAPI } from \"../config/apiMethod\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n// Async thunk action creator for updating a contact\nexport const updateActivity = async (payload) => {\n    const url = \"https://surf.topsearchrealty.com/wp-json/activity/editdisposition\";\n    try {\n      const response = await postAPI(url, payload); \n      console.log(response);// Pass the payload to the postAPI function\n      const { data } = response;\n      return data;\n    } catch (error) {\n      console.log(error);\n      if (error.response) {\n        console.log(\"API issue\", error.response);\n      } else if (error.request) {\n        console.log(\"API issue\", error.request);\n      } else {\n        console.log(\"API issue\", error.message);\n      }\n      throw error;\n    }\n  }\n\n\nexport default updateActivity;\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  Switch,\r\n  StyleSheet,\r\n} from \"react-native\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Colors from \"../../utils/Colors\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Images from \"../../utils/Images\";\r\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\r\n// import ImagePicker from \"react-native-image-crop-picker\";\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport updateActivity from \"../../modules/editAcitivity\";\r\n\r\nconst EditActivity = (props) => {\r\n  const navigation = useNavigation();\r\n  const [ActivityType, setActivityType] = useState(\"\");\r\n  const [ActivityDispositionNotes, setActivityDispositionNotes] = useState(\"\");\r\n  const [ActivityNextDisposition, setActivityNextDisposition] = useState(\"\");\r\n  const [ActivityNextDispositionNote, setActivityNextDispositionNotes] =\r\n    useState(\"\");\r\n  const [ActivityNextDispositionDate, setActivityNextDispositionDate] =\r\n    useState(\"\");\r\n  const [ActivityDisposition, setActivityDisposition] = useState(\"\");\r\n  const [taskId, setTaskId] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const fogotPassword = () => {\r\n    navigation.navigate(\"ForgotPassword\");\r\n  };\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n  const [isEnabled, setIsEnabled] = useState(false);\r\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState);\r\n  console.log(props.route.params);\r\n  const item = props.route.params.item;\r\n  const isFocused = useIsFocused();\r\n  useEffect(() => {\r\n    setActivityType(item.activity_type);\r\n    setActivityDispositionNotes(item.activity_notes);\r\n    setActivityNextDisposition(item.activity_next_disposition);\r\n    setActivityNextDispositionNotes(item.next_disposition_notes);\r\n    setActivityNextDispositionDate(item.next_disposition_date);\r\n    setActivityDisposition(item.activity_disposition);\r\n    setTaskId(item.task_id);\r\n  }, [item]);\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n    }\r\n  }, [isFocused]);\r\n  console.log(ActivityType, \"tyope\");\r\n  \r\n  const showDatePicker = () => {\r\n    setDatePickerVisibility(true);\r\n  };\r\n\r\n  const hideDatePicker = () => {\r\n    setDatePickerVisibility(false);\r\n  };\r\n  const formatDate = (date) => {\r\n    return date.toLocaleString(\"en-US\", {\r\n      timeZone: \"Asia/Kolkata\", // Set the desired timezone\r\n      hour12: true,\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    });\r\n  };\r\n  const handleConfirm = (date) => {\r\n    setSelectedDate(date);\r\n    hideDatePicker();\r\n  };\r\n  const onHandleClick = () => {\r\n    const payload = {\r\n      task_id: taskId,\r\n      activity_type: ActivityType,\r\n      activity_disposition: ActivityDisposition,\r\n      activity_disposition_notes: ActivityDispositionNotes,\r\n      activity_next_disposition: ActivityNextDisposition,\r\n      next_disposition_notes: ActivityNextDispositionNote,\r\n      next_disposition_date: ActivityNextDispositionDate,\r\n    };\r\n\r\n    updateActivity(payload)\r\n      .then((response) => {\r\n        console.log(response);\r\n        navigation.goBack()\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error updating activity:', error);\r\n      });\r\n  };\r\n  return (\r\n    <SafeAreaView style={{ backgroundColor: Colors.PrimaryColor, flex: 1 }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: Colors.white,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: 60,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.PrimaryColor,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => navigation.goBack()}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Cancel</Text>\r\n          </TouchableOpacity>\r\n          <Text style={{ fontSize: 19, fontWeight: \"bold\", color: Colors.white  }}>\r\n            Activity Details\r\n          </Text>\r\n          <TouchableOpacity\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n            onPress={onHandleClick}\r\n          >\r\n            <Text style={{ fontSize: 15, color: Colors.white }}>Submit</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                marginTop: 15,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 15, color: Colors.black }}>\r\n                Activity Type\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.gray,\r\n                  borderWidth: 1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={ActivityType}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setActivityType(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                marginTop: 15,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 15, color: Colors.black }}>\r\n                Activity Disposition\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.gray,\r\n                  borderWidth: 1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={ActivityDisposition}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setActivityDisposition(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                marginTop: 15,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 15, color: Colors.black }}>\r\n                Activity Notes\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.gray,\r\n                  borderWidth: 1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={ActivityDispositionNotes}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setActivityDispositionNotes(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                marginTop: 15,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 15, color: Colors.black }}>\r\n                Activity Next Disposition\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.gray,\r\n                  borderWidth: 1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={ActivityNextDisposition}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setActivityNextDisposition(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"100%\", alignSelf: \"center\" }}>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                marginTop: 15,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 15, color: Colors.black, paddingHorizontal:12}}>\r\n                Next Disposition Date\r\n              </Text>\r\n            </View>\r\n            <View style={styles.inputContainer}>\r\n              <View\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingVertical: 9,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.PrimaryColor,\r\n                 // backgroundColor: Colors.gray,\r\n                 borderColor: Colors.gray,\r\n                  borderWidth: 1,\r\n                  fontSize: 14,\r\n                  paddingHorizontal: 15,\r\n                  height: 55,\r\n                  paddingTop:17\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  onPress={showDatePicker}\r\n                  style={styles.datePickerButton}\r\n                >\r\n                  <Text style={styles.datePickerText}>\r\n                    {selectedDate ? formatDate(selectedDate) : \"None\"}{\" \"}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n\r\n                <DateTimePickerModal\r\n                  isVisible={isDatePickerVisible}\r\n                  mode=\"datetime\"\r\n                  onConfirm={handleConfirm}\r\n                  onCancel={hideDatePicker}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    borderRadius: 8,\r\n                    height: \"100%\",\r\n                    paddingHorizontal: 15,\r\n                    color: Colors.black,\r\n                    borderColor: Colors.PrimaryColor,\r\n                    backgroundColor: Colors.gray,\r\n                    fontSize: 14,\r\n                    padding: 2,\r\n                  }}\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View style={{ width: \"95%\", alignSelf: \"center\" }}>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                marginTop: 15,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 15, color: Colors.black }}>\r\n                Next Disposition Notes\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                width: \"100%\",\r\n                height: 50,\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                allowFontScaling={false}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: 8,\r\n                  height: \"100%\",\r\n                  paddingHorizontal: 15,\r\n                  color: Colors.black,\r\n                  borderColor: Colors.gray,\r\n                  borderWidth: 1,\r\n                  fontSize: 14,\r\n                  padding: 2,\r\n                }}\r\n                value={ActivityNextDispositionNote}\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                onChangeText={(text) => setActivityNextDispositionNotes(text)}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{ height: 50 }}></View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default EditActivity;\r\nconst styles = StyleSheet.create({\r\n  activitytype: {\r\n    paddingHorizontal: 12,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    marginTop: 15,\r\n  },\r\n  inputContainer: { paddingHorizontal: 12, marginTop: 10 },\r\n\r\n  label: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  dropdownButton: {\r\n    backgroundColor: Colors.PrimaryColor,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: 40,\r\n    width: 40,\r\n    borderRadius: 100,\r\n    alignSelf: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  plusIcon: {\r\n    height: 15,\r\n    width: 15,\r\n    alignSelf: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  modalContent: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 8,\r\n    padding: 20,\r\n    alignItems: \"center\",\r\n    width: 200,\r\n  },\r\n  optionButton: {\r\n    paddingVertical: 10,\r\n    width: \"100%\",\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#EEEEEE\",\r\n  },\r\n  optionText: {\r\n    fontSize: 16,\r\n    textAlign: \"center\",\r\n  },\r\n  selectedValue: {\r\n    marginTop: 8,\r\n    fontSize: 16,\r\n    color: Colors.PrimaryColor,\r\n    textAlign: \"center\",\r\n  },\r\n  selectedValue: {\r\n    marginLeft: 10,\r\n  },\r\n});\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { url } from \"../config/url\";\nimport { postAPI } from \"../config/apiMethod\";\n\nexport const transectioAddActivity = createAsyncThunk(\n  \"transectioAddActivity\",\n  async () => {\n    const urlDynamic =\n      \"https://surf.topsearchrealty.com/wp-json/activity/addactivity\";\n    try {\n      const response = await postAPI(urlDynamic);\n      const { data } = response;\n      return data;\n    } catch (error) {\n      console.log(error);\n      if (error.response) {\n        console.log(\"API issue\", error.response);\n      } else if (error.request) {\n        console.log(\"API issue\", error.request);\n      } else {\n        console.log(\"API issue\", error.message);\n      }\n      throw error;\n    }\n  }\n);\n\nconst transectioAddActivitySlice = createSlice({\n  name: \"transectioAddActivity\",\n  initialState: {\n    transectioAddActivityData: [],\n    status: null,\n  },\n  extraReducers: {\n    [transectioAddActivity.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [transectioAddActivity.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.transectioAddActivityData = action.payload;\n    },\n    [transectioAddActivity.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default transectioAddActivitySlice.reducer;\n","import {\n  View,\n  Text,\n  TouchableOpacity,\n  Image,\n  Button,\n  Alert,\n  Picker,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../modules/getContacts\";\nimport { transectioAddActivity } from \"../../modules/transectionAddActivity\";\nimport Colors from \"../../utils/Colors\";\nimport { ScrollView, TextInput } from \"react-native-gesture-handler\";\n\nconst NewActivities = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const [contact, setContact] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [selectedValu, setSelectedValu] = useState(\"\");\n  const getAllContacts = () => {\n    dispatch(getContacts()).then((response) => {\n      const contactsData = response.payload.data;\n      setContact(contactsData);\n    });\n  };\n\n  const addNewActivity = () => {\n    const payload = {\n      // client_id: items.item.id,\n      // contact_lead_id: items.item.contact_lead_id,\n      // activity_type: activity,\n      // activity_content: login,\n      // activity_date: date,\n      // activity_notes: notes,\n      // contact_email: items.item.contact_email,\n      // agent_email: agentEmail,\n    };\n    dispatch(transectioAddActivity(payload)).then((response) => {\n      navigation.goBack();\n      console.log(response, \"response\");\n    });\n  };\n\n  const onhandleClick = () => {\n    addNewActivity();\n  };\n\n  useEffect(() => {\n    getAllContacts();\n  }, []);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View\n        style={{\n          backgroundColor: \"#576ebd\",\n          width: \"100%\",\n          height: \"10%\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => navigation.goBack()}\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginLeft: 10,\n          }}\n        >\n          <Image\n            style={{\n              height: 15,\n              width: 15,\n              resizeMode: \"contain\",\n              tintColor: Colors.white,\n            }}\n            source={require(\"../../../assets/back.png\")}\n          />\n          <Text style={{ fontSize: 15, color: Colors.white }}>Back</Text>\n        </TouchableOpacity>\n        <Text style={{ fontSize: 19, fontWeight: \"bold\", color: Colors.white }}>\n          New Activities\n        </Text>\n        <TouchableOpacity\n          // onPress={() => navigation.navigate(\"NewActivities\")}\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 10,\n          }}\n        ></TouchableOpacity>\n      </View>\n      <ScrollView>\n        <View style={{ backgroundColor: \"white\", margin: 2 }}>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginTop: 10,\n              margin: 10,\n              alignItems: \"center\",\n            }}\n          >\n            <Text style={{ fontSize: 14, margin: 5 }}>Activity Type</Text>\n            <Text style={{ fontSize: 14 }}>Required</Text>\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              margin: 10,\n              borderWidth: 1,\n              padding: 15,\n              borderColor: \"grey\",\n              borderRadius: 15,\n              justifyContent: \"space-between\",\n            }}\n          >\n            {/* <Picker\n              selectedValue={selectedValue}\n              onValueChange={(value) => setSelectedValue(value)}\n            >\n              <Picker.Item label=\"Note\" value=\"Note\" />\n              <Picker.Item label=\"Call\" value=\"Call\" />\n              <Picker.Item label=\"In Person\" value=\"In Person\" />\n              <Picker.Item label=\"Task\" value=\"Task\" />\n              <Picker.Item label=\"Video\" value=\"Video\" />\n            </Picker> */}\n            <TouchableOpacity>\n              <Image\n                style={{\n                  height: 15,\n                  width: 15,\n                  resizeMode: \"contain\",\n                  tintColor: \"grey\",\n                }}\n                source={require(\"../../../assets/arrowDown.png\")}\n              />\n            </TouchableOpacity>\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              margin: 10,\n            }}\n          >\n            <Text style={{ fontSize: 14, margin: 5 }}>Activity</Text>\n            <Text style={{ fontSize: 14, alignSelf: \"center\" }}>Required</Text>\n          </View>\n          <TextInput\n            style={{\n              margin: 10,\n              marginTop: 1,\n              borderWidth: 1,\n              padding: 15,\n              borderColor: \"grey\",\n              borderRadius: 15,\n            }}\n            placeholder=\"\"\n            onChangeText={(text) => text}\n          />\n          <Text style={{ fontSize: 14, margin: 10 }}>Contact</Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              margin: 10,\n              borderWidth: 1,\n              padding: 15,\n              borderColor: \"grey\",\n              borderRadius: 15,\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                margin: 10,\n                borderWidth: 1,\n                padding: 15,\n                borderColor: \"grey\",\n                borderRadius: 15,\n              }}\n            >\n              {/* <Picker\n                selectedValue={selectedValu}\n                onValueChange={(value) => setSelectedValu(value)}\n              >\n                {contact.map((contacts) => (\n                  <Picker.Item\n                    key={contacts.id}\n                    label={contacts.contact_name}\n                    value={contacts.id}\n                  />\n                ))}\n              </Picker> */}\n              <TouchableOpacity>\n                <Image\n                  style={{\n                    height: 15,\n                    width: 15,\n                    resizeMode: \"contain\",\n                    tintColor: \"grey\",\n                  }}\n                  source={require(\"../../../assets/arrowDown.png\")}\n                />\n              </TouchableOpacity>\n            </View>\n            <TextInput\n              style={{ flex: 1 }}\n              placeholder=\"\"\n              onChangeText={(text) => text}\n            />\n\n            <TouchableOpacity>\n              <Image\n                style={{\n                  height: 15,\n                  width: 15,\n                  resizeMode: \"contain\",\n                  tintColor: \"grey\",\n                }}\n                source={require(\"../../../assets/arrowDown.png\")}\n              />\n            </TouchableOpacity>\n          </View>\n          <Text style={{ margin: 10, fontSize: 14 }}>Due Date</Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"flex-start\",\n              margin: 10,\n              borderWidth: 1,\n              padding: 15,\n              borderColor: \"grey\",\n              borderRadius: 15,\n            }}\n          >\n            <TouchableOpacity>\n              <Image\n                style={{\n                  height: 15,\n                  width: 15,\n                  resizeMode: \"contain\",\n                  tintColor: \"grey\",\n                }}\n                source={require(\"./../../assets/images/calendar.png\")}\n              />\n            </TouchableOpacity>\n            <TextInput\n              style={{ flex: 1 }}\n              placeholder=\"\"\n              onChangeText={(text) => text}\n            />\n          </View>\n          <Text style={{ fontSize: 14, margin: 10 }}>Notes</Text>\n          <TextInput\n            style={{\n              margin: 10,\n              marginTop: 1,\n              borderWidth: 1,\n              padding: 15,\n              borderColor: \"grey\",\n              borderRadius: 15,\n            }}\n            multiline={true}\n            numberOfLines={4}\n            placeholder=\"\"\n            onChangeText={(text) => text}\n          />\n          <TouchableOpacity\n            style={{\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              backgroundColor: Colors.themeColor,\n              margin: 10,\n              height: 40,\n              borderRadius: 15,\n            }}\n            onPress={onhandleClick}\n          >\n            <Text style={{ color: \"black\" }}>Submit</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default NewActivities;\n","import React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  TextInput,\n  Switch,\n} from \"react-native\";\nimport Colors from \"../../utils/Colors\";\n\nconst TransactionDetails = ({ navigation }) => {\n  const [isEnabled, setIsEnabled] = useState(false);\n\n  const Submit = () => {\n    setIsEnabled((previousState) => !previousState);\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View\n        style={{\n          backgroundColor: \"#576ebd\",\n          width: \"100%\",\n          height: \"10%\",\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            marginTop: 20,\n          }}\n        >\n          <TouchableOpacity\n            onPress={() => navigation.goBack()}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginLeft: 10,\n            }}\n          >\n            <Image\n              style={{\n                height: 15,\n                width: 15,\n                resizeMode: \"contain\",\n                tintColor: Colors.white,\n              }}\n              source={require(\"../../../assets/back.png\")}\n            ></Image>\n            <Text style={{ fontSize: 15, color: Colors.white }}>Back</Text>\n          </TouchableOpacity>\n          <Text\n            style={{ textAlign: \"center\", alignSelf: \"center\",  fontSize: 19, fontWeight: \"bold\", color: Colors.white }}\n          >\n            TransactionDetails\n          </Text>\n          <TouchableOpacity\n            // onPress={() => navigation.navigate(\"NewActivies\")}\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginRight: 10,\n            }}\n          >\n            <Image\n              style={{\n                height: 15,\n                width: 15,\n                resizeMode: \"contain\",\n                // tintColor: Colors.white,\n                tintColor: \"white\",\n              }}\n              source={require(\"./../../assets/images/bin.png\")}\n            ></Image>\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View style={{ flex: 2, backgroundColor: \"white\" }}>\n        <View\n          style={{\n            margin: 10,\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Text style={{ fontSize: 16 }}>Activity Type</Text>\n          <Text>Required</Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            margin: 10,\n            alignItems: \"center\",\n            borderWidth: 0.5,\n            borderRadius: 10,\n            padding: 15,\n          }}\n        >\n          {/* <Image\n            style={{\n              height: 50,\n              width: 50,\n              resizeMode: \"contain\",\n              borderRadius: 100,\n              //   tintColor: Colors.white,\n            }}\n            source={require(\"./../../assets/images/notePad.jpeg\")}\n          ></Image> */}\n          <TextInput\n            style={{ fontSize: 16 }}\n            placeholder=\"Note\"\n            onChangeText={(tex) => tex}\n          />\n          <TouchableOpacity>\n            <Image\n              style={{\n                height: 15,\n                width: 15,\n                resizeMode: \"contain\",\n                tintColor: \"grey\",\n              }}\n              source={require(\"../../../assets/arrowDown.png\")}\n            ></Image>\n          </TouchableOpacity>\n        </View>\n        <Text style={{ fontSize: 16, margin: 10 }}>Subject</Text>\n        <TextInput\n          style={{\n            borderWidth: 0.5,\n            borderRadius: 10,\n            padding: 30,\n            margin: 10,\n          }}\n          placeholder=\"Test\"\n          onChangeText={(tex) => tex}\n        />\n\n        <Text style={{ margin: 10, fontSize: 14 }}>Due Date</Text>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"flex-start\",\n            margin: 10,\n\n            borderWidth: 0.5,\n            padding: 15,\n            // borderColor: \"grey\",\n            borderRadius: 10,\n          }}\n        >\n          <TouchableOpacity>\n            <Image\n              style={{\n                height: 15,\n                width: 15,\n                resizeMode: \"contain\",\n                tintColor: \"grey\",\n              }}\n              source={require(\"./../../assets/images/calendar.png\")}\n            ></Image>\n          </TouchableOpacity>\n          <TextInput style={{}} placeholder=\"\" onChangeText={(te) => te} />\n        </View>\n        <Text style={{ margin: 10, fontSize: 14 }}>Result</Text>\n        <TextInput\n          style={{\n            borderWidth: 0.5,\n            borderRadius: 10,\n            padding: 30,\n            margin: 10,\n          }}\n          placeholder=\"hello\"\n          onChangeText={(te) => te}\n        />\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            margin: 10,\n          }}\n        >\n          <Text style={{ margin: 10, fontSize: 16 }}>Completed</Text>\n          <View>\n            <Switch\n              style={{ height: 30, width: 50 }}\n              trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n              thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n              ios_backgroundColor=\"#3e3e3e\"\n              onValueChange={Submit}\n              value={isEnabled}\n            />\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\nexport default TransactionDetails;\n","import { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Login from \"../container/Login/Login\";\r\nimport AccessRequest from \"../container/AccessRequest/AccessRequest\";\r\nimport ForgotPassword from \"../container/FogotPassword/ForgotPassword\";\r\nimport DrawerNavigator from \"./DrawerNavigator\";\r\nimport AccessRequestSent from \"../container/AccessRequestSent/AccessRequestSent\";\r\nimport EnterPin from \"../container/EnterPin/EnterPin\";\r\nimport Colors from \"../utils/Colors\";\r\nimport ContactsDetails from \"../container/ContactsDetails/ContactsDetails\";\r\nimport AddContacts from \"../container/AddContacts/AddContacts\";\r\nimport AddProperties from \"../container/AddProperties/AddProperties\";\r\nimport EditContactsDetails from \"../container/EditContactsDetails/EditContactsDetails\";\r\nimport PropertiesDetails from \"../container/PropertiesDetails/PropertiesDetails\";\r\nimport DeletePropertiy from \"../container/DeletePropertiy/DeletePropertiy\";\r\nimport AddClients from \"../container/AddClients/AddClients\";\r\nimport MyClientsDetails from \"../container/MyClientsDetails/MyClientsDetails\";\r\nimport EditProfile from \"../container/EditProfile/EditProfile\";\r\nimport AddActivity from \"../container/AddActivity/AddActivity\";\r\nimport NewNote from \"../container/NewNote/NewNote\";\r\nimport EditClientsDetails from \"../container/EditClientsDetails/EditClientsDetails\";\r\nimport Documents from \"../container/Documents/Documents\";\r\nimport PropertiesViewedByLeads from \"../container/PropertiesViewedByLeads/PropertiesViewedByLeads\";\r\nimport PropertiesViewed from \"../container/PropertiesViewed/PropertiesViewed\";\r\nimport EditActivity from \"../container/EditActivity/EditActivity\";\r\nimport NewActivies from \"../container/Transactions/NewActivies\";\r\nimport TransactionDetails from \"../container/Transactions/TransactionDetails\";\r\nimport Leads from \"../container/Leads/Leads\";\r\nimport DisPosition from \"../container/DisPosition/DisPosition\";\r\nconst Stack = createStackNavigator();\r\n\r\nfunction StackNavigator() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        cardStyle: { backgroundColor: Colors.PrimaryColor },\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Login\" component={Login} />\r\n      <Stack.Screen name=\"AccessRequest\" component={AccessRequest} />\r\n      <Stack.Screen name=\"AccessRequestSent\" component={AccessRequestSent} />\r\n      <Stack.Screen name=\"EnterPin\" component={EnterPin} />\r\n      <Stack.Screen name=\"ForgotPassword\" component={ForgotPassword} />\r\n      <Stack.Screen name=\"Dashboard\" component={DrawerNavigator} />\r\n      <Stack.Screen name=\"ContactsDetails\" component={ContactsDetails} />\r\n      <Stack.Screen name=\"AddContacts\" component={AddContacts} />\r\n      <Stack.Screen name=\"AddProperties\" component={AddProperties} />\r\n      <Stack.Screen name=\"NewActivies\" component={NewActivies} />\r\n      <Stack.Screen name=\"TransactionDetails\" component={TransactionDetails} />\r\n\r\n      <Stack.Screen\r\n        name=\"EditContactsDetails\"\r\n        component={EditContactsDetails}\r\n      />\r\n      <Stack.Screen name=\"PropertiesDetails\" component={PropertiesDetails} />\r\n      <Stack.Screen name=\"DeletePropertiy\" component={DeletePropertiy} />\r\n      <Stack.Screen name=\"AddClients\" component={AddClients} />\r\n      <Stack.Screen name=\"MyClientsDetails\" component={MyClientsDetails} />\r\n      <Stack.Screen name=\"EditProfile\" component={EditProfile} />\r\n      <Stack.Screen name=\"AddActivity\" component={AddActivity} />\r\n      <Stack.Screen name=\"EditActivity\" component={EditActivity} />\r\n      <Stack.Screen name=\"NewNote\" component={NewNote} />\r\n      <Stack.Screen name=\"EditClientsDetails\" component={EditClientsDetails} />\r\n      <Stack.Screen name=\"Documents\" component={Documents} />\r\n      <Stack.Screen name=\"Leads\" component={Leads} />\r\n      <Stack.Screen name=\"DisPosition\" component={DisPosition} />\r\n\r\n      <Stack.Screen\r\n        name=\"PropertiesViewedByLeads\"\r\n        component={PropertiesViewedByLeads}\r\n      />\r\n      <Stack.Screen name=\"PropertiesViewed\" component={PropertiesViewed} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\nexport default StackNavigator;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getAPI } from \"../config/apiMethod\";\r\nimport { url } from \"../config/url\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nexport const getMyClientList = createAsyncThunk(\"getMyClientList\", async () => {\r\n  const id = await AsyncStorage.getItem(\"userId\");\r\n  const urlDynamic =\r\n    \"https://surf.topsearchrealty.com/wp-json/leads/contacts/?userid=\" + id;\r\n  return await getAPI(urlDynamic)\r\n    .then(async (response) => {\r\n      console.log(response, \"amg\");\r\n      const { data } = response;\r\n      return data;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      if (e.response) {\r\n        console.log(\"api issue\", e.response);\r\n      } else if (e.request) {\r\n        console.log(\"api issue\", e.response);\r\n      } else {\r\n        console.log(\"api issue\", e.response);\r\n      }\r\n    });\r\n});\r\n\r\nconst getMyClientListSlice = createSlice({\r\n  name: \"getMyClientList\",\r\n  initialState: {\r\n    getMyClientListData: [],\r\n    status: null,\r\n  },\r\n  extraReducers: {\r\n    [getMyClientList.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getMyClientList.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.getMyClientListData = action.payload;\r\n    },\r\n    [getMyClientList.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default getMyClientListSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport loginUserReducer from \"../modules/loginUser\";\r\nimport getPropertiesReducer from \"../modules/getProperties\";\r\nimport getSearchPropertiesReducer from \"../modules/getSearchProperties\";\r\nimport getPropertiesDetailsReducer from \"../modules/getPropertiesDetails\";\r\nimport getContactsReducer from \"../modules/getContacts\";\r\nimport getSearchHistoryReducer from \"../modules/getSearchHistory\";\r\nimport getDashbaordDataReducer from \"../modules/getDashboardData\";\r\nimport getMyClientListReducer from \"../modules/getMyClientList\";\r\nimport updateContactReducer from \"../modules/deleteContact\";\r\nimport getClientDetailsReducer from \"../modules/getMyClientDetails\";\r\nimport activityHistoryReducers from \"../modules/activityHistory\";\r\nimport addActivityTaskReducers from \"../modules/addActivityTask\";\r\nimport activityAddnoteReducers from \"../modules/activityAddnote\";\r\nimport transectionActivityReducer from \"../modules/transectionActivity\";\r\nimport transectionAddActivityReducer from \"../modules/transectionAddActivity\";\r\nimport getMeterDataReducer from \"../modules/getMeterValue\";\r\nimport getDocumentReducer from \"../modules/getDocument\";\r\nimport getActivityTaskReducer from \"../modules/getActivityTask\";\r\nimport getNoteDataReducer from \"../modules/getNoteData\";\r\nimport addContactReducer from \"../modules/addContact\";\r\nimport addDispositionReducer from \"../modules/addDisposition\";\r\nimport getDispositionReducer from \"../modules/getDisposition\";\r\nimport getTodayDiposReducer from \"../modules/getTodayDipos\";\r\nimport currentDispositionReducer from \"../modules/currentDisposition\";\r\n// import getRatingsReducer from \"../modules/getActiveClient\";\r\nexport const store = configureStore({\r\n  reducer: {\r\n    loginUser: loginUserReducer,\r\n    getProperties: getPropertiesReducer,\r\n    getSearchProperties: getSearchPropertiesReducer,\r\n    getPropertiesDetails: getPropertiesDetailsReducer,\r\n    getContacts: getContactsReducer,\r\n    getSearchHistory: getSearchHistoryReducer,\r\n    getDashbaordData: getDashbaordDataReducer,\r\n    getMyClientList: getMyClientListReducer,\r\n    updateContact: updateContactReducer,\r\n    getClientDetails: getClientDetailsReducer,\r\n    activityHistory: activityHistoryReducers,\r\n    addActivityTask: addActivityTaskReducers,\r\n    activityAddnote: activityAddnoteReducers,\r\n    transectioActivity: transectionActivityReducer,\r\n    transectioActivity: transectionAddActivityReducer,\r\n    getMeterData: getMeterDataReducer,\r\n    getDocument: getDocumentReducer,\r\n    getActivityTask: getActivityTaskReducer,\r\n    getNoteData: getNoteDataReducer,\r\n    addContact: addContactReducer,\r\n    addDispositon: addDispositionReducer,\r\n    getDisposition: getDispositionReducer,\r\n    getTodayDipos: getTodayDiposReducer,\r\n    currentDisposition: currentDispositionReducer,\r\n    // getRatings: getRatingsReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n      hasError: true,\r\n      errorName: \"ValidationError\",\r\n      errorMessage: \"Foo must be greater than Bar\",\r\n    }),\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"react-native-gesture-handler\";\r\nimport { Node } from \"react\";\r\nimport { StatusBar, Platform, View, SafeAreaView } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport StackNavigator from \"./src/navigation/StackNavigator\";\r\nimport { store } from \"./src/redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport Colors from \"./src/utils/Colors\";\r\nimport Apps from \"./App\";\r\nconst App = () => {\r\n  useEffect(() => {});\r\n\r\n  return (\r\n    <SafeAreaView\r\n      style={{\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        backgroundColor: Colors.PrimaryColor,\r\n      }}\r\n    >\r\n      <StatusBar\r\n        backgroundColor={Colors.PrimaryColor}\r\n        barStyle=\"light-content\"\r\n      />\r\n      <Provider store={store}>\r\n        <NavigationContainer>\r\n          <StackNavigator />\r\n        </NavigationContainer>\r\n      </Provider>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 44707,\n\t\"./bs.js\": 44707,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [690], () => (__webpack_require__(82443)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["PrimaryColor","white","buttonColor","black","gray","cream","lightblack","AppButton","props","_jsx","TouchableOpacity","style","width","height","justifyContent","alignItems","backgroundColor","Colors","marginTop","borderRadius","alignSelf","btnStyle","onPress","children","Text","allowFontScaling","color","fontSize","textStyle","btnText","View","flex","ActivityIndicator","size","postAPI","_ref","_asyncToGenerator","url","data","header","arguments","length","undefined","params","Authorization","axios","method","timeout","headers","_x","_x2","apply","getAPI","_ref2","_ref3","_x5","_ref4","_ref5","loginUser","createAsyncThunk","dispatch","console","log","then","response","status","ids","ID","AsyncStorage","setItem","JSON","stringify","metadata","custom_picture","catch","e","request","createSlice","name","initialState","loginData","extraReducers","_extraReducers","_defineProperty","pending","state","action","fulfilled","payload","rejected","Login","navigation","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","activity","setActivity","useDispatch","useEffect","userLogin","username","navigate","setTimeout","Alert","alert","SafeAreaView","Activity","_jsxs","ScrollView","fontWeight","styles","inputView","TextInput","autoCapitalize","placeholder","placeholderTextColor","value","onChangeText","secureTextEntry","flexDirection","Image","source","require","marginLeft","StyleSheet","create","container","image","marginBottom","borderWidth","borderColor","forgot_button","loginBtn","AccessRequest","emailAddress","route","useNavigation","textAlign","goBack","ForgotPassword","setConfirmPassword","Images","appLogo","confirmPassword","loginText","padding","label","plusButton","paddingVertical","toggleDrawer","resizeMode","plus","getDashboardData","user_id","getItem","message","bookData","bookStatus","getContacts","urlDynamic","getContactsData","getMeterData","Dashboard","meterValue","setMeterValue","_useState7","_useState8","_useState9","_useState10","setLoading","isFocused","useIsFocused","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","setData","getDashboardDataApiCall","getAllContacts","getMeter","getActiveClient","contactsData","Object","values","fetch","ok","Error","json","error","StatusBar","Header","alignContent","FlatList","horizontal","renderItem","item","index","marginHorizontal","contact_name","charAt","RNSpeedometer","minValue","maxValue","allowedDecimals","labels","labelColor","activeBarColor","scrollEnabled","borderBottomColor","paddingHorizontal","marginRight","uri","contact_image","contact_email","details","setSearchText","filteredData","setFilteredData","isSearching","setIsSearching","getLeads","tintColor","text","filteredItems","filter","property_key","includes","showsVerticalScrollIndicator","ListFooterComponent","borderBottomWidth","type","flexWrap","handleUsernameClick","Phone","Date","created_date","toLocaleDateString","ListEmptyComponent","loading","paddingTop","paddingBottom","toLowerCase","post_title","recipient","Linking","openURL","sendEmail","phoneNumber","sendSMS","contact_number","makePhoneCall","onRefresh","refreshing","keyExtractor","id","transectioActivity","transectioActivityData","agentEmail","setAgentEmail","note","setActivityNote","futureActivity","setFutureActivity","date","setDate","selectedDate","setSelectedDate","isDatePickerVisible","setDatePickerVisibility","isModalVisible","setModalVisible","selectedOption","setSelectedOption","_useState19","_useState20","isSecondModalVisible","setSecondModalVisible","_useState21","_useState22","selectedSecondOption","setSelectedSecondOption","_useState23","_useState24","isThirdModalVisible","setThirdModalVisible","_useState25","_useState26","selectedThirdOption","setSelectedThirdOption","getData","hideDatePicker","closeModal","closeSecondModal","closeThirdModal","handleThirdOptionSelect","option","handleSecondOptionSelect","handleOptionSelect","userDetails","parse","user_email","position","left","activitytype","selectedValue","Modal","animationType","transparent","visible","onRequestClose","modalContainer","modalContent","optionButton","optionText","inputContainer","verticalAlign","autoCorrect","returnKeyType","datePickerButton","datePickerText","toLocaleString","timeZone","hour12","year","month","day","hour","minute","formatDate","DateTimePickerModal","isVisible","mode","onConfirm","onCancel","currentDateTime","moment","format","contact_id","contact_lead_id","activity_type","activity_disposition_notes","activity_next_disposition","next_disposition_notes","next_disposition_date","agent_email","activity_publish_date","activity_disposition","addDisposition","dropdownButton","plusIcon","isEnabled","setIsEnabled","isChecked","setChecked","setToggle","toggleSwitch","previousState","items","maincover","firstcolnew","maincolumn","mainheading","mainheadinginner","activitycover","Checkbox","checkbox","onValueChange","activityname","mainheadingend","activitycoverone","activitydate","firstcol","activityicons","activityiconstoggle","Switch","mainbt","trackColor","false","true","thumbColor","ios_backgroundColor","activitydatered","mainheadinginnerend","activitydateyellow","activitycoverred","paddingRight","Tab","createBottomTabNavigator","CustomTabBar","descriptors","_Fragment","maxHeight","borderTopColor","borderTopWidth","KeyboardAvoidingView","routes","map","options","key","tabBarLabel","title","tabBarIcon","accessibilityRole","accessibilityState","selected","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","event","emit","target","canPreventDefault","defaultPrevented","merge","onLongPress","bottom","Navigator","screenOptions","headerShown","keyboardHidesTabBar","tabBar","_objectSpread","Screen","component","tabBarHideOnKeyboard","Contact","Leads","TransactionDesk","tabBarBackground","useRef","htmlTemplate","contact","contact_full_name","linked_lead","join","htmlFileUri","FileSystem","cacheDirectory","writeAsStringAsync","encoding","UTF8","pdfFileUri","Print","printToFileAsync","html","base64","filePath","Sharing","shareAsync","mimeType","dialogTitle","deleteAsync","idempotent","res","DocumentPicker","Width","getProperties","page","getPropertiesData","getSearchProperties","getSearchPropertiesData","getSearchhistory","getSearchhistoryData","search","setSearch","setIsRefreshing","setHistoryData","searchView","setSearchView","getAllProperties","concat","_toConsumableArray","getSearchPropertiesApiCall","zIndex","top","extraData","numColumns","activeOpacity","margin","images","large","originallistprice","lo","onEndReachedThreshold","userData","setUserDetails","display_name","getFavoriteProperties","getFavoritePropertiesData","img","Drawer","createDrawerNavigator","CustomDrawerContent","headerStyle","drawerContent","headerTintColor","drawerIcon","headerBackgroundContainerStyle","TabNavigator","Contacts","myClients","Properties","dashboard","Profile","AccessRequestSent","EnterPin","pin","setPin","oldPin","inputMode","maxLength","leadType","setLeadType","leadData","matches","match","paddingLeft","addContact","contactData","headerText","scrollViewContent","flexGrow","content","pickerContainer","picker","textInputContainer","textInput","setName","lastName","setLastName","phone","setPhone","meetingType","setMeetingType","setSelectedValue","dropdownData","setDropdownData","uriResponse","setUriResponse","comment","setComment","_useState27","_useState28","agentId","setAgentId","_useState29","_useState30","selectedContactType","setSelectedContactType","_pickImage","ImagePicker","granted","pickerResult","mediaTypes","allowsEditing","aspect","quality","cancelled","base64Image","handleAddContact","user_first_name","user_last_name","user_mobile","agentid","schedule_mode","propid","contactimg","userrole","keyboardType","Picker","itemValue","Item","property_address","formattedDate","second","contactType","Button","updateContact","updateContactData","reducers","builder","addCase","setLinkedId","handleDelete","contactid","editable","getPropertiesDetails","getPropertiesDetailsData","getPropertiesDetailsApiCall","setdata","mapUrl","property_latitude","property_longitude","canOpenURL","supported","goToMap","property_size","property_bedrooms","bathroomsfull","modified","dateStyle","timeStyle","yearbuilt","listagentfullname","listagentpreferredphone","listagentemail","alertContainer","buttonDelete","borderBottomRightRadius","buttonCancel","borderBottomLeftRadius","buttonText","onDelete","firstName","secondName","onClose","showAlert","setShowAlert","CustomAlert","setID","setLogin","uploadImage","getClientDetails","activityHistory","activityHistoryData","getActivityData","getNoteData","getDocument","getDocumentData","getDisposition","getDispositionData","getTodayDipos","getTodayDiposData","getCurrentDisposition","getCurrentDispositionData","headingmaintype","subheadingmaintype","textTransform","subheadingmaintypeinner","subheadingmaintypeinnerdate","nodata","mainpropertydata","editactivity","modalVisible","history","setHistory","setNote","property","setProperty","todayDipo","setTodayDipo","futureDipo","setFutureDipo","setCurrentDisposition","selectedActivityType","setSelectedActivityType","_useState31","_useState32","selectedTodayActivityType","setSelectedTodayActivityType","_useState33","_useState34","_useState35","_useState36","showAllItems","setShowAllItems","itemsToShow","_useState37","_useState38","showAllNotes","setShowAllNotes","notesToShow","disPosition","MyClientsDetails","allActivityHistory","MyNoteData","currentDisposition","TodayDisPosition","clientData","propTitles","flatMap","property_viewed","prop_title","linked_id","updatedLeadTypes","getParamNameFromUrl","paramKey","regex","RegExp","split","noteData","panResponder","PanResponder","onMoveShouldSetPanResponder","_","gestureState","Math","abs","dx","dy","onPanResponderRelease","current","dateString","toLocaleTimeString","Share","share","toString","React","activity_notes","propertydata","slice","note_content","activity_date","borderTopLeftRadius","borderTopRightRadius","panHandlers","transform","rotate","showsHorizontalScrollIndicator","uploadFile","api","baseURL","FormData","append","post","addActivityTask","addActivityTaskData","login","notes","setNotes","client_id","activity_content","addActivity","contentContainerStyle","multiline","numberOfLines","activityAddnote","activityAddnoteData","note_client_id","note_contact_lead_id","activity_note_content","note_created_date","textAlignVertical","tmp_name","screenWidth","Dimensions","get","favroites","time","slideOuter","button","pagination","paginationDot","paginationDotActive","back","BorderColor","borderLeftWidth","borderLeftColor","textColorLight","right","historyData","getAllHistory","onTouchStart","ActivityType","setActivityType","ActivityDispositionNotes","setActivityDispositionNotes","ActivityNextDisposition","setActivityNextDisposition","ActivityNextDispositionNote","setActivityNextDispositionNotes","ActivityNextDispositionDate","setActivityNextDispositionDate","ActivityDisposition","setActivityDisposition","taskId","setTaskId","task_id","updateActivity","transectioAddActivity","transectioAddActivityData","setContact","themeColor","tex","te","Stack","createStackNavigator","cardStyle","DrawerNavigator","ContactsDetails","AddContacts","AddProperties","NewActivies","TransactionDetails","EditContactsDetails","PropertiesDetails","DeletePropertiy","AddClients","EditProfile","AddActivity","EditActivity","NewNote","EditClientsDetails","Documents","DisPosition","PropertiesViewedByLeads","PropertiesViewed","getMyClientList","getMyClientListData","store","configureStore","reducer","loginUserReducer","getPropertiesReducer","getSearchPropertiesReducer","getPropertiesDetailsReducer","getContactsReducer","getSearchHistory","getSearchHistoryReducer","getDashbaordData","getDashbaordDataReducer","getMyClientListReducer","updateContactReducer","getClientDetailsReducer","activityHistoryReducers","addActivityTaskReducers","activityAddnoteReducers","transectionActivityReducer","transectionAddActivityReducer","getMeterDataReducer","getDocumentReducer","getActivityTask","getActivityTaskReducer","getNoteDataReducer","addContactReducer","addDispositon","addDispositionReducer","getDispositionReducer","getTodayDiposReducer","currentDispositionReducer","middleware","getDefaultMiddleware","serializableCheck","hasError","errorName","errorMessage","barStyle","Provider","NavigationContainer","StackNavigator","registerRootComponent","App","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","keys","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","j","every","splice","r","n","getter","__esModule","d","a","definition","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}